REMSTART
-------------------------------------------------------------------
Program Name: Adapt
Version: 1.1
-------------------------------------------------------------------
Written by: Owen Shevlin
-------------------------------------------------------------------
REMEND

Sync on
Sync rate 30
Disable escapekey
Disable systemkeys
Hide mouse
Set display mode 1024, 768, 16
Set text font "Consolas"

`---------------------------------------------------------------------------------------
`Initialises variables needed for launch:-

   `Launch Variables
   `----------------

   `Stores the value to randomise the random number generations.
   randomiser$ = ""

   `Tells the game how long the loading bar should be.
   loadStage = 0

   `Displays the stage the game is at in the loading procedure.
   loadString$ = ""

   `Stores the value used to create unique player IDs.
   totalPlayers$ = ""

   `Boolean to tell the game if setup is running or not.
   setUp = 1

`Loads array needed for initial set up:-

   `Stores options preferences and previous options preferences.
   `1D: One entry per option.
   `2D: Stores current setting and previous setting of the option. (Used to determine
   `     if windowed state needs to be readjusted, etc.)
   Dim fileOptions$(6,2)

`Sets up the game screen, and RNGs.
GoSub SetUp

`---------------------------------------------------------------------------------------

VariableSet:
`Marker to find variable initializing area.

`Loads loading screen image.
Load image "Images/Menu/Loading Screen.png", 751
Load image "Images/Ships/Loading Ship.png", 752

`==========================
loadStage = 0
loadString$ = "Initializing variables..."
GoSub LoadingScreenHandling
`==========================

`===== INITIALISING VARIABLES =====

`Log In Variables
`----------------

`Stores the access level of the player.
playerType$ = ""

`Stores what menu prompt should be open (purchase window, mission screen, etc.)
boxFocus = 0

`Stores the username and password of the user on log in.
userName$ = ""
passWord$ = ""

`Used to censor the player's password on the log in screen.
passDisplay$ = ""

`Stores data from the player for making a new account.
newName$ = ""
newPass1$ = ""
newPass2$ = ""

`Censor's players password on the Create Account screen.
newDisplay1$ = ""
newDisplay2$ = ""

`Stores the admin's username and password on the admin log in screen.
adminName$ = ""
adminPass$ = ""

`Used to censor passwords in the admin area.
adminDisplay1$ = ""
adminDisplay2$ = ""

`Menu Variables
`--------------

`Stores the menu that should be displayed.
menu$ = "Title"

`Variables that store the last menu the player was on in various circumstances.
prevMenu1$ = "Main"
prevMenu2$ = "Main"
prevMenu3$ = "Main"

`Used to delay button presses in the button handlers.
buttonTimer = 0

`Stores the music the player has chosen for the endless mode.
setMusic = 1

`Tells the game whether or not to display the mouse.
mouse = 1

`Stores how far down a list of items a player is (such as high score table, customisation menu, etc.)
menuScroll = 0

`Variables used to tell the player if their power core has been correctly equipped.
powerCoreSlot = 0
powerCoreFilled = 0
powerCoreChosen$ = ""

`Stores what mode the high score table should be in.
highScoreMode$ = ""

`Variables used when sorting the high score records.
sortLimit = 0
sortField = 0

`Stores the player's high score, which should be retrieved from the database.
playerHighScore$ = ""

`Tells the game what item the player is buying, and what content to display in the window.
buyWindow = 0

`Stores the price, name and level requirement for the item in the shop screen.
buyPrice = 0
buyName$ = ""
buyLevel = 0

`Stores values for displaying the ratings of a ship in the Customisation menu.
speedRating = 0
powerRating = 0
forceRating = 0
sizeRating = 0

`Stores the location of a player's data in the database during updating procedures.
saveNumber = 0

`Tells the game which song to load from the game's files.
songToLoad = 0

`Stores the number of the save file in use in the mission mode.
save = 0

`Tells the game what options to enable when in the save screen.
editMode = 0

`Stores the save file selected for deletion.
fileSelected = 0

`Stores the mission number that the player has chosen.
missionNumber = 0

`Tells the game that the player's score has been found in the game.
scoreFound = 0

`Stores how many levels to unlock in the Cooperative mode.
furthestLevel = 0

`Used to store any validation results when trying to run the Multiplayer Modes.
multiValidate = 0

`Stores what part of the options screen to display.
optionsMenu$ = ""

`Tells the game if any changes have been made to the options in the options screen, which is used to display the saving
`buttons if changes have been made.
changesMade = 0

`Variables used to store the data for the prompt system.
promptHeader$ = ""
promptLine1$ = ""
promptLine2$ = ""
promptActive = 0
promptType$ = ""

`Stores what part of the Change Player Data menu to display in the Admin menu.
adminChangeMode$ = ""

`Variables used to search for players in the database in the admin mode.
adminFind$ = ""
playerFound = 0

`Stores the data entered on the username or password change screens.
adminNew1$ = ""
adminNew2$ = ""

`Variables used to store data for the messaging system, in both reading and writing.
messageNumber = 0
messageMode$ = "Menu"
messagePlayer$ = ""
messageLine1$ = ""
messageLine2$ = ""
messageLine3$ = ""
messageLine4$ = ""
messageDate$ = ""
messageRead = 0
messageFound = 0
messageCycles = 0
messageDirection$ = "Forward"
linesToInput = 0

`Tells the game what sound to play when returning from the game.
soundToPlay = 0

`Stores the ship number when displaying the ship stats in the Customisation menu.
modelNumber = 0

`Used in the validation routines for the Create Account, Username Change and Password Change screens.
badChar = 0
badString$ = ""

`Variables used to store the data needed for saving images.
bmpDate$ = ""
bmpTime$ = ""

`Runs timer to make sure images are not saved to quickly.
bmpTimer = 0

`Stores the setting of the Username or Password changing screens in the options screen.
optionsChangeMode$ = ""

`==========================
loadStage = 1
loadString$ = "Initializing variables..."
GoSub LoadingScreenHandling
`==========================

`In Game Variables
`-----------------

`Tells the game if the player has paused the game, or if the game has ended.
gameStopped = 0
gamePaused = 0

`Used to break out of the game loop.
endGame = 0

`Tells the game if the sounds at the game over screen have been played.
soundPlayed = 0

`Stores the result of the Bitz and Experience calculations.
bitzEarned# = 0
expEarned# = 0

`Stores the multipliers for the two singleplayer game modes.
endlessDifficulty# = 0
missionDifficulty# = 0

`Stores the current player number and the total player numbers.
playerNumber = 1
playerTotal = 1

`Tells the game if a new high score has been set.
newHighScore = 0

`Tells the game if the player's high score has been saved, or if a new record
`needs to be created for the player's score.
scoreStored = 0

`Stores the bonusBitz and Experience the player should be awarded for beating the mission mode.
bitzReward = 0
expReward = 0

`Variables used to store large calculations in one variable.
positionChange = 0
spriteX = 0
spriteY = 0
healthChange = 0

`Multipliers to change the speeds of the player, their projectiles, enemies and their projectiles.
playerSpeedModifier = 1
pLaserSpeedModifier = 1
enemySpeedModifier = 1
eLaserSpeedModifier = 1

`Multiplier that changes how the game allocates points.
pointModifier = 1

`Stores the next laser that should be fired by the player.
laserNumber = 0

`Stores the timer that will prevent the player from firing again immediately.
laserStop = 0

`Stores the current laser that is being evaluated by the game.
currentLaser = 0

`Stores the power core currently in use.
powerCoreActive$ = ""

`Tells the game if a power core is currently in use.
powerCoreUse = 0

`Stores the probability that a power core will appear.
powerChance = 0

`Stores they power core that will be spawned.
powerSelect = 0

`Variable used to run the power core bar at the top of the screen.
powerTimeCurrent = 0
powerTimeMax = 0

`==========================
loadStage = 2
loadString$ = "Initializing variables..."
GoSub LoadingScreenHandling
`==========================

`Stores the variable that will tell the game if auto fire is enabled.
autoFire = 0

`Runs a timer to ensure that the auto fire feature is not toggled immediatiely after pressing
`the button that activates it.
autoFireTimer = 0

`Stores the wave number of the enemies.
enemyGroup# = 1.0

`Stores the type of enemies that should be spawned.
enemyFormation = 0

`A variable that will tell the game whether or not to change how the enemies are spawned.
enemyVariation = 0

`Tells the game how much to add onto the enemy X coordinates.
distanceAdderX = 0
distanceAdderY = 0

`Stores the probability that an enemy will fire at the player.
enemyLaserChance = 0

`Tells the game if the mission has been completed.
missionEnd = 0

`Stores the wavenumber of the mission mode.
missionStage = 0

`Stores the number of the boss that should be spawned.
bossForm = 0

`Stores the sum of all the active bosses' health to display on screen.
bossHealthTotal = 0

`Stores the number of the projectile that shoud be fired when the boss fires its next projectile.
bossProjectile = 1
bossProjectile2 = 1

`Stores the time until the boss can fire again.
bossLaserRecharge = 0

`Stores the time until the boss summons another wave of enemies.
summonTimer = 0

`Stores the number of bosses defeated by the player, which will multiply the users Bitz and Experience
`at the end of the game.
bossesKilled = 0

`Variable used to change the coordinates that the boss will fire from.
cannon = 0

`Tells the game when to make the Rogue Adapt bosses mirror the player's firing.
playerLaserFired = 0

`Stores the music that should be played when the boss appears.
bossMusic = 0

`Stores either the lives or the kills of the two teams.
team1Score = 0
team2Score = 0

`Stores the lives of the players in coop.
coopLives = 0

`Tells the game whether or not the player is alive in the game.
player1Life = 0
player2Life = 0

`Tells the game which player killed the enemy, and which player to award score to.
enemyKiller = 1

`Used to tell the game when to make the player disappear.
disappear = 0
disappear2 = 0

`Stores the total number of deaths for each player.
player1Deaths = 0
player2Deaths = 0

`Debug and Admin Variables
`-------------------------

`Tells the game if the debug mode has been activated.
debugModeOn = 0

`Tells the game if the debug menu should be shown.
debugMenuShow = 0

`Runs the timer to create a short delay between the activation and deavtivation of debug features.
debugTimer = 0

`Variables used to tell the game if the specific debug modes are activated.
debugShowDataIn = 0
debugAllowDeath = 0
debugInfiniteHealth = 0
debugWaveAdvance = 0
debugShowFPS = 0
debugScorePlus = 0
debugKillsPlus = 0
debugKillEnemies = 0
debugStopEnemies = 0
debugShowDataOut = 0
debugBuyAll = 0
debugPlayAll = 0
debugLevelUp = 0
debugBitzUp = 0

`Variable used to store the start and end adresses of the backup files.
backupStart$ = ""
backupEnd$ = ""

`Other Variables
`---------------

`Used to summate total number of enemies and bosses on screen in the debug mode.
c = 0

`Used to run the various For Loops in the game.
i = 0
j = 0
k = 0
l = 0

`Constants
`---------

`Constant used to fill the timers of the game.
TIMER = 15

`Sets the duration of the player's invincibility timer.
INVINCIBILITYTIME = 100

`Sets the chance that a power core will appear in any given frame.
POWERMAX = 1000

`Sets the probability that an enemy will fire in any given frame.
ENEMYSHOOTCHANCE = 150

`Sets the maximum value that the game can increate the endlessDifficulty# variable to.
DIFFICULTYMAX# = 3

`Stores the total amount of formations in the game which is then used to randomly select one of these formations.
FORMATIONS = 82

`Constants used to store the values of the sprites in the game.
SPRITEPLAYER = 1
SPRITESHIELD = 9
SPRITEENEMY = 61
SPRITEBOSS = 101

ArraySet:
`Marker to find array creation area.

`===== INITIALISING ARRAYS =====

`==========================
loadStage = 3
loadString$ = "Creating arrays..."
GoSub LoadingScreenHandling
`==========================

`Stores power cores and how many the player has of each.
`1D: One entry per power core. Extra entry for extra lives.
`2D: Stores power core count, coooldown timer, duration timer, if it
`     is currently on the game screen, its X position, Y position, and the
`     image it uses.
Dim powerCores(5,7)

`Stores all data related to enemies on screen.
`1D: one entry per enemy.
`2D: Stores enemy presence value, group number, enemy type, xPos, yPos, health,
`     xSpeed, ySpeed, sprite number, image number, what the ship was defeated by,
`     special conditions(invincibility, etc.), score provided when killed, the
`     last projectile it was hit with, and a timer to display the score earned.
Dim enemyData(20,15)

`Stores data related to boss battles.
`1D: One entry per boss part.
`2D: Stores boss part presence value, boss part number, xPos, yPos, health,
`     xSpeed, ySpeed, score provided when killed, sprite number, image number,
`     the last projectile it was hit with, and the boss' projectile fire timer.
Dim bossData(5,12)

`Stores projectiles from player. Max 8 on screen per player.
`1D: 1 entry per laser, 8 lasers per player.
`2D: Keeps track of laser presence, X position, Y position, speed,
`     laser damage, damage done to the laser, and laser image number.
Dim playerProjectiles(32,7)

`Stores data on enemy projectiles.
`1D: One entry per enemy.
`2D: Stores laser presence, xPos, yPos, speed and damage of enemy projectiles.
Dim enemyProjectiles(20,5)

`==========================
loadStage = 4
loadString$ = "Creating arrays..."
GoSub LoadingScreenHandling
`==========================

`Used to store data about the player(s) and their avatars.
`1D: One entry per player.
`2D: Stores ship X coordinate, ship Y coordinate, ship X speed, ship Y speed,
`     health, ship model, ship colour, each of it's power cores (1 to 4),
`     it's appropriate image number, score, kills, and whether or not the
`     player has been killed.
`     In multiplayer, last 6 entries are used for player presence value,
`     their control scheme, their laser number, their laser
`     timer, their invincibility/respawn timer and their damage taking variable.
Dim playerData$(4, 21)

`Monitors mission mode progress.
`1D: One entry per mission.
`2D: Stores mission status (Unlocked, beaten, etc.), X position and Y position
`     of map icon and the mission name.
Dim missionData$(20,4)

`Stores all of the player data in an array for log in.
`1D: One entry per player.
`2D: Stores player ID, player name, player password and whether or not the
`     player has validated their account.
Dim filePlayerStore$(10,4)

`Stores all of the links between player IDs and account IDs.
`1D: One entry per link.
`2D: Stores player ID and account ID.
Dim filePlayerLink$(10,2)

`Stores all of the account data in an array temporarily.
`1D: One entry per account.
`2D: Stores account ID, level, experience, Bitz, ship type, colour, power core
`     choices (1 to 4), and the date the account was last played on the local PC.
Dim fileAccountStore$(10,11)

`Used to store players save progress in the mission mode.
`1D: One entry per save.
`2D: Save ID, next level number, lives, total score, difficulty, times played through,
`     whether or not the player saved mid-game and their x coord, y coord, health, ship
`     type, colour, power cores (1 to 4), score, progress through the mission, kills,
`     mission number, and power core count (1 to 4).
Dim fileSaveStore$(30,24)

`Stores all of the links between account IDs and save file IDs.
`1D: One entry per link.
`2D: Stores account ID and save ID.
Dim fileSaveLink$(10,4)

`Used to store the purchase records for each player from the database.
`1D: One entry per player's purchase record.
`2D: Stores account ID, and ships, colours, power cores, and tutorials bought.
Dim filePurchases$(10,5)

`==========================
loadStage = 5
loadString$ = "Creating arrays..."
GoSub LoadingScreenHandling
`==========================
`Stores scores during file loading, writing, sorting and display procedures.
`1D: One entry per score. 100 max. Last entry used during sorting procedure.
`2D: Stores account ID, player name, endless score, ships used in endless,
`     colur used in endless, and mission score.
Dim fileScoreStore$(101,6)

`Stores messages to send between players.
`1D: One entry per message.
`2D: Stores account ID of sender, account ID of recipient, the message, the
`     date sent and whether or not the message has been read.
Dim fileMessages$(100, 5)

`A temporary store for admin details.
`1D: One entry per admin.
`2D: Stores admin ID, admin name, and admin password.
Dim fileAdminStore$(5,3)

`Stores the player's data for writing to files and for use by the game.
`Multiple entities (player, account and purchase) are combined here for ease
` of access.
`1D: Stores player ID, player name, player password, whether or not the
`     player has validated their account, account ID, level, experience,
`     Bitz, ship type, colour, power core choices (1 to 4),
`     and the date the account was last played on the local PC, ships bought,
`     colours bought, power cores bought, and tutorials bought.
Dim playerAccount$(19)

`Stores a player's data during the Admin Change process.
`Multiple entities (player, account and purchase) are combined here for ease
` of access.
`1D: Stores player ID, player name, player password, whether or not the
`     player has validated their account, account ID, level, experience,
`     Bitz, ship type, colour, power core choices (1 to 4),
`     and the date the account was last played on the local PC, ships bought,
`     colours bought, power cores bought, and tutorials bought.
Dim playerChange$(19)

`Stores the specific player's saves for use in the mission mode.
`1D: One entry per save.
`2D: Save ID, next level number, lives, total score, difficulty, times played through,
`     whether or not the player saved mid-game and their x coord, y coord, health, ship
`     type, colour, power cores (1 to 4), score, progress through the mission, kills,
`     mission number, and power core count (1 to 4).
Dim playerSaves$(3,24)

`LOADS ALL NEEDED IMAGES AND SOUNDS FOR MENU.
GoSub LoadCommonAssets
GoSub LoadMenuAssets

`==========================
loadStage = 10
loadString$ = "Retrieving data..."
GoSub LoadingScreenHandling
`==========================

GoSub FileLoading
setUp = 0

REMSTART
=======================================================================
============================ PROGRAM START ============================
=======================================================================
REMEND

MenuLoop:
`(Marker to find area, not subprocedure.)
`Loop that handles the displaying of all of the game's menus.

`Starts playing music.
Play sound 25

Hide mouse

`Set initial text size.
Set text size 12
ink RGB(0,0,0), RGB(0,0,0)

`Menu Loop; different menus are displayed based on the value of the "menu$" variable.
Do

   cls

   `Displays the title screen.
   If menu$ = "Title"

      `Pastes images and buttons.
      Paste image 226, 0, 0
      Paste image 1, 172, 50
      Paste image 4, 392, 500
      Center Text 512, 520, "Click to start!"

      `Handles click events.
      GoSub LogInButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Displays the log in screen.
   If menu$ = "Log In"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0
      Paste image 42, 212, 200

      `Displays the text entry interface.
      Center Text 312, 240, "Username:"
      Paste image 43, 432, 200
      Paste image 42, 212, 340
      Center Text 312, 380, "Password:"
      Paste image 43, 432, 340
      Paste image 17, 400, 560
      Center Text 512, 590, "Log In"
      Paste image 17, 25, 660
      Center Text 137, 690, "Create An Account"
      Paste image 17, 275, 660
      Center Text 387, 690, "Play As Guest"
      Paste image 17, 525, 660
      Center Text 637, 690, "Cancel"
      Paste image 18, 775, 660
      Center Text 887, 690, "Quit"

      `Displays the username and password of the player if they have been entered.
      passDisplay$ = ""
      If Len(passWord$) >= 1
         For i = 1 to Len(passWord$)
            passDisplay$ = passDisplay$ + "*"
         Next i
      EndIf
      Text 440, 240, userName$
      Text 440, 380, passDisplay$

      If promptActive = 0 then GoSub LogInButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Display the create account screen.
   If menu$ = "Create"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays the text entry interface.
      Paste image 42, 212, 160
      Center Text 312, 200, "Username:"
      Paste image 43, 432, 160
      Paste image 42, 212, 300
      Center Text 312, 340, "Password:"
      Paste image 43, 432, 300
      Paste image 42, 212, 440
      Center Text 312, 480, "Repeat Password:"
      Paste image 43, 432, 440
      Paste image 17, 275, 660
      Center Text 387, 690, "Create"
      Paste image 17, 525, 660
      Center Text 637, 690, "Cancel"

      `Displays the username and password of the player if they have been entered.
      newDisplay1$ = ""
      If Len(newPass1$) >= 1
         For i = 1 to Len(newPass1$)
            newDisplay1$ = newDisplay1$ + "*"
         Next i
      EndIf
      newDisplay2$ = ""
      If Len(newPass2$) >= 1
         For i = 1 to Len(newPass2$)
            newDisplay2$ = newDisplay2$ + "*"
         Next i
      EndIf
      Text 440, 200, newName$
      Text 440, 340, newDisplay1$
      Text 440, 480, newDisplay2$

      `Activates button handlers if the message prompt is closed.
      If promptActive = 0 then GoSub LogInButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Used to display the main menu and all of the relevant graphics.
   If menu$ = "Main"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 21, 0, 0, 1
      Paste image 2, 405, 0

      boxFocus = 0

      `Displays all of the main buttons.
      Paste image 11, 240, 120
      Center Text 352, 150, "Singleplayer"
      Paste image 12, 120, 240
      Center Text 232, 270, "Multiplayer"
      Paste image 13, 80, 360
      Center Text 192, 390, "Tutorials"
      Paste image 14, 120, 480
      Center Text 232, 510, "Customisation"
      Paste image 15, 240, 600
      If playerType$ = "Guest"
         Center Text 352, 630, "High Scores"
      Else
         Center Text 352, 620, "High Scores"
         Center Text 352, 640, "and Messages"
      EndIf

      `Click event handlers.
      If debugMenuShow = 0 and promptActive = 0 then GoSub MainMenuButtons
      GoSub MultipleMenuButtons
      GoSub DisplayPlayerInfo

      `Displays new message notification.
      If NewMessages() >= 1 then Paste image 104, 220, 580

      `DEBUG: Shows all player data on-screen.
      If debugShowDataOut = 1
         Set cursor 10, 200
         For i = 1 to 19
            Print playerAccount$(i)
         Next i
      EndIf

   EndIf

   `Used to show the singleplayer menu onscreen.
   If menu$ = "Single Main"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 22, 0, 0, 1
      Paste image 2, 405, 0

      `Displays buttons.
      Paste image 11, 120, 240
      Center Text 232, 270, "Mission Mode"
      Paste image 11, 80, 360
      Center Text 192, 390, "Endless Mode"
      Paste image 11, 240, 600
      Center Text 352, 630, "Back to Main Menu"

      `Click event handlers.
      If debugMenuShow = 0 and promptActive = 0 then GoSub SingleplayerButtons
      GoSub MultipleMenuButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Shows the Singleplayer Game Setup screen.
   If menu$ = "Single Setup"

      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 22, 0, 0, 1
      Paste image 2, 405, 0

      `Displays buttons and text.
      Paste image 11, 240, 120
      Center Text 352, 150, "PLAY!"
      Paste image 11, 120, 240
      Center Text 232, 270, "Customise Ship"
      If missionNumber = 0
         Paste image 11, 80, 360
         Center Text 192, 390, "Change Music"
      EndIf
      Paste image 11, 240, 600
      Center Text 352, 630, "Back"
      If missionNumber = 0
         ink RGB(255,255,255), RGB(0,0,0)
         Text 310, 390, "Current Song: Song " + STR$(setMusic)
      EndIf

      `Displays the info box containing the user's customisation choices.
      Paste image 54, 600, 160
      Set text size 20
      ink RGB(0,127,0), RGB(0,127,0)
      Center Text 800, 170, "Your Adapt:"
      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)
      Text 610, 240, "Ship Model:"
      Text 750, 240, playerAccount$(9)
      Text 610, 300, "Ship Colour:"
      Text 750, 300, playerAccount$(10)
      Text 610, 380, "Power Cores:"
      Text 750, 380, playerAccount$(11)
      Text 750, 410, playerAccount$(12)
      Text 750, 440, playerAccount$(13)
      Text 750, 470, playerAccount$(14)
      Text 610, 520, "Your High Score:"
      Text 820, 520, playerHighScore$

      `Click event handler.
      If debugMenuShow = 0 and promptActive = 0 then GoSub SingleplayerButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Shows the Singleplayer Save Screen.
   If menu$ = "Single Saves"

      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 22, 0, 0, 1
      Paste image 2, 405, 0

      `Displaying buttons.
      If editMode = 0 or editMode = 2
         For i = 1 to 3
            Paste image 85, 80, 200 + (120*(i-1))
            If Val(playerSaves$(i, 2)) > 0
               Center Text 205, 220 + (120*(i-1)), "Save " + STR$(i) + " : Mission " + playerSaves$(i, 2)
            Else
               If Val(playerSaves$(i, 6)) > 0
                  Center Text 205, 220 + (120*(i-1)), "< COMPLETE >"
               Else
                  Center Text 205, 220 + (120*(i-1)), "< EMPTY >"
               EndIf
            EndIf
            If boxFocus = i then paste image 52, 70, 190 + (120*(i-1)), 1
         Next i
      EndIf

      `Pastes the Back/Cancel button. Text changes depending on if
      `the player is copying or deleting a file or not.
      Paste image 11, 240, 600
      If editMode = 0
         Center Text 352, 630, "Back"
      Else
         Center Text 352, 630, "Cancel"
      EndIf

      `Displays save file info box and buttons.
      If boxFocus > 0

         `Box and text:
         Paste image 53, 512, 160
         If editMode = 0

            `Displays title of box.
            Set text size 16
            ink RGB(0,127,0), RGB(0,127,0)
            Center Text 732, 165, "Save File " + STR$(boxFocus)

            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)

            If Val(playerSaves$(boxFocus, 2)) > 0

               `Determines if the file has a suspended save in it, and then displays
               `the appropriate text.
               If Val(playerSaves$(boxFocus, 7)) > 0
                  Text 520, 200, "CURRENTLY IN Mission #" + playerSaves$(boxFocus, 20) + "!"
               Else
                  Text 520, 200, "Next Mission: #" + playerSaves$(boxFocus, 2)
               EndIf
               `Displays all of the values relevant to the save file.
               Text 520, 240, "Lives: " + playerSaves$(boxFocus, 3)
               Text 740, 240, "Total Score so far:"
               Text 740, 255, playerSaves$(boxFocus, 4)
               Text 520, 290, "Difficulty: " + playerSaves$(boxFocus, 5)
               Text 740, 290, "Times completed on this"
               Text 740, 305, "file: " + playerSaves$(boxFocus, 6)
               `Changes text in box depending on if there is a suspended file in
               `the save game.
               If Val(playerSaves$(boxFocus, 7)) > 0
                  Center Text 732, 350, "Click load game to resume where you left off!"
               Else
                  Center Text 732, 350, "Click load game to go to the map screen."
               EndIf

            Else

               `If the file is unused, display appropriate text.
               Center Text 732, 300, "Times completed on this file: " + playerSaves$(boxFocus, 6)
               Set text size 25
               If Val(playerSaves$(boxFocus, 6)) > 0
                  Center Text 732, 200, "< COMPLETE >"
               Else
                  Center Text 732, 200, "< EMPTY >"
               EndIf

            EndIf

         Else

            `Displays text in box depending on if the user is in copy/delete/new game mode.
            Set text size 16
            ink RGB(0,0,0), RGB(0,0,0)
            If editMode = 1
               Center Text 732, 280, "Are you sure you want to delete"
               Center Text 732, 300, "save file " + STR$(boxFocus) + "?"
            EndIf
            If editMode = 2
               Center Text 732, 280, "Select the file to copy to."
            EndIf
            If editMode = 3
               Center Text 732, 280, "Are you sure you want to copy over"
               Center Text 732, 300, "save file " + STR$(fileSelected) + "?"
            EndIf
            If editMode = 4
               Center Text 732, 280, "Choose your difficulty!"
            EndIf

         EndIf

         `Buttons:
         Set text size 12
         `Changes the text on the buttons depending on if the player is editing
         `a file or not.
         If editMode = 0
            If Val(playerSaves$(boxFocus, 2)) > 0
               Paste image 32, 652, 450
               Center Text 732, 470, "Load Game"
               Paste image 32, 652, 520
               Center Text 732, 540, "Copy Game"
               Paste image 32, 652, 590
               Center Text 732, 610, "Delete Game"
            Else
               Paste image 32, 652, 450
               Center Text 732, 470, "Start Game"
            EndIf
         Else
            If editMode = 1 or editMode = 3
               Paste image 32, 652, 520
               Center Text 732, 540, "Yes"
               Paste image 32, 652, 590
               Center Text 732, 610, "No"
            Else
               If editMode = 4
                  Paste image 32, 652, 450
                  Center Text 732, 470, "Easy"
                  Paste image 32, 652, 520
                  Center Text 732, 540, "Normal"
                  Paste image 32, 652, 590
                  Center Text 732, 610, "Hard"
               EndIf
            EndIf
         EndIf

      EndIf

      `Click event handler.
      If debugMenuShow = 0 and promptActive = 0 then GoSub SingleplayerButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Shows the Singleplayer Mission Map.
   If menu$ = "Single Map"

      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 28, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes mission buttons and lines.
      For i = 1 to 20
         ink RGB(0,0,0), RGB(0,0,0)
         Paste image Val(missionData$(i, 1)) + 86, Val(missionData$(i, 2)), Val(missionData$(i, 3))
         Center Text Val(missionData$(i, 2)) + 25, Val(missionData$(i, 3)) + 15, STR$(i)
      Next i

      `Displays save and exit buttons.
      ink RGB(0,0,0), RGB(0,0,0)
      Paste image 32, 854, 628
      Center Text 934, 648, "Save Game"
      Paste image 32, 854, 698
      Center Text 934, 718, "Exit Game"

      `Displays mission screens.
      ink RGB(0,0,0), RGB(0,0,0)
      If boxFocus > 0
         Paste image 76, 212, 180
         If boxFocus <= 20
            If (Val(playerSaves$(save, 2)) >= boxFocus or debugPlayAll = 1)
               Text 220, 190, missionData$(boxFocus, 4)
               Paste image 500 + boxFocus, 222, 230
               Paste image 32, 460, 470
               Set text size 12
               If Val(playerSaves$(save, 2)) > boxFocus
                  Center Text 540, 490, "Replay Mission"
               Else
                  Center Text 540, 490, "Start Mission"
               EndIf
            Else
               Text 220, 190, "LOCKED"
               Paste image 63, 392, 260
               Set text size 12
               Center Text 512, 300, "Keep playing through the previous missions"
               Center Text 512, 320, "to unlock this mission!"
            EndIf
            Paste image 32, 640, 470
            Center Text 720, 490, "Close"
            `Paste preview image.
            Set text size 24
         Else
            `Displays the map exit prompt.
            Set text size 16
            Center Text 512, 200, "Are you sure you would like to"
            Center Text 512, 230, "return to the save menu?"
            Set text size 10
            Paste image 32, 262, 450
            Center Text 342, 470, "Yes, but save first."
            Paste image 32, 432, 450
            Center Text 512, 470, "Yes, without saving."
            Paste image 32, 602, 450
            Center Text 682, 470, "No, stay here."
         EndIf
      EndIf

      `Click event handler.
      If debugMenuShow = 0 and promptActive = 0 then GoSub SingleplayerButtons

   EndIf

   `Displays the completion screen for Mission Mode.
   If menu$ = "Completion Screen"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background, game logo and background box.
      Paste image 226, 0, 0
      Paste image 27, 0, 0, 1
      Paste image 2, 405, 0
      Paste image 107, 112, 180

      `Display box content.
      Center Text 512, 190, "Congratulations " + playerAccount$(2) + "!"
      Center Text 512, 230, "Ego Co. has been defeated, and the Solarsphere has been destroyed!"
      Center Text 512, 280, "Your final score is: " + playerSaves$(save, 4)
      If newHighScore = 1
         Center Text 512, 320, "That's a new personal best for you! Awesome!"
      Else
         Center Text 512, 320, "Well done!"
      EndIf
      Center Text 512, 370, "You will recieve " + STR$(bitzReward) + " Bitz and"
      Center Text 512, 410, STR$(expReward) + " experience points for your bravery!"
      Center Text 512, 460, "Your save game will be turned back to the begining of"
      Center Text 512, 500, "the Mission mode. Play through again for bigger rewards!"

      Paste image 98, 400, 600
      Center Text 512, 630, "Woohoo!"

      `Handles click events on this screen.
      If debugMenuShow = 1 then debugMenuShow = 0
      If debugMenuShow = 0 and promptActive = 0 then GoSub MainMenuButtons

   EndIf

   `Used to display the Multiplayer Menu.
   If menu$ = "Multi Main"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 23, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes menu buttons.
      Paste image 12, 120, 240
      Center Text 232, 270, "Cooperative Missions"
      Paste image 12, 80, 360
      Center Text 192, 390, "Competitive Battling"
      Set text size 16
      Paste image 12, 240, 600
      Center Text 352, 630, "Back to Main Menu"

      `Handles click events on this screen.
      If debugMenuShow = 0 and promptActive = 0 then GoSub MultiplayerButtons
      GoSub MultipleMenuButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Displays the mission select screen for co-op missions.
   If menu$ = "Multi Mission"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 23, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes Back button, scroll arrows and selection buttons.
      Paste image 12, 240, 600
      Center Text 352, 630, "Back to Main Menu"
      If menuScroll > 0 then Paste image 91, 100, 100, 1
      Paste image 90, 100, 200
      Paste image 90, 100, 270
      Paste image 90, 100, 340
      Paste image 90, 100, 410
      If menuScroll < 4 then Paste image 92, 100, 480, 1

      Set text size 12
      For i = 1 to 4
         If furthestLevel - 1 => i + (menuScroll * 4) or debugPlayAll = 1
            Center Text 225, 220 + ((i - 1) * 70), "Mission " + STR$(i +(menuScroll * 4))
         EndIf
         If furthestLevel - 1 < i + (menuScroll * 4) and debugPlayAll = 0
            Center Text 225, 220 + ((i - 1) * 70), "< LOCKED >"
         EndIf
      Next i

      `Displays the mission preview box.
      If boxFocus > 0
         Paste image 53, 492, 160
         If (furthestLevel - 1 >= (boxFocus + (menuScroll * 4))) or debugPlayAll = 1
            Set text size 14
            Center Text 712, 180, "Mission " + STR$(boxFocus + (menuScroll * 4)) + ":"
            Set text size 18
            Center Text 712, 270, missionData$((boxFocus + (menuScroll * 4)), 4)
            Set text size 12
            Paste image 33, 632, 450
            Center Text 712, 470, "Select Mission"
         Else
            Paste image 63, 592, 200
            Set text size 12
            Center Text 712, 260, "Keep playing through the Singleplayer missions"
            Center Text 712, 280, "to unlock more for Multiplayer!"
         EndIf
      EndIf

      `Handles click events and info display on this menu.
      If debugMenuShow = 0 and promptActive = 0 then GoSub MultiplayerButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Shows the Singleplayer Game Setup screen.
   If menu$ = "Multi Setup"

      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 23, 0, 0, 1
      Paste image 2, 405, 0

      `Displays buttons and text.
      Paste image 12, 240, 120
      Center Text 352, 150, "PLAY!"
      Paste image 12, 240, 600
      Center Text 352, 630, "Back"
      Set text size 12
      Paste image 90, 100, 300
      Center Text 225, 320, "Change Ship"
      Paste image 90, 100, 370
      Center Text 225, 390, "Change Control Scheme"
      Paste image 90, 100, 480
      If missionNumber = 0
         Paste image 90, 100, 230
         Center Text 225, 250, "Add/Remove Player"
         Center Text 225, 500, "Change Victory Condition"
      Else
         Center Text 225, 500, "Change Difficulty"
      EndIf

      `Displays the info box containing the user's customisation choices.
      Paste image 54, 600, 160
      Set text size 16
      ink RGB(255,0,0), RGB(0,0,0)
      Text 695, 170, "Ship:"
      Text 855, 170, "Controls:"
      Set text size 12
      For i = 1 to 4
         If i = 1 or i = 3 then ink RGB(55,55,255), RGB(0,0,0)
         If i = 2 or i = 4 then ink RGB(255,55,55), RGB(0,0,0)
         If playerData$(i, 16) = "1"
            Text 610, 170 + (i * 40), "Player " + STR$(i)
            Text 700, 170 + (i * 40), playerData$(i, 6)
            Text 860, 170 + (i * 40), playerData$(i, 17)
         EndIf
      Next i
      ink RGB(0,0,0), RGB(0,0,0)
      If missionNumber = 0 then Text 680, 500, "Victory Condition: " + STR$(victoryNumber) + " " + victoryCondition$
      If missionNumber > 0 then Text 680, 500, "Difficulty: " + victoryCondition$

      `Displays player status change boxes.
      If boxFocus > 0
         For i = 1 to 4
            If missionNumber = 0
               Paste image 33, 400, 210 + ((i-1) * 70)
               Center text 480, 230 + ((i-1) * 70), "Player " + STR$(i)
            Else
               If i <= 2 then Paste image 33, 400, 210 + ((i-1) * 70)
               If i <= 2 then Center text 480, 230 + ((i-1) * 70), "Player " + STR$(i)
            EndIf
         Next i
      EndIf

      `Click event handler.
      If debugMenuShow = 0 and promptActive = 0 then GoSub MultiplayerButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Used to display the Tutorial interface.
   If menu$ = "Tutorial"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 25, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes Back button, scroll arrows and selection buttons.
      Paste image 13, 240, 600
      Center Text 352, 630, "Back to Main Menu"
      If menuScroll > 0 then Paste image 50, 100, 100, 1
      Paste image 49, 100, 200
      Paste image 49, 100, 270
      Paste image 49, 100, 340
      Paste image 49, 100, 410
      If menuScroll < 3 then Paste image 51, 100, 480, 1

      `Displays the correct tutorial name based on the area of the list the player is in.
      Set text size 12
      If menuScroll = 0
         If Val(playerAccount$(19)) => 0 or debugBuyAll = 1 then Center Text 225, 220, "Controls: " + FILEoptions$(2,1)
         If Val(playerAccount$(19)) => 0 or debugBuyAll = 1 then Center Text 225, 290, "Menu: Singleplayer Endless"
         If Val(playerAccount$(19)) => 0 or debugBuyAll = 1 then Center Text 225, 360, "Menu: Singleplayer Missions"
         If Val(playerAccount$(19)) => 0 or debugBuyAll = 1 then Center Text 225, 430, "Menu: Customisation"
      EndIf
      If menuScroll = 1
         If Val(playerAccount$(19)) => 1 or debugBuyAll = 1 then Center Text 225, 220, "Menu: Multiplayer Cooperate"
         If Val(playerAccount$(19)) < 1 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(19)) => 2 or debugBuyAll = 1 then Center Text 225, 290, "Menu: Multiplayer Compete"
         If Val(playerAccount$(19)) < 2 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(19)) => 3 or debugBuyAll = 1 then Center Text 225, 360, "Menu: High Scores"
         If Val(playerAccount$(19)) < 3 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(19)) => 4 or debugBuyAll = 1 then Center Text 225, 430, "Menu: Options"
         If Val(playerAccount$(19)) < 4 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf
      If menuScroll = 2
         If Val(playerAccount$(19)) => 5 or debugBuyAll = 1 then Center Text 225, 220, "Controls: Auto Fire"
         If Val(playerAccount$(19)) < 5 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(19)) => 6 or debugBuyAll = 1 then Center Text 225, 290, "Controls: Pause"
         If Val(playerAccount$(19)) < 6 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(19)) => 7 or debugBuyAll = 1 then Center Text 225, 360, "Ship: Movement"
         If Val(playerAccount$(19)) < 7 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(19)) => 8 or debugBuyAll = 1 then Center Text 225, 430, "Ship: Lasers"
         If Val(playerAccount$(19)) < 8 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf
      If menuScroll = 3
         If Val(playerAccount$(19)) => 9 or debugBuyAll = 1 then Center Text 225, 220, "Ship: Models"
         If Val(playerAccount$(19)) < 9 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(19)) => 10 or debugBuyAll = 1 then Center Text 225, 290, "Ship: Power Cores"
         If Val(playerAccount$(19)) < 10 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(19)) => 11 or debugBuyAll = 1 then Center Text 225, 360, "Enemies: Types"
         If Val(playerAccount$(19)) < 11 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(19)) => 12 or debugBuyAll = 1 then Center Text 225, 430, "Enemies: Bosses"
         If Val(playerAccount$(19)) < 12 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf

      `Displays the tutorials.
      If boxFocus > 0
         Paste image 590, 450, 125
         If (Val(playerAccount$(19)) >= (boxFocus + (menuScroll * 4)) - 4) or debugBuyAll = 1
            If (boxFocus + (menuScroll * 4)) = 1
               If fileOptions$(2,1) = "WASD" then Paste image 551, 450, 125
               If fileOptions$(2,1) = "Arrow Keys" then Paste image 552, 450, 125
               If fileOptions$(2,1) = "IJKL" then Paste image 553, 450, 125
               If fileOptions$(2,1) = "Numpad" then Paste image 554, 450, 125
            Else
               If image exist((boxFocus + (menuScroll * 4)) + 553) = 1
                  Paste image (boxFocus + (menuScroll * 4)) + 553, 450, 125
               EndIf
            EndIf
         Else
            Center Text 720, 305, "< LOCKED >"
         EndIf
      EndIf

      `Handles the click events on this screen.
      If debugMenuShow = 0 and promptActive = 0 then GoSub TutorialButtons
      GoSub MultipleMenuButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Used to display the customisation menu.
   If menu$ = "Custom Main"
      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 24, 0, 0, 1
      Paste image 2, 405, 0

      `Displays the menu buttons.
      Paste image 14, 240, 120
      Center Text 352, 150, "Ship Types"
      Paste image 14, 120, 240
      Center Text 232, 270, "Ship Colours"
      Paste image 14, 80, 360
      Center Text 192, 390, "Power Cores"
      Paste image 14, 120, 480
      Center Text 232, 510, "Shop"
      Paste image 14, 240, 600
      If prevMenu2$ = "Main" then Center Text 352, 630, "Back to Main Menu"
      If prevMenu2$ = "Single Setup" then Center Text 352, 630, "Back"

      `Resets the scrolling menu variables for the customisation menus.
      menuScroll = 0
      boxFocus = 0

      `Displays the info box containing the user's customisation choices.
      Paste image 54, 512, 160
      Set text size 20
      ink RGB(0,0,126), RGB(0,0,126)
      Center Text 712, 170, "CURRENT CUSTOMISATIONS"
      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)
      Text 520, 240, "Ship Model:"
      Text 720, 260, playerAccount$(9)
      Text 520, 330, "Ship Colour:"
      Text 720, 350, playerAccount$(10)
      Text 520, 410, "Power Cores:"
      Text 720, 430, playerAccount$(11)
      Text 720, 460, playerAccount$(12)
      Text 720, 490, playerAccount$(13)
      Text 720, 520, playerAccount$(14)

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub CustomisationButtons
      GoSub DisplayPlayerInfo
      If prevMenu2$ = "Main" then GoSub MultipleMenuButtons

   EndIf

   `Used to display the ship model customisation screen.
   If menu$ = "Custom Ship"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 24, 0, 0, 1
      Paste image 2, 405, 0

      `Displays the scroll arrows and section boxes.
      If menuScroll > 0 then Paste image 47, 100, 100, 1
      Paste image 46, 100, 200
      Paste image 46, 100, 270
      Paste image 46, 100, 340
      Paste image 46, 100, 410
      If menuScroll < 1 then Paste image 48, 100, 480, 1

      `Places correct text onto buttons depending on where the player is in the list.
      If menuScroll = 0
         If Val(playerAccount$(16)) => 0 or debugBuyAll = 1 then Center Text 225, 220, "Space Fighter"
         If Val(playerAccount$(16)) => 0 or debugBuyAll = 1 then Center Text 225, 290, "Nebula Baron"
         If Val(playerAccount$(16)) => 0 or debugBuyAll = 1 then Center Text 225, 360, "Orbital Freighter"
         If Val(playerAccount$(16)) => 1 or debugBuyAll = 1 then Center Text 225, 430, "Binary Duo"
         If Val(playerAccount$(16)) < 1 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf
      If menuScroll = 1
         If Val(playerAccount$(16)) => 2 or debugBuyAll = 1 then Center Text 225, 220, "Magneteer"
         If Val(playerAccount$(16)) < 2 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(16)) => 3 or debugBuyAll = 1 then Center Text 225, 290, "Geocentral Star"
         If Val(playerAccount$(16)) < 3 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(16)) => 4 or debugBuyAll = 1 then Center Text 225, 360, "Dwarf Shuttle"
         If Val(playerAccount$(16)) < 4 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(16)) => 5 or debugBuyAll = 1 then Center Text 225, 430, "Bot Morpher"
         If Val(playerAccount$(16)) < 5 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf

      `Pastes the Back button.
      Paste image 14, 240, 600
      Center Text 352, 630, "Back"

      `Displays the selection preview and confirmation interface.
      If boxFocus > 0
         Paste image 53, 492, 160
         Paste image 35, 632, 450

         Center Text 712, 470, "Select Ship"
         If (Val(playerAccount$(16)) >= (boxFocus + (menuScroll * 4)) - 3) or debugBuyAll = 1

            Paste image (boxFocus + (menuScroll * 4)) + 54, 616, 200, 1

            `Select case to determine ratings to show for each ship model.
            modelNumber = (boxFocus + (menuScroll * 4))
            Select modelNumber
               Case 1: speedRating = 3: powerRating = 3: forceRating = 3: sizeRating = 3: EndCase
               Case 2: speedRating = 4: powerRating = 3: forceRating = 2: sizeRating = 2: EndCase
               Case 3: speedRating = 1: powerRating = 3: forceRating = 4: sizeRating = 5: EndCase
               Case 4: speedRating = 5: powerRating = 1: forceRating = 4: sizeRating = 1: EndCase
               Case 5: speedRating = 3: powerRating = 5: forceRating = 4: sizeRating = 4: EndCase
               Case 6: speedRating = 4: powerRating = 3: forceRating = 2: sizeRating = 3: EndCase
               Case 7: speedRating = 2: powerRating = 3: forceRating = 1: sizeRating = 3: EndCase
               Case 8: speedRating = 3: powerRating = 5: forceRating = 5: sizeRating = 4: EndCase
            EndSelect

            `Displays the correct rating depending on the state of each variable.
            Text 520, 350, "Ship Speed"
            If speedRating > 0
               For i = 1 to speedRating
                  Paste image 82, 610 + ((i-1)*20), 350, 1
               Next i
            EndIf
            Text 520, 380, "Shot Power"
            If powerRating > 0
               For i = 1 to powerRating
                  Paste image 82, 610 + ((i-1)*20), 380, 1
               Next i
            EndIf
            Text 720, 380, "Shot Speed"
            If forceRating > 0
               For i = 1 to forceRating
                  Paste image 82, 810 + ((i-1)*20), 380, 1
               Next i
            EndIf
            Text 720, 350, "Ship Size"
            If sizeRating > 0
               For i = 1 to sizeRating
                  Paste image 82, 810 + ((i-1)*20), 350, 1
               Next i
            EndIf
         Else
            Paste image 63, 592, 200
         EndIf
      EndIf

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub CustomisationButtons
      GoSub DisplayPlayerInfo
      If prevMenu2$ = "Main" then GoSub MultipleMenuButtons

   EndIf

   `Used to display the ship colour customisation screen.
   If menu$ = "Custom Colour"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 24, 0, 0, 1
      Paste image 2, 405, 0

      `Displays the scroll arrows and section boxes.
      If menuScroll > 0 then Paste image 47, 100, 100, 1
      Paste image 46, 100, 200
      Paste image 46, 100, 270
      Paste image 46, 100, 340
      If menuScroll <= 1 then Paste image 46, 100, 410
      If menuScroll < 2 then Paste image 48, 100, 480, 1

      `Places correct text onto buttons depending on where the player is in the list.
      If menuScroll = 0
         If Val(playerAccount$(17)) => 0 or debugBuyAll = 1 then Center Text 225, 220, "Blue"
         If Val(playerAccount$(17)) => 0 or debugBuyAll = 1 then Center Text 225, 290, "Red"
         If Val(playerAccount$(17)) => 0 or debugBuyAll = 1 then Center Text 225, 360, "Yellow"
         If Val(playerAccount$(17)) => 0 or debugBuyAll = 1 then Center Text 225, 430, "Green"
      EndIf
      If menuScroll = 1
         If Val(playerAccount$(17)) => 1 or debugBuyAll = 1 then Center Text 225, 220, "Orange"
         If Val(playerAccount$(17)) < 1 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(17)) => 2 or debugBuyAll = 1 then Center Text 225, 290, "Purple"
         If Val(playerAccount$(17)) < 2 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(17)) => 3 or debugBuyAll = 1 then Center Text 225, 360, "Grey"
         If Val(playerAccount$(17)) < 3 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(17)) => 4 or debugBuyAll = 1 then Center Text 225, 430, "Pink"
         If Val(playerAccount$(17)) < 4 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf
      If menuScroll = 2
         If Val(playerAccount$(17)) => 5 or debugBuyAll = 1 then Center Text 225, 220, "Brown"
         If Val(playerAccount$(17)) < 5 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(17)) => 6 or debugBuyAll = 1 then Center Text 225, 290, "White"
         If Val(playerAccount$(17)) < 6 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(17)) => 7 or debugBuyAll = 1 then Center Text 225, 360, "Special"
         If Val(playerAccount$(17)) < 7 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
      EndIf

      `Displays the selection preview and confirmation interface.
      If boxFocus > 0
         Paste image 53, 492, 160
         Paste image 35, 632, 450
         Center Text 712, 470, "Select Colour"
         If (Val(playerAccount$(17)) >= (boxFocus + (menuScroll * 4)) - 4) or debugBuyAll = 1
            Paste image (boxFocus + (menuScroll * 4)) + 63, 652, 228
         Else
            Paste image 63, 592, 200
         EndIf
      EndIf

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub CustomisationButtons
      GoSub DisplayPlayerInfo
      If prevMenu2$ = "Main" then GoSub MultipleMenuButtons

      `Pastes the Back button.
      Paste image 14, 240, 600
      Center Text 352, 630, "Back"

   EndIf

   `Used to display the power core customisation screen.
   If menu$ = "Custom Power"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 24, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes the Back button.
      Paste image 14, 240, 600
      Center Text 352, 630, "Back"

      `Displays arrows and power core buttons
      If menuScroll > 0 then Paste image 47, 100, 100, 1
      Paste image 46, 100, 200
      Paste image 46, 100, 270
      Paste image 46, 100, 340
      Paste image 46, 100, 410
      If menuScroll < 2 then Paste image 48, 100, 480, 1

      `Places correct text onto buttons depending on where the player is in the list.
      If menuScroll = 0
         If Val(playerAccount$(18)) => 0 or debugBuyAll = 1 then Center Text 225, 220, "Flight Kit"
         If Val(playerAccount$(18)) => 0 or debugBuyAll = 1 then Center Text 225, 290, "Power Pack"
         If Val(playerAccount$(18)) => 0 or debugBuyAll = 1 then Center Text 225, 360, "Ion Trigger"
         If Val(playerAccount$(18)) => 0 or debugBuyAll = 1 then Center Text 225, 430, "Boost Array"
      EndIf
      If menuScroll = 1
         If Val(playerAccount$(18)) => 1 or debugBuyAll = 1 then Center Text 225, 220, "Underclocker Drive"
         If Val(playerAccount$(18)) < 1 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(18)) => 2 or debugBuyAll = 1 then Center Text 225, 290, "Nuclear Pulse"
         If Val(playerAccount$(18)) < 2 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(18)) => 3 or debugBuyAll = 1 then Center Text 225, 360, "Bounty Exchange"
         If Val(playerAccount$(18)) < 3 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(18)) => 4 or debugBuyAll = 1 then Center Text 225, 430, "Nova Shielding"
         If Val(playerAccount$(18)) < 4 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf
      If menuScroll = 2
         If Val(playerAccount$(18)) => 5 or debugBuyAll = 1 then Center Text 225, 220, "Diffraction Cannon"
         If Val(playerAccount$(18)) < 5 and debugBuyAll = 0 then Center Text 225, 220, "< LOCKED >"
         If Val(playerAccount$(18)) => 6 or debugBuyAll = 1 then Center Text 225, 290, "Terravolt Bomb"
         If Val(playerAccount$(18)) < 6 and debugBuyAll = 0 then Center Text 225, 290, "< LOCKED >"
         If Val(playerAccount$(18)) => 7 or debugBuyAll = 1 then Center Text 225, 360, "Evasion Cloak"
         If Val(playerAccount$(18)) < 7 and debugBuyAll = 0 then Center Text 225, 360, "< LOCKED >"
         If Val(playerAccount$(18)) => 8 or debugBuyAll = 1 then Center Text 225, 430, "Black Hole Blast"
         If Val(playerAccount$(18)) < 8 and debugBuyAll = 0 then Center Text 225, 430, "< LOCKED >"
      EndIf

      `Displays the selection preview and confirmation interface.
      If boxFocus > 0
         Paste image 53, 492, 160
         Paste image 35, 542, 460
         Paste image 35, 722, 460
         Paste image 35, 542, 540
         Paste image 35, 722, 540
         Center Text 622, 470, "Select as"
         Center Text 622, 495, "Power Core 1"
         Center Text 802, 470, "Select as"
         Center Text 802, 500, "Power Core 2"
         Center Text 622, 550, "Select as"
         Center Text 622, 580, "Power Core 3"
         Center Text 802, 550, "Select as"
         Center Text 802, 580, "Power Core 4"
         ink RGB(0,0,0), RGB(0,0,0)
         Set text size 8
         If (Val(playerAccount$(18)) >= (boxFocus + (menuScroll * 4)) - 4) or debugBuyAll = 1
            Paste image (boxFocus + (menuScroll * 4)) + 450, 688, 200, 1
            If (boxFocus + (menuScroll * 4)) = 1
               Center Text 712, 300, "Instantly heals your Adapt for 10% of it's maximum health."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 2
               Center Text 712, 300, "Double your laser's damage and piercing ability for a limited time."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 3
               Center Text 712, 300, "Boosts your ship's laser speed, and recharge ability"
               Center Text 712, 320, "for a short while."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 4
               Center Text 712, 300, "Increases your ship thruster speed for a limited time."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 5
               Center Text 712, 300, "Shuts down enemy movement systems, freezing all ships temporarily."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 6
               Center Text 712, 300, "Overloads your reactor, damaging you,"
               Center Text 712, 320, "but also sends out a deadly pulse."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 7
               Center Text 712, 300, "Increases the score you recieve for kills temporarily."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 8
               Center Text 712, 300, "Covers your ship in a fiery shield that blocks damage"
               Center Text 712, 320, "and hurts enemies."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 9
               Center Text 712, 300, "Doubles the lasers you shoot for a short time,"
               Center Text 712, 320, "using Superlative SpaceMirrors(TM)."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 10
               Center Text 712, 300, "Launches a bomb-missile from your ship, that explodes on"
               Center Text 712, 320, "contact with enemies."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 11
               Center Text 712, 300, "Activates ener-atoms around your ship to"
               Center Text 512, 400, "make you invisible to enemies temporarily. You may still be hit, however."
            EndIf
            If (boxFocus + (menuScroll * 4)) = 12
               Center Text 712, 300, "You want a giant laser? You got it!"
            EndIf
         Else
            Paste image 63, 592, 200
         EndIf
      EndIf

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub CustomisationButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Used to display the shop screen.
   If menu$ = "Shop"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 29, 0, 0, 1
      Paste image 2, 405, 0

      `Pastes the Back button.
      If buyWindow = 0
         Paste image 14, 790, 674
         Center Text 902, 694, "Back"
      EndIf

      `Pastes shopping buttons and money total. Buttons are not displayed if
      `the player has bought all of that item.
      Set text size 12
      If Val(playerAccount$(16)) < 5 and buyWindow = 0
         Paste image 46, 200, 256
         Center Text 325, 276, "Buy New Ship"
      EndIf
      If Val(playerAccount$(17)) < 7 and buyWindow = 0
         Paste image 46, 574, 256
         Center Text 699, 276, "Buy New Colour"
      EndIf
      If Val(playerAccount$(18)) < 8 and buyWindow = 0
         Paste image 46, 200, 512
         Center Text 325, 532, "Buy New Power Core"
      EndIf
      If Val(playerAccount$(19)) < 12 and buyWindow = 0
         Paste image 46, 574, 512
         Center Text 699, 532, "Buy New Tutorial"
      EndIf
      Paste image 46, 387, 700
      Center Text 512, 720, "Bitz Balance = " + playerAccount$(8)

      `Display purchase window.
      If buyWindow > 0

         `Displays the box.
         Set text size 20
         ink RGB(255,165,0), RGB(0,0,0)
         Paste image 76, 212, 200

         `Handles ship purchases.
         If buyWindow >= 1 and buyWindow <= 5

            `Displays the title.
            Center Text 512, 210, "PURCHASE SHIP"
            Set text size 13

            `Calculates the cost and level requirements, and determines the name of the item.
            ink RGB(0,0,0), RGB(0,0,0)
            If buyWindow = 1 then buyName$ = "Binary Duo"
            If buyWindow = 2 then buyName$ = "Magneteer"
            If buyWindow = 3 then buyName$ = "Geocentral Star"
            If buyWindow = 4 then buyName$ = "Dwarf Shuttle"
            If buyWindow = 5 then buyName$ = "Bot Morpher"
            buyLevel = buyWindow * 4
            buyPrice = 500 * (Val(playerAccount$(16)) + 1)

            `Displays cost and level requirement of item.
            Center Text 512, 250, "Would you like to buy the " + buyName$ + " for " + STR$(buyPrice) + " Bitz?"
            Paste image buyWindow + 57, 416, 290, 1
            ink RGB(200,0,0), RGB(0,0,0)
            Center Text 512, 450, "You must be at least Level " + STR$(buyLevel) + " to purchase this ship."

            `Displays buy and cancel buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)
            Paste image 35, 342, 490
            Center Text 422, 510, "Buy"
            Paste image 35, 522, 490
            Center Text 602, 510, "Cancel"

         EndIf

         `Handles colour purchases.
         If buyWindow >= 6 and buyWindow <= 12

            `Displays the title.
            Center Text 512, 210, "PURCHASE COLOUR"
            Set text size 13
            ink RGB(0,0,0), RGB(0,0,0)

            `Calculates the cost and level requirements, and determines the name of the item.
            Select buyWindow
               Case 6: buyName$ = "Orange": EndCase
               Case 7: buyName$ = "Purple": EndCase
               Case 8: buyName$ = "Grey": EndCase
               Case 9: buyName$ = "Pink": EndCase
               Case 10: buyName$ = "Brown": EndCase
               Case 11: buyName$ = "White": EndCase
               Case 12: buyName$ = "Special": EndCase
            EndSelect
            buyLevel = ((buyWindow - 5) * 3) - 1
            buyPrice = 100 * (Val(playerAccount$(17)) + 1)

            `Displays cost and level requirement of item.
            Center Text 512, 250, "Would you like to buy the colour " + buyName$ + " for " + STR$(buyPrice) + " Bitz?"
            Paste image (buyWindow - 5) + 67, 452, 300
            ink RGB(200,0,0), RGB(0,0,0)
            Center Text 512, 450, "You must be at least Level " + STR$(buyLevel) + " to purchase this colour."

            `Displays buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)

            Paste image 35, 342, 490
            Center Text 422, 510, "Buy"
            Paste image 35, 522, 490
            Center Text 602, 510, "Cancel"

         EndIf

         `Handles Power Core purchases.
         If buyWindow >= 13 and buyWindow <= 20

            `Displays the title.
            Center Text 512, 210, "PURCHASE POWER CORE"
            Set text size 13
            ink RGB(0,0,0), RGB(0,0,0)

            `Calculates the cost and level requirements, and determines the name of the item.
            If buyWindow = 13 then buyName$ = "Underclocker Drive": buyLevel = 3
            If buyWindow = 14 then buyName$ = "Nuclear Pulse": buyLevel = 5
            If buyWindow = 15 then buyName$ = "Bounty Exchange": buyLevel = 8
            If buyWindow = 16 then buyName$ = "Nova Shielding": buyLevel = 10
            If buyWindow = 17 then buyName$ = "Diffraction Cannon": buyLevel = 12
            If buyWindow = 18 then buyName$ = "Terravolt Bomb": buyLevel = 15
            If buyWindow = 19 then buyName$ = "Evasion Cloak": buyLevel = 16
            If buyWindow = 20 then buyName$ = "Black Hole Blast": buyLevel = 20
            buyPrice = 400 * (Val(playerAccount$(18)) + 1)

            `Displays the power core description in the box.
            Paste image (buyWindow - 12) + 454, 488, 320, 1
            Set text size 8
            If buyWindow - 8 = 5
               Center Text 512, 380, "Shuts down enemy movement systems, freezing"
               Center Text 512, 400, "all ships temporarily."
            EndIf
            If buyWindow - 8 = 6
               Center Text 512, 380, "Overloads your reactor, damaging you, but also sends"
               Center Text 512, 400, "out a deadly pulse."
            EndIf
            If buyWindow - 8 = 7
               Center Text 512, 380, "Increases the score you recieve for kills temporarily."
            EndIf
            If buyWindow - 8 = 8
               Center Text 512, 380, "Covers your ship in a fiery shield that blocks damage"
               Center Text 512, 400, "and hurts enemies."
            EndIf
            If buyWindow - 8 = 9
               Center Text 512, 380, "Doubles the lasers you shoot for a short time,"
               Center Text 512, 400, "using Superlative SpaceMirrors(TM)."
            EndIf
            If buyWindow - 8 = 10
               Center Text 512, 380, "Launches a bomb-missile from your ship, that explodes on"
               Center Text 512, 400, "contact with enemies."
            EndIf
            If buyWindow - 8 = 11
               Center Text 512, 380, "Activates solar ener-atoms around your ship to"
               Center Text 512, 400, "make you invisible to enemies temporarily. You may still be hit, however."
            EndIf
            If buyWindow - 8 = 12
               Center Text 512, 380, "You want a giant laser? You got it!"
            EndIf

            `Displays cost and level requirement of item.
            Set text size 13
            Center Text 512, 250, "Would you like to buy the " + buyName$ + " for " + STR$(buyPrice) + " Bitz?"
            ink RGB(200,0,0), RGB(0,0,0)
            Center Text 512, 450, "You must be at least Level " + STR$(buyLevel) + " to purchase this power."

            `Displys buy and cancel buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)
            Paste image 35, 342, 490
            Center Text 422, 510, "Buy"
            Paste image 35, 522, 490
            Center Text 602, 510, "Cancel"

         EndIf

         `Handles Tutorial purchases.
         If buyWindow >= 21

            `Displays the title.
            Center Text 512, 210, "PURCHASE TUTORIAL"
            Set text size 13
            ink RGB(0,0,0), RGB(0,0,0)

            `Calculates the cost and level requirements, and determines the name of the item.
            buyName$ = "a new tutorial page"
            buyPrice = 50 * (Val(playerAccount$(19)) + 1)
            buyLevel = 0.5 * (Val(playerAccount$(19)) + 2)
            If buyLevel = 0 then buyLevel = 1

            `Displays cost and level requirement of item.
            Center Text 512, 275, "Would you like to buy " + buyName$ + " for " + STR$(buyPrice) + " Bitz?"
            ink RGB(200,0,0), RGB(0,0,0)
            Center Text 512, 400, "You must be at least Level " + STR$(buyLevel) + " to purchase this tutorial."

            `Displays buy and cancel buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)
            Paste image 35, 342, 490
            Center Text 422, 510, "Buy"
            Paste image 35, 522, 490
            Center Text 602, 510, "Cancel"
         EndIf

      EndIf

      `Presents congratulations message if all items are bought.
      If Val(playerAccount$(16)) >= 5 and Val(playerAccount$(17)) >= 7
         If Val(playerAccount$(18)) >= 8 and Val(playerAccount$(19)) >= 12
            Set text size 30
            ink RGB(255,255,255), RGB(255,255,255)
            Center Text 512, 300, "You've bought every item in the game!"
            Center Text 512, 350, "Congratulations!"
         EndIf
      EndIf

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub CustomisationButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Used to show the High Score menu.
   If menu$ = "Scores Main"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 26, 0, 0, 1
      Paste image 2, 405, 0

      `Seting up buttons.
      Paste image 15, 120, 240
      Center Text 232, 270, "High Scores"
      If playerType$ = "Player"
         Paste image 15, 80, 360
         Center Text 192, 390, "Messaging"
      EndIf
      Paste image 15, 240, 600
      Center Text 352, 630, "Back to Main Menu"

      `Displays new message notification.
      If NewMessages() >= 1 then Paste image 104, 60, 340

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub HighScoresButtons
      GoSub MultipleMenuButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Screen that displays the high score table.
   If menu$ = "Scores"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 30, 0, 0, 1
      Paste image 2, 405, 0

      `Sets up buttons and titles.
      Paste image 15, 400, 674
      Center Text 512, 700, "Back"
      Set text size 12
      Paste image 36, 432, 130
      Center Text 512, 150, highScoreMode$
      Paste image 79, 342, 117, 1
      Paste image 80, 602, 117, 1

      `Sets up scroll arrows and high score box.
      If menuScroll > 0
         Paste image 77, 250, 570, 1
         Center Text 290, 585, "-1"
         Paste image 77, 694, 570, 1
         Center Text 734, 585, "-10"
      EndIf
      If menuScroll < 90
         Paste image 78, 330, 570, 1
         Center Text 370, 610, "+1"
         Paste image 78, 614, 570, 1
         Center Text 654, 610, "+10"
      EndIf
      Paste image 108, 62, 200

      `Displays high scores.
      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)
      If highScoreMode$ = "Endless"
         Text 72, 210, "Rank"
         Text 172, 210, "Player Name"
         Text 472, 210, "Score"
         Text 672, 210, "Ship"
      Else
         Text 72, 210, "Rank"
         Text 172, 210, "Player Name"
         Text 472, 210, "Score"
      EndIf
      For i = 1 to 10
         If highScoreMode$ = "Endless"
            Text 82, 260 + ((i-1)*30), STR$(i + menuScroll)
            Text 172, 260 + ((i-1)*30), fileScoreStore$(i + menuScroll, 2)
            Text 472, 260 + ((i-1)*30), fileScoreStore$(i + menuScroll, 3)
            Text 672, 260 + ((i-1)*30), fileScoreStore$(i + menuScroll, 5) + " " + fileScoreStore$(i + menuScroll, 4)
         Else
            Text 82, 260 + ((i-1)*30), STR$(i + menuScroll)
            Text 172, 260 + ((i-1)*30), fileScoreStore$(i + menuScroll, 2)
            Text 472, 260 + ((i-1)*30), fileScoreStore$(i + menuScroll, 6)
         EndIf
      Next i

      `Displays player info, and activates button handlers if the debug menu and
      `prompt window are closed.
      If debugMenuShow = 0 and promptActive = 0 then GoSub HighScoresButtons
      GoSub DisplayPlayerInfo

   EndIf

   `Displays the player messaging interface.
   If menu$ = "Messages"

      Set text size 16
      ink RGB(0,0,0), RGB(0,0,0)

      `Background, game logo, and background box.
      Paste image 226, 0, 0
      Paste image 30, 0, 0, 1
      Paste image 2, 405, 0
      Paste image 105, 112, 180

      `Displays selection menu
      If messageMode$ = "Menu"

         `Displays title.
         Set text size 20
         ink RGB(0,0,0), RGB(0,0,0)
         Center Text 512, 200, "Welcome to the Adapt Message System!"

         `Displays buttons
         Set text size 12
         Paste image 36, 312, 300
         Center Text 392, 320, "View Messages"
         Paste image 36, 552, 300
         Center Text 632, 320, "Send Messages"
         Set text size 15
         Paste image 15, 400, 674
         Center Text 512, 700, "Back"

         `Displays player info, and activates button handlers if the debug menu and
         `prompt window are closed.
         If debugMenuShow = 0 and promptActive = 0 then GoSub HighScoresButtons
         GoSub DisplayPlayerInfo

      EndIf
      `Displays message reading interface.
      If messageMode$ = "Read"

         `Pastes boxes and arrows.
         Paste image 106, 152, 300
         Paste image 79, 130, 200, 1
         Paste image 80, 814, 200, 1

         `Pastes message info.
         If TotalMessages() > 0
            Set text size 16
            ink RGB(0,0,0), RGB(0,0,0)
            Center Text 512, 190, "View Messages"
            If NewMessages() > 0 then Center Text 512, 215, STR$(NewMessages()) + " New Messages!"
            Center Text 512, 240, "Message " + STR$(messageNumber) + " / " + STR$(TotalMessages())
            If messageRead = 0 then Paste image 104, 492, 270
            Set text size 14
            Center Text 512, 320, messageLine1$
            Center Text 512, 350, messageLine2$
            Center Text 512, 380, messageLine3$
            Center Text 512, 410, messageLine4$
            Set text size 12
            Center Text 312, 450, "Sent by:"
            Center Text 312, 470, messagePlayer$
            Center Text 712, 450, "Date sent:"
            Center Text 712, 470, messageDate$
         Else
            Set text size 18
            ink RGB(0,0,0), RGB(0,0,0)
            Center Text 512, 365, "You have no messages."
         EndIf

         `Pastes other buttons.
         Set text size 12
         ink RGB(0,0,0), RGB(0,0,0)
         If TotalMessages() > 0
            Paste image 36, 162, 510
            If messageRead = 0
               Center Text 242, 530, "Mark as Read"
            Else
               Center Text 242, 530, "Delete Message"
            EndIf
            Paste image 36, 432, 510
            Center Text 512, 530, "Reply"
         EndIf
         Paste image 36, 702, 510
         Center Text 782, 530, "Back"

         `Displays player info, and activates button handlers if the debug menu and
         `prompt window are closed.
         If debugMenuShow = 0 and promptActive = 0 then GoSub HighScoresButtons
         GoSub DisplayPlayerInfo

      EndIf
      `Displays message writing interface.
      If messageMode$ = "Write"

         `Displays writing button and message preview.
         If messageRead = -1

            `Displays title.
            Set text size 16
            ink RGB(0,0,0), RGB(0,0,0)
            Center Text 512, 210, "Send Messages"

            `Displays button.
            Set text size 12
            Paste image 15, 400, 250
            Center Text 512, 280, "Write Message"

            `Pastes other buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)
            Paste image 36, 162, 510
            Center Text 242, 530, "Back"

         EndIf

         `Displays message preview while writing message.
         If messageRead = 0

            Set text size 14
            Center Text 512, 400, "Message Preview"
            Center Text 512, 430, messageLine1$
            Center Text 512, 460, messageLine2$
            Center Text 512, 490, messageLine3$
            Center Text 512, 520, messageLine4$

         EndIf

         `Displays the sending screen.
         If messageRead = 1

            `Displays title.
            Set text size 16
            ink RGB(0,0,0), RGB(0,0,0)
            Center Text 512, 210, "Send Messages"

            `Pastes message preview.
            Paste image 106, 152, 300
            Set Text size 16
            Center Text 512, 270, "Your Message:"
            Set text size 14
            Center Text 512, 320, messageLine1$
            Center Text 512, 350, messageLine2$
            Center Text 512, 380, messageLine3$
            Center Text 512, 410, messageLine4$
            Set text size 12
            Center Text 312, 450, "Send to:"
            Center Text 312, 470, messagePlayer$
            Center Text 712, 450, "Today's Date:"
            Center Text 712, 470, messageDate$

            `Pastes other buttons.
            Set text size 12
            ink RGB(0,0,0), RGB(0,0,0)
            Paste image 36, 162, 510
            Center Text 242, 530, "Back"
            Paste image 36, 432, 510
            Center Text 512, 530, "Change Recipient"
            Paste image 36, 702, 510
            Center Text 782, 530, "Send"

         EndIf

         `Runs input system.
         If linesToInput <= 4 and linesToInput >= 1 then GoSub InputMessage
         If linesToInput > 0 then DEC linesToInput

         `Activates button handlers if the debug menu and
         `prompt window are closed.
         If debugMenuShow = 0 and promptActive = 0 and messageRead <> 0 then GoSub HighScoresButtons

      EndIf

   EndIf

   `Used to display the Options screen.
   If menu$ = "Options"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Places option box and tabs.
      Paste image 95, 112, 179
      Paste image 96, 112, 130
      If optionsMenu$ = "Graphics" then Paste image 97, 112, 130
      Center Text 212, 150, "Graphics"
      Paste image 96, 312, 130
      If optionsMenu$ = "Audio" then Paste image 97, 312, 130
      Center Text 412, 150, "Audio"
      Paste image 96, 512, 130
      If optionsMenu$ = "Credits" then Paste image 97, 512, 130
      Center Text 612, 150, "Credits"
      Paste image 96, 712, 130
      If optionsMenu$ = "Account" then Paste image 97, 712, 130
      Center Text 812, 150, "Account"

      `Displays the graphics options interface.
      If optionsMenu$ = "Graphics"
         Set text size 18
         Text 250, 250, "Fullscreen Mode: " + fileOptions$(1, 1)
         Text 250, 500, "Control Scheme: " + fileOptions$(2, 1)
         Set text size 12
         Paste image 37, 650, 230
         Center Text 730, 250, "Change"
         Paste image 37, 650, 480
         Center Text 730, 500, "Change"
         Set text size 12
         ink RGB(255,0,0), RGB(0,0,0)
         If fileOptions$(1, 1) <> fileOptions$(1, 2)
            Text 250, 300, "Restart will be required to change the fullscreen mode."
         EndIf
      EndIf
      `Displays the audio options interface.
      If optionsMenu$ = "Audio"
         Set text size 18
         Text 250, 220, "Master Volume: " + fileOptions$(3, 1) + "%"
         Text 250, 320, "Music Volume: " + fileOptions$(4, 1) + "%"
         Text 250, 420, "Sound Volume: " + fileOptions$(5, 1) + "%"
         Text 250, 520, "Soundtrack: " + fileOptions$(6, 1)
         Set text size 12
         Paste image 37, 650, 200
         Center Text 730, 220, "Change"
         Paste image 37, 650, 300
         Center Text 730, 320, "Change"
         Paste image 37, 650, 400
         Center Text 730, 420, "Change"
         Paste image 37, 650, 500
         Center Text 730, 520, "Change"
         Set text size 12
         ink RGB(255,0,0), RGB(0,0,0)
         If fileOptions$(6, 1) <> fileOptions$(6, 2)
            Text 250, 570, "Restart will be required to change the soundtrack."
         EndIf
      EndIf
      `Displays the game's credits.
      If optionsMenu$ = "Credits"
         Center Text 512, 200, "Programming by Owen Shevlin"
         Center Text 512, 220, "Ship, Enemy and User Interface Artwork by Owen Shevlin"
         Center Text 512, 240, "Game Concept by Games for Llanelli"
         Center Text 512, 280, "Additional material used for educational purpose"
         Center Text 512, 320, "Backgrounds, music and sounds used from:"
         Center Text 512, 340, "www.howstuffworks.com     www.indiwall.com     www.desicomments.com"
         Center Text 512, 360, "www.123rf.com     www.dafont.com     www.smscs.com"
         Center Text 512, 380, "newswatch.nationalgeographic.com     amazingspacepictures.info     apod.nasa.gov"
         Center Text 512, 400, "ordinarytraveller.com     www.spacered.com     www.deviantart.com"
         Center Text 512, 420, "www.planetsforkids.org     www.wired.com     www.wowwiki.com"
         Center Text 512, 440, "coolinterestingstuff.com     www.boston.com     www.twitterrevolutions.com"
         Center Text 512, 460, "youtube.com     ocremix.com     vgmusic.com"
         Center Text 512, 480, "soundbible.com     freesound.org     freesfx.co.uk"
      EndIf
      `Displays the account options interface.
      If optionsMenu$ = "Account"
         Paste image 37, 432, 200
         Center Text 512, 210, "Change your"
         Center Text 512, 230, "Username"
         Paste image 37, 432, 350
         Center Text 512, 360, "Change your"
         Center Text 512, 380, "Password"
         Paste image 37, 432, 500
         Center Text 512, 510, "Delete your"
         Center Text 512, 530, "Account"

         `Reverts to Credits tab if user is in guest mode.
         If playerType$ = "Guest"
            optionsMenu$ = "Credits"
            promptActive = 1
            promptHeader$ = "AREA INACCESSABLE"
            promptLine1$ = "This area is not available in Guest Mode."
            promptLine2$ = ""
            promptType$ = "Okay"
            Play sound 56
         EndIf

      EndIf

      `Places the Accept, Confirm, and Cancel buttons.
      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)
      If changesMade = 1
         Paste image 16, 120, 650
         Center Text 232, 680, "Apply Changes"
      EndIf
      If changesMade => 1
         Paste image 16, 680, 650
         Center Text 792, 680, "Confirm Changes"
      EndIf
      Paste image 16, 400, 650
      Center Text 512, 680, "Cancel Changes"

      `Displays player info, and activates button handlers if the
      `prompt window is closed.
      If promptActive = 0 then GoSub OptionsButtons
      GoSub DisplayPlayerInfo

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Displays the screens used to change the user's name and password.
   If menu$ = "Options Change"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays the interface for changing a player's name.
      If optionsChangeMode$ = "Name"
         Paste image 42, 212, 200
         Center Text 312, 240, "New Name:"
         Paste image 43, 432, 200
         Paste image 42, 212, 340
         Center Text 312, 380, "Repeat Name:"
         Paste image 43, 432, 340
         Paste image 16, 275, 660
         Center Text 387, 690, "Change"
         Paste image 16, 525, 660
         Center Text 637, 690, "Cancel"
         Text 440, 240, adminNew1$
         Text 440, 380, adminNew2$
      EndIf
      `Displays the interface for changing a player's password.
      If optionsChangeMode$ = "Password"
         Paste image 42, 212, 200
         Center Text 312, 240, "New Password:"
         Paste image 43, 432, 200
         Paste image 42, 212, 340
         Center Text 312, 380, "Repeat Password:"
         Paste image 43, 432, 340
         Paste image 16, 275, 660
         Center Text 387, 690, "Change"
         Paste image 16, 525, 660
         Center Text 637, 690, "Cancel"
         adminDisplay1$ = ""
         adminDisplay2$ = ""
         `Displays passwords on screen as asterisks.
         If Len(adminNew1$) >= 1
            For i = 1 to Len(adminNew1$)
               adminDisplay1$ = adminDisplay1$ + "*"
            Next i
         EndIf
         If Len(adminNew2$) >= 1
            For i = 1 to Len(adminNew2$)
               adminDisplay2$ = adminDisplay2$ + "*"
            Next i
         EndIf
         Text 440, 240, adminDisplay1$
         Text 440, 380, adminDisplay2$
      EndIf

      `Performs click events.
      If promptActive = 0 then GoSub OptionsButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Used to display the Log Out prompt.
   If menu$ = "Log Out"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays the Log Out prompt.
      Paste image 41, 152, 264
      Paste image 17, 200, 350
      Center Text 312, 380, "Yes"
      Paste image 17, 600, 350
      Center Text 712, 380, "No"
      Set text size 18
      ink RGB(0,0,0), RGB(0,0,0)
      Center Text 512, 280, "Are you sure you want to log out?"

      `Displays player info, and activates button handlers.
      GoSub LogOutButtons
      GoSub DisplayPlayerInfo

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Used to display the Quit Game prompt.
   If menu$ = "Quit"

      Set text size 12
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays the Quit prompt.
      Paste image 41, 152, 264
      Paste image 18, 200, 350
      Center Text 312, 380, "Yes, quit A.D.A.P.T!"
      Paste image 18, 600, 350
      Center Text 712, 380, "No, keep playing!"
      Set text size 18
      ink RGB(0,0,0), RGB(0,0,0)
      Center Text 512, 280, "Are you sure you want to quit?"

      `Displays player info, and activates button handlers.
      GoSub QuitButtons
      GoSub DisplayPlayerInfo

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Displays the admin log in screen.
   If menu$ = "Admin Log In"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays the text entry interface.
      Paste image 42, 212, 200
      Center Text 312, 240, "Admin Name:"
      Paste image 43, 432, 200
      Paste image 42, 212, 340
      Center Text 312, 380, "Password:"
      Paste image 43, 432, 340
      Paste image 98, 275, 660
      Center Text 387, 690, "Log In"
      Paste image 98, 525, 660
      Center Text 637, 690, "Cancel"

      `Displays the username and password of the player if they have been entered.
      passDisplay$ = ""
      If Len(adminPass$) >= 1
         For i = 1 to Len(adminPass$)
            passDisplay$ = passDisplay$ + "*"
         Next i
      EndIf
      Text 440, 240, adminName$
      Text 440, 380, passDisplay$

      `Activates button handlers if the prompt window is closed.
      If promptActive = 0 then GoSub AdminButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Displays the admin menu.
   If menu$ = "Admin"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays admin mode options.
      Paste image 100, 312, 150
      Center Text 512, 170, "Edit Player Data"
      Paste image 100, 312, 220
      If debugModeOn = 0 then Center Text 512, 240, "Enable Debug Mode"
      If debugModeOn = 1 then Center Text 512, 240, "Disable Debug Mode"
      Paste image 100, 312, 290
      Center Text 512, 310, "Clear Local Data"
      Paste image 100, 312, 390
      Center Text 512, 410, "Backup Local Data"
      Paste image 100, 312, 460
      Center Text 512, 480, "Restore Local Data"

      `Pastes back button.
      Set text size 12
      Paste image 98, 400, 675
      Center Text 512, 705, "Back"

      `Performs click events.
      If promptActive = 0 then GoSub AdminButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Displays the admin player change screen.
   If menu$ = "Admin Change"

      Set text size 14
      ink RGB(0,0,0), RGB(0,0,0)

      `Background and game logo.
      Paste image 226, 0, 0
      Paste image 2, 405, 0

      `Displays player finder.
      If adminChangeMode$ = "Find"
         Paste image 42, 212, 200
         Center Text 312, 240, "Player Name:"
         Paste image 43, 432, 200
         Paste image 98, 275, 660
         Center Text 387, 690, "Find Player"
         Paste image 98, 525, 660
         Center Text 637, 690, "Cancel"
         Text 440, 240, adminFind$
      EndIf

      `Display player editor, which displays all of the player's
      `data, and options for changing that data.
      If adminChangeMode$ = "Edit"
         `Pasting box and data.
         Paste image 54, 200, 140
         Set text size 14
         ink RGB(0,0,0), RGB(0,0,0)
         Text 210, 150, "Player Number:"
         Text 210, 170, "Player Name:"
         Text 210, 190, "Player Password:"
         Text 210, 210, "Account Active:"
         Text 210, 230, "Account Number:"
         Text 210, 250, "Level:"
         Text 210, 270, "Experience:"
         Text 210, 290, "Bitz:"
         Text 210, 310, "Ship Model:"
         Text 210, 330, "Ship Colour:"
         Text 210, 350, "Power Core 1:"
         Text 210, 370, "Power Core 2:"
         Text 210, 390, "Power Core 3:"
         Text 210, 410, "Power Core 4:"
         Text 210, 430, "Date Last Played:"
         Text 210, 450, "Ships Bought:"
         Text 210, 470, "Colours Bought:"
         Text 210, 490, "Power Cores Bought:"
         Text 210, 510, "Tutorials Bought:"
         For i = 1 to 19
            Text 420, 130 + (i * 20), playerChange$(i)
         Next i
         `Pastes buttons.
         Set text size 12
         Paste image 99, 700, 150
         Center Text 780, 170, "Change Name"
         Paste image 99, 700, 220
         Center Text 780, 240, "Change Password"
         Paste image 99, 700, 290
         Center Text 780, 310, "Increase Level"
         Paste image 99, 700, 360
         Center Text 780, 380, "Increase Bitz"
         Set text size 16
         ink RGB(0,0,0), RGB(0,0,0)
         Paste image 98, 160, 675
         Center Text 272, 705, "Apply Changes"
         Paste image 98, 400, 675
         Center Text 512, 705, "Cancel Changes"
         Paste image 98, 640, 675
         Center Text 752, 705, "Delete Player"
      EndIf
      `Displays the interface for changing a player's name.
      If adminChangeMode$ = "Name"
         Paste image 42, 212, 200
         Center Text 312, 240, "New Name:"
         Paste image 43, 432, 200
         Paste image 42, 212, 340
         Center Text 312, 380, "Repeat Name:"
         Paste image 43, 432, 340
         Paste image 98, 275, 660
         Center Text 387, 690, "Change"
         Paste image 98, 525, 660
         Center Text 637, 690, "Cancel"
         Text 440, 240, adminNew1$
         Text 440, 380, adminNew2$
      EndIf
      `Displays the interface for changing a player's password.
      If adminChangeMode$ = "Password"
         Paste image 42, 212, 200
         Center Text 312, 240, "New Password:"
         Paste image 43, 432, 200
         Paste image 42, 212, 340
         Center Text 312, 380, "Repeat Password:"
         Paste image 43, 432, 340
         Paste image 98, 275, 660
         Center Text 387, 690, "Change"
         Paste image 98, 525, 660
         Center Text 637, 690, "Cancel"
         adminDisplay1$ = ""
         adminDisplay2$ = ""
         `Displays passwords on screen as asterisks.
         If Len(adminNew1$) >= 1
            For i = 1 to Len(adminNew1$)
               adminDisplay1$ = adminDisplay1$ + "*"
            Next i
         EndIf
         If Len(adminNew2$) >= 1
            For i = 1 to Len(adminNew2$)
               adminDisplay2$ = adminDisplay2$ + "*"
            Next i
         EndIf
         Text 440, 240, adminDisplay1$
         Text 440, 380, adminDisplay2$
      EndIf

      `Performs click events.
      If promptActive = 0 then GoSub AdminButtons

      `Prevents debug menu from being displayed.
      If debugMenuShow = 1 then debugMenuShow = 0

   EndIf

   `Decreases menu timers, and display save icon.
   If buttonTimer > 0 then DEC buttonTimer
   If saveTimer > 0 then DEC saveTimer: paste image 83, 950, 50, 1

   `Runs prompt displaying code as long as the prompt is marked
   `as active by the promptActive variable.
   If promptActive = 1
      `Paste box.
      Paste image 102, 0, 294

      `Paste header.
      Set text size 20
      ink RGB(255,0,0), RGB(0,0,0)
      Center Text 512, 300, promptHeader$

      `Paste content.
      Set text size 15
      ink RGB(0,0,0), RGB(0,0,0)
      Center Text 512, 350, promptLine1$
      Center Text 512, 380, promptLine2$

      `Paste Okay button.
      If promptType$ = "Okay"
         Paste image 99, 432, 410
         Center Text 512, 430, "Okay!"
      EndIf

      `Paste Yes and No button.
      If promptType$ = "Yes/No"
         Paste image 32, 332, 410
         Center Text 412, 430, "Yes"
         Paste image 33, 532, 410
         Center Text 612, 430, "No"
      EndIf

      `Button handler for Okay button.
      If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 410 and mouseY() < 470) and promptType$ = "Okay"
         Paste image 40, 392, 410, 1
         If mouseclick() = 1 and buttonTimer = 0
            promptActive = 0
            promptHeader$ = ""
            promptLine1$ = ""
            promptLine2$ = ""
            promptType$ = ""
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf

      `Button handler for Yes button. Button will act depending on what prompt
      `is open.
      If (mouseX() > 332 and mouseX() < 492) and (mouseY() > 410 and mouseY() < 470) and promptType$ = "Yes/No"
         Paste image 40, 292, 410, 1
         If mouseclick() = 1 and buttonTimer = 0
            GoSub PromptResponse
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf

      `Button handler for No button. Will close the prompt without action.
      If (mouseX() > 532 and mouseX() < 692) and (mouseY() > 410 and mouseY() < 470) and promptType$ = "Yes/No"
         Paste image 40, 492, 410, 1
         If mouseclick() = 1 and buttonTimer = 0
            promptActive = 0
            promptHeader$ = ""
            promptLine1$ = ""
            promptLine2$ = ""
            promptType$ = ""
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf

   EndIf

   `Runs debug mode code.
   If debugMenuShow = 1

      `Displays box
      Paste image 101, 0, 234
      Set text size 20
      ink RGB(0,0,0), RGB(0,0,0)

      `Displays text detailing each feature of the debug menu.
      Center Text 512, 240, "DEBUG MENU - Out of Game"
      Set text size 14
      Center Text 300, 270, "Key"
      Center Text 724, 270, "Action"
      Center Text 300, 310, "1"
      If debugShowDataOut = 0 then Center Text 724, 310, "Show Player Account Data"
      If debugShowDataOut = 1 then Center Text 724, 310, "Hide Player Account Data"
      Center Text 300, 350, "2"
      If debugBuyAll = 0 then Center Text 724, 350, "Enable 'Buy/Choose Anything' in Customisations"
      If debugBuyAll = 1 then Center Text 724, 350, "Disable 'Buy/Choose Anything' in Customisations"
      Center Text 300, 390, "3"
      If debugPlayAll = 0 then Center Text 724, 390, "Enable 'Play Any Mission' in Mission Modes"
      If debugPlayAll = 1 then Center Text 724, 390, "Disable 'Play Any Mission' in Mission Modes"
      Center Text 300, 430, "4"
      If debugLevelUp = 0 then Center Text 724, 430, "Enable Level Up by pressing Z"
      If debugLevelUp = 1 then Center Text 724, 430, "Disable Level Up by pressing Z"
      Center Text 300, 470, "5"
      If debugBitzUp = 0 then Center Text 724, 470, "Enable +100 Bitz by pressing X"
      If debugBitzUp = 1 then Center Text 724, 470, "Disable +100 Bitz by pressing X"

      `Handles button presses on keys for changing debug menu features.
      For i = 2 to 6
         If keyState(i) = 1 and debugTimer = 0
            If i = 2 then debugShowDataOut = 1 - debugShowDataOut
            If i = 3 then debugBuyAll = 1 - debugBuyAll
            If i = 4 then debugPlayAll = 1 - debugPlayAll
            If i = 5 then debugLevelUp = 1 - debugLevelUp
            If i = 6 then debugBitzUp = 1 - debugBitzUp
            debugTimer = TIMER
         EndIf
      Next i
   EndIf

   `Decreases debug action delay timer.
   If debugTimer > 0 then DEC debugTimer

   `Detects if keys are pressed to open debug menu.
   If (keystate(48) + keystate(22) + keystate(34) = 3) and debugModeOn = 1 and debugTimer = 0
      debugMenuShow = 1 - debugMenuShow
      debugTimer = TIMER
   EndIf

   `Handles debug level increasing.
   If keyState(44) = 1 and debugLevelUp = 1 and debugTimer = 0
      playerAccount$(6) = STR$(Val(playerAccount$(6)) + 1)
      debugTimer = TIMER / 2
   EndIf

   `Handles debug money increasing.
   If keyState(45) = 1 and debugBitzUp = 1 and debugTimer = 0
      playerAccount$(8) = STR$(Val(playerAccount$(8)) + 100)
      debugTimer = TIMER / 2
   EndIf

   `Runs the code that allows users to take screenshots of the game.
   GoSub TakeScreenshot

   `Places mouse when permitted.
   If mouse = 1 then Paste image 3, mouseX(), mouseY(), 1

   sync

Loop

End

`=======================================================================
`========================= SUBPROCEDURES START =========================
`=======================================================================

` === GAME SETUP AND LOADING PROCEDURES ===

SetUp:
`Used to randomise the RNG, and sets up the game according to the options settings.

   `Retrieveing all data from file.
   GoSub ReadOptions

   `Randomising the RNGs.
   Randomize Val(randomiser$)

   `Incrementing the randomiser's value.
   randomiser$ = STR$(Val(randomiser$) + 1)

   `Uses the options from the datastore to set up fullscreen mode.
   GoSub ApplyWindow

   `Rewriting data to the data store.
   GoSub WriteOptions

Return

ApplyWindow:
`Determines if game should be in fullscreen mode or not.

   If setUp = 1
      If fileOptions$(1,1) = "Off"
         Set window on
         Set window title "Adapt"
         Set window size 1024, 768
         Set display mode 1024, 768, 16
         Set text font "Consolas"
         Sync on
         Sync rate 30
      Else
         Set window off
         Set display mode 1024, 768, 16
         Set text font "Consolas"
         Sync on
         Sync rate 30
      EndIf
   EndIf

Return

ApplyVolume:
`Applies volume settings to the game's music and sounds.

   For k = 1 to 30
      If sound exist(k) = 1
         Set sound volume k, ((Val(fileOptions$(3,1)) * Val(fileOptions$(4,1))) / 100)
      EndIf
   Next k

   For k = 51 to 100
      If sound exist(k) = 1
         Set sound volume k, ((Val(fileOptions$(3,1)) * Val(fileOptions$(5,1))) / 100)
      EndIf
   Next k

Return

LoadingScreenHandling:
`Used to progress loading screen.

   If setUp = 1
      Cls

      ink RGB(255,255,255), RGB(0,0,0)
      Paste image 751, 0, 0
      BOX 12, 700, 12 + (100 * loadStage), 750
      Paste image 752, (100 * loadStage) - 20, 689, 1
      Center Text 512, 650, loadString$

      Sync
   EndIf

Return

LoadCommonAssets:
`Loads images and sounds used both in the game and in the menus.

   ` ======= LOADING IMAGES =======

   `==========================
   loadStage = 6
   loadString$ = "Loading common graphics..."
   GoSub LoadingScreenHandling
   `==========================

   `1 to 200: Menu resources
   Load image "Images/Menu/Cursor.png", 3
   Load image "Images/Menu/Box 1.png", 4
   Load image "Images/Menu/Singleplayer Button.png", 11
   Load image "Images/Menu/Multiplayer Button.png", 12
   Load image "Images/Menu/Quit Button.png", 18
   Load image "Images/Menu/Button Indicator 1.png", 19
   Load image "Images/Menu/Button Indicator 2.png", 20
   Load image "Images/Menu/Singleplayer Button 2.png", 32
   Load image "Images/Menu/Multiplayer Button 2.png", 33
   Load image "Images/Menu/High Scores Button 2.png", 36
   Load image "Images/Menu/Quit Button 2.png", 39
   Load image "Images/Menu/Button Indicator 3.png", 40
   Load image "Images/Menu/Box 2.png", 41
   Load image "Images/Menu/Box 3.png", 42
   Load image "Images/Menu/Box 4.png", 43
   Load image "Images/Menu/Button Indicator 4.png", 44
   Load image "Images/Menu/Button Indicator 5.png", 45
   Load image "Images/Menu/Button Indicator 6.png", 52
   Load image "Images/Menu/Box 5.png", 53
   Load image "Images/Menu/Box 6.png", 54
   Load image "Images/Menu/Button Indicator 7.png", 75
   Load image "Images/Menu/Save Icon.png", 83
   Load image "Images/Menu/Loading Box.png", 84
   Load image "Images/Menu/Singleplayer Button 3.png", 85
   Load image "Images/Menu/Button Indicator 8.png", 89
   Load image "Images/Menu/Loading Box 2.png", 94
   Load image "Images/Menu/Admin Button.png", 98
   Load image "Images/Menu/Admin Button 2.png", 99
   Load image "Images/Menu/Admin Button 3.png", 100
   Load image "Images/Menu/Debug Box.png", 101

   `241 to 400: Ships
   Load image "Images/Ships/Ship Blank.png", 361

   `401 to 500: Powerups and projectiles
   Load image "Images/Powerups and Projectiles/Flight Kit - Pickup.png", 451
   Load image "Images/Powerups and Projectiles/Power Pack - Pickup.png", 452
   Load image "Images/Powerups and Projectiles/Ion Trigger - Pickup.png", 453
   Load image "Images/Powerups and Projectiles/Boost Array - Pickup.png", 454
   Load image "Images/Powerups and Projectiles/Underclocker Drive - Pickup.png", 455
   Load image "Images/Powerups and Projectiles/Nuclear Pulse - Pickup.png", 456
   Load image "Images/Powerups and Projectiles/Bounty Exchange - Pickup.png", 457
   Load image "Images/Powerups and Projectiles/Nova Shielding - Pickup.png", 458
   Load image "Images/Powerups and Projectiles/Diffraction Cannon - Pickup.png", 459
   Load image "Images/Powerups and Projectiles/Terravolt Bomb - Pickup.png", 460
   Load image "Images/Powerups and Projectiles/Evasion Cloak - Pickup.png", 461
   Load image "Images/Powerups and Projectiles/Black Hole Blast - Pickup.png", 462

   `==========================
   loadStage = 7
   loadString$ = "Loading common sounds..."
   GoSub LoadingScreenHandling
   `==========================

   `======= LOADING SOUNDS =======

   `51 and onward: Sound effects
   Load sound "Sounds/Click Event.wav", 54
   Load sound "Sounds/Allowed Login.wav", 55
   Load sound "Sounds/Refused Login.wav", 56
   Load sound "Sounds/New Wave.wav", 64

Return

LoadMenuAssets:
`Loads images and sounds used in the menus.

   ` ======= LOADING IMAGES =======

   `==========================
   loadStage = 8
   loadString$ = "Loading menu graphics..."
   GoSub LoadingScreenHandling
   `==========================

   `1 to 200: Menu resources
   Load image "Images/Adapt Logo Large.png", 1
   Load image "Images/Adapt Logo Small.png", 2
   Load image "Images/Menu/Tutorial Button.png", 13
   Load image "Images/Menu/Customisation Button.png", 14
   Load image "Images/Menu/High Scores Button.png", 15
   Load image "Images/Menu/Options Button.png", 16
   Load image "Images/Menu/Log Out Button.png", 17
   Load image "Images/Menu/Curve Main Menu.png", 21
   Load image "Images/Menu/Curve Singleplayer.png", 22
   Load image "Images/Menu/Curve Multiplayer.png", 23
   Load image "Images/Menu/Curve Customisation.png", 24
   Load image "Images/Menu/Curve Tutorial.png", 25
   Load image "Images/Menu/Curve High Scores.png", 26
   Load image "Images/Menu/Sides Normal.png", 27
   Load image "Images/Menu/Sides Singleplayer.png", 28
   Load image "Images/Menu/Sides Customisation.png", 29
   Load image "Images/Menu/Sides High Scores.png", 30
   Load image "Images/Menu/Sides Options.png", 31
   Load image "Images/Menu/Tutorial Button 2.png", 34
   Load image "Images/Menu/Customisation Button 2.png", 35
   Load image "Images/Menu/Options Button 2.png", 37
   Load image "Images/Menu/Log Out Button 2.png", 38
   Load image "Images/Menu/Customisation Button 3.png", 46
   Load image "Images/Menu/Customisation Arrow Up.png", 47
   Load image "Images/Menu/Customisation Arrow Down.png", 48
   Load image "Images/Menu/Tutorial Button 3.png", 49
   Load image "Images/Menu/Tutorial Arrow Up.png", 50
   Load image "Images/Menu/Tutorial Arrow Down.png", 51
   Load image "Images/Menu/Ship 1 Preview.png", 55
   Load image "Images/Menu/Ship 2 Preview.png", 56
   Load image "Images/Menu/Ship 3 Preview.png", 57
   Load image "Images/Menu/Ship 4 Preview.png", 58
   Load image "Images/Menu/Ship 5 Preview.png", 59
   Load image "Images/Menu/Ship 6 Preview.png", 60
   Load image "Images/Menu/Ship 7 Preview.png", 61
   Load image "Images/Menu/Ship 8 Preview.png", 62
   Load image "Images/Menu/Locked Option.png", 63
   Load image "Images/Menu/Custom Blue.png", 64
   Load image "Images/Menu/Custom Red.png", 65
   Load image "Images/Menu/Custom Yellow.png", 66
   Load image "Images/Menu/Custom Green.png", 67
   Load image "Images/Menu/Custom Orange.png", 68
   Load image "Images/Menu/Custom Purple.png", 69
   Load image "Images/Menu/Custom Grey.png", 70
   Load image "Images/Menu/Custom Pink.png", 71
   Load image "Images/Menu/Custom Brown.png", 72
   Load image "Images/Menu/Custom White.png", 73
   Load image "Images/Menu/Custom Special.png", 74
   Load image "Images/Menu/Box 7.png", 76
   Load image "Images/Menu/Scores Arrow Up.png", 77
   Load image "Images/Menu/Scores Arrow Down.png", 78
   Load image "Images/Menu/Scores Arrow Left.png", 79
   Load image "Images/Menu/Scores Arrow Right.png", 80
   Load image "Images/Menu/Player Info Box.png", 81
   Load image "Images/Menu/Ship Rating Symbol.png", 82
   Load image "Images/Menu/Mission Locked.png", 86
   Load image "Images/Menu/Mission Available.png", 87
   Load image "Images/Menu/Mission Complete.png", 88
   Load image "Images/Menu/Multiplayer Button 3.png", 90
   Load image "Images/Menu/Multiplayer Arrow Up.png", 91
   Load image "Images/Menu/Multiplayer Arrow Down.png", 92
   Load image "Images/Menu/Button Indicator 9.png", 93
   Load image "Images/Menu/Options Box.png", 95
   Load image "Images/Menu/Options Tab 1.png", 96
   Load image "Images/Menu/Options Tab 2.png", 97
   Load image "Images/Menu/Prompt Box.png", 102
   Load image "Images/Menu/Button Indicator 10.png", 103
   Load image "Images/Menu/New Message Alert.png", 104
   Load image "Images/Menu/Messaging Box.png", 105
   Load image "Images/Menu/Box 8.png", 106
   Load image "Images/Menu/Completion Box.png", 107
   Load image "Images/Menu/High Score Box.png", 108

   `201 to 240: Backgrounds
   Load image "Images/Backgrounds/Menu Background.png", 226

   `501 to 550: Map screen images
   Load image "Images/Mission Info/Mission Info 1.png", 501
   Load image "Images/Mission Info/Mission Info 2.png", 502
   Load image "Images/Mission Info/Mission Info 3.png", 503
   Load image "Images/Mission Info/Mission Info 4.png", 504
   Load image "Images/Mission Info/Mission Info 5.png", 505
   Load image "Images/Mission Info/Mission Info 6.png", 506
   Load image "Images/Mission Info/Mission Info 7.png", 507
   Load image "Images/Mission Info/Mission Info 8.png", 508
   Load image "Images/Mission Info/Mission Info 9.png", 509
   Load image "Images/Mission Info/Mission Info 10.png", 510
   Load image "Images/Mission Info/Mission Info 11.png", 511
   Load image "Images/Mission Info/Mission Info 12.png", 512
   Load image "Images/Mission Info/Mission Info 13.png", 513
   Load image "Images/Mission Info/Mission Info 14.png", 514
   Load image "Images/Mission Info/Mission Info 15.png", 515
   Load image "Images/Mission Info/Mission Info 16.png", 516
   Load image "Images/Mission Info/Mission Info 17.png", 517
   Load image "Images/Mission Info/Mission Info 18.png", 518
   Load image "Images/Mission Info/Mission Info 19.png", 519
   Load image "Images/Mission Info/Mission Info 20.png", 520

   `551 to 600: Tutorial pages
   Load image "Images/Tutorials/Tutorial 1A.png", 551
   Load image "Images/Tutorials/Tutorial 1B.png", 552
   Load image "Images/Tutorials/Tutorial 1C.png", 553
   Load image "Images/Tutorials/Tutorial 1D.png", 554
   Load image "Images/Tutorials/Tutorial 2.png", 555
   Load image "Images/Tutorials/Tutorial 3.png", 556
   Load image "Images/Tutorials/Tutorial 4.png", 557
   Load image "Images/Tutorials/Tutorial 5.png", 558
   Load image "Images/Tutorials/Tutorial 6.png", 559
   Load image "Images/Tutorials/Tutorial 7.png", 560
   Load image "Images/Tutorials/Tutorial 8.png", 561
   Load image "Images/Tutorials/Tutorial 9.png", 562
   Load image "Images/Tutorials/Tutorial 10.png", 563
   Load image "Images/Tutorials/Tutorial 11.png", 564
   Load image "Images/Tutorials/Tutorial 12.png", 565
   Load image "Images/Tutorials/Tutorial 13.png", 566
   Load image "Images/Tutorials/Tutorial 14.png", 567
   Load image "Images/Tutorials/Tutorial 15.png", 568
   Load image "Images/Tutorials/Tutorial 16.png", 569
   Load image "Images/Tutorials/Tutorial Blank.png", 590

   `======= LOADING SOUNDS =======

   `==========================
   loadStage = 9
   loadString$ = "Loading menu sounds..."
   GoSub LoadingScreenHandling
   `==========================

   Load sound "Music/" + fileOptions$(6,1) + "/Completion Music.mp3", 24
   Load sound "Music/" + fileOptions$(6,1) + "/Menu Song.mp3", 25

   `51 and onward: Sound effects
   Load sound "Sounds/Buy.mp3", 60

   GoSub ApplyVolume

Return

DeleteMenuAssets:
`Deletes images and sounds used in the menus.

   `======= DELETE IMAGES =======

   `1 to 200: Menu resources
   Delete image 1
   Delete image 2
   Delete image 13
   Delete image 14
   Delete image 15
   Delete image 16
   Delete image 17
   Delete image 21
   Delete image 22
   Delete image 23
   Delete image 24
   Delete image 25
   Delete image 26
   Delete image 27
   Delete image 28
   Delete image 29
   Delete image 30
   Delete image 31
   Delete image 34
   Delete image 35
   Delete image 37
   Delete image 38
   Delete image 46
   Delete image 47
   Delete image 48
   Delete image 49
   Delete image 50
   Delete image 51
   Delete image 55
   Delete image 56
   Delete image 57
   Delete image 58
   Delete image 59
   Delete image 60
   Delete image 61
   Delete image 62
   Delete image 63
   Delete image 64
   Delete image 65
   Delete image 66
   Delete image 67
   Delete image 68
   Delete image 69
   Delete image 70
   Delete image 71
   Delete image 72
   Delete image 73
   Delete image 74
   Delete image 76
   Delete image 77
   Delete image 78
   Delete image 79
   Delete image 80
   Delete image 81
   Delete image 82
   Delete image 86
   Delete image 87
   Delete image 88
   Delete image 90
   Delete image 91
   Delete image 92
   Delete image 93
   Delete image 95
   Delete image 96
   Delete image 97
   Delete image 102
   Delete image 103
   Delete image 104
   Delete image 105
   Delete image 106
   Delete image 107
   Delete image 108

   `201 to 240: Backgrounds
   Delete image 226

   `501 to 550: Map screen images
   Delete image 501
   Delete image 502
   Delete image 503
   Delete image 504
   Delete image 505
   Delete image 506
   Delete image 507
   Delete image 508
   Delete image 509
   Delete image 510
   Delete image 511
   Delete image 512
   Delete image 513
   Delete image 514
   Delete image 515
   Delete image 516
   Delete image 517
   Delete image 518
   Delete image 519
   Delete image 520

   `551 to 600: Tutorial pages
   Delete image 551
   Delete image 552
   Delete image 553
   Delete image 554
   Delete image 555
   Delete image 556
   Delete image 557
   Delete image 558
   Delete image 559
   Delete image 560
   Delete image 561
   Delete image 562
   Delete image 563
   Delete image 564
   Delete image 565
   Delete image 566
   Delete image 567
   Delete image 568
   Delete image 569
   Delete image 590

   `======= DELETE SOUNDS =======

   Delete sound 24
   Delete sound 25

   Delete sound 60

Return

LoadGameAssets:
`Loads images and sounds used in the game.

   `======= LOADING IMAGES =======

   `201 to 240: Backgrounds
   Load image "Images/Backgrounds/Background 1.jpg", 201
   Load image "Images/Backgrounds/Background 2.png", 202
   Load image "Images/Backgrounds/Background 3.png", 203
   Load image "Images/Backgrounds/Background 4.png", 204
   Load image "Images/Backgrounds/Background 5.jpg", 205
   Load image "Images/Backgrounds/Background 6.jpg", 206
   Load image "Images/Backgrounds/Background 7.png", 207
   Load image "Images/Backgrounds/Background 8.jpg", 208
   Load image "Images/Backgrounds/Background 9.jpg", 209
   Load image "Images/Backgrounds/Background 10.jpg", 210
   Load image "Images/Backgrounds/Background 11.jpg", 211
   Load image "Images/Backgrounds/Background 12.jpg", 212
   Load image "Images/Backgrounds/Background 13.jpg", 213
   Load image "Images/Backgrounds/Background 14.jpg", 214
   Load image "Images/Backgrounds/Background 15.jpg", 215
   Load image "Images/Backgrounds/Background 16.png", 216
   Load image "Images/Backgrounds/Background 17.jpg", 217
   Load image "Images/Backgrounds/Background 18.jpg", 218
   Load image "Images/Backgrounds/Background 19.jpg", 219
   Load image "Images/Backgrounds/Background 20.png", 220

   `241 to 400: Ships
   Load bitmap "Images/Ships/Ships.bmp", 1
   Set current bitmap 1
   For i = 1 to 8
      For j = 1 to 15
         If (j >= 1 and j <= 10) or j = 15
            Get image j + ((i-1)*15) + 240, 0 + ((i-1)*97), 0 + ((j-1)*73), 96 + ((i-1)*97), 72 + ((j-1)*73)
         EndIf
      Next j
   Next i
   Get image 362, 776, 73, 872, 145
   Get image 363, 776, 146, 872, 218
   Get image 364, 776, 219, 872, 291
   Delete bitmap 1

   `401 to 500: Powerups and projectiles
   Load image "Images/Powerups and Projectiles/Laser 1 - Normal.png", 401
   Load image "Images/Powerups and Projectiles/Laser 1 - Ion Trigger.png", 402
   Load image "Images/Powerups and Projectiles/Laser 1 - Power Pack.png", 403
   Load image "Images/Powerups and Projectiles/Laser 1 - Diffraction Cannon.png", 404
   Load image "Images/Powerups and Projectiles/Laser 2 - Normal.png", 405
   Load image "Images/Powerups and Projectiles/Laser 2 - Ion Trigger.png", 406
   Load image "Images/Powerups and Projectiles/Laser 2 - Power Pack.png", 407
   Load image "Images/Powerups and Projectiles/Laser 2 - Diffraction Cannon.png", 408
   Load image "Images/Powerups and Projectiles/Laser 4 - Normal.png", 409
   Load image "Images/Powerups and Projectiles/Laser 4 - Ion Trigger.png", 410
   Load image "Images/Powerups and Projectiles/Laser 4 - Power Pack.png", 411
   Load image "Images/Powerups and Projectiles/Laser 4 - Diffraction Cannon.png", 412
   Load image "Images/Powerups and Projectiles/Laser 5 - Normal.png", 413
   Load image "Images/Powerups and Projectiles/Laser 5 - Ion Trigger.png", 414
   Load image "Images/Powerups and Projectiles/Laser 5 - Power Pack.png", 415
   Load image "Images/Powerups and Projectiles/Laser 5 - Diffraction Cannon.png", 416
   Load image "Images/Powerups and Projectiles/Laser 8 - Normal.png", 417
   Load image "Images/Powerups and Projectiles/Laser 8 - Ion Trigger.png", 418
   Load image "Images/Powerups and Projectiles/Laser 8 - Power Pack.png", 419
   Load image "Images/Powerups and Projectiles/Laser 8 - Diffraction Cannon.png", 420
   Load image "Images/Powerups and Projectiles/Laser 3 - Normal.png", 421
   Load image "Images/Powerups and Projectiles/Laser 3 - Ion Trigger.png", 422
   Load image "Images/Powerups and Projectiles/Laser 3 - Power Pack.png", 423
   Load image "Images/Powerups and Projectiles/Laser 3 - Diffraction Cannon.png", 424
   Load image "Images/Powerups and Projectiles/Laser 7 - Normal.png", 425
   Load image "Images/Powerups and Projectiles/Laser 7 - Ion Trigger.png", 426
   Load image "Images/Powerups and Projectiles/Laser 7 - Power Pack.png", 427
   Load image "Images/Powerups and Projectiles/Laser 7 - Diffraction Cannon.png", 428
   Load image "Images/Powerups and Projectiles/Laser 6 - Normal.png", 429
   Load image "Images/Powerups and Projectiles/Laser 6 - Ion Trigger.png", 430
   Load image "Images/Powerups and Projectiles/Laser 6 - Power Pack.png", 431
   Load image "Images/Powerups and Projectiles/Laser 6 - Diffraction Cannon.png", 432
   Load image "Images/Powerups and Projectiles/Laser Enemy.png", 433
   Load image "Images/Powerups and Projectiles/Nuclear Pulse - Projectile.png", 434
   Load image "Images/Powerups and Projectiles/Terravolt Bomb - Projectile.png", 435
   Load image "Images/Powerups and Projectiles/Black Hole Blast - Projectile.png", 436
   Load image "Images/Powerups and Projectiles/Nova Shielding - Shield.png", 437
   Load image "Images/Powerups and Projectiles/Evasion Cloak - Cloak.png", 438
   Load image "Images/Powerups and Projectiles/Extra Life - Pickup.png", 439

   Load image "Images/Powerups and Projectiles/Flight Kit - Icon.png", 471
   Load image "Images/Powerups and Projectiles/Power Pack - Icon.png", 472
   Load image "Images/Powerups and Projectiles/Ion Trigger - Icon.png", 473
   Load image "Images/Powerups and Projectiles/Boost Array - Icon.png", 474
   Load image "Images/Powerups and Projectiles/Underclocker Drive - Icon.png", 475
   Load image "Images/Powerups and Projectiles/Nuclear Pulse - Icon.png", 476
   Load image "Images/Powerups and Projectiles/Bounty Exchange - Icon.png", 477
   Load image "Images/Powerups and Projectiles/Nova Shielding - Icon.png", 478
   Load image "Images/Powerups and Projectiles/Diffraction Cannon - Icon.png", 479
   Load image "Images/Powerups and Projectiles/Terravolt Bomb - Icon.png", 480
   Load image "Images/Powerups and Projectiles/Evasion Cloak - Icon.png", 481
   Load image "Images/Powerups and Projectiles/Black Hole Blast - Icon.png", 482
   Load image "Images/Powerups and Projectiles/Rogue Laser 1.png", 483
   Load image "Images/Powerups and Projectiles/Rogue Laser 2.png", 484
   Load image "Images/Powerups and Projectiles/Rogue Laser 3.png", 485

   `601 to 700: Enemies and Bosses
   Load image "Images/Enemies/Enemy 1.png", 601
   Load image "Images/Enemies/Enemy 2.png", 602
   Load image "Images/Enemies/Enemy 3.png", 603
   Load image "Images/Enemies/Enemy 4.png", 604
   Load image "Images/Enemies/Enemy 5.png", 605
   Load image "Images/Enemies/Enemy 6.png", 606
   Load image "Images/Enemies/Enemy 7.png", 607
   Load image "Images/Enemies/Enemy 8.png", 608
   Load image "Images/Enemies/Enemy 9.png", 609
   Load image "Images/Enemies/Enemy 10.png", 610
   Load image "Images/Enemies/Enemy 11.png", 611
   Load image "Images/Enemies/Enemy 12.png", 612
   Load image "Images/Enemies/Enemy 13.png", 613
   Load image "Images/Enemies/Enemy 14.png", 614
   Load image "Images/Enemies/Enemy 15.png", 615
   Load image "Images/Enemies/Enemy 16.png", 616
   Load image "Images/Enemies/Enemy 17.png", 617
   Load image "Images/Enemies/Enemy Invisible.png", 618

   Load image "Images/Enemies/Boss 1.png", 651
   Load image "Images/Enemies/Boss 2.png", 652
   Load image "Images/Enemies/Boss 3.png", 653
   Load image "Images/Enemies/Boss 4A.png", 654
   Load image "Images/Enemies/Boss 4B.png", 655
   Load image "Images/Enemies/Boss 5A.png", 656
   Load image "Images/Enemies/Boss 5B.png", 657
   Load image "Images/Enemies/Boss 6.png", 658
   Load image "Images/Enemies/Boss 7.png", 659
   Load image "Images/Enemies/Boss 8A.png", 660
   Load image "Images/Enemies/Boss 8B.png", 661
   Load image "Images/Enemies/Boss 9.png", 662
   Load image "Images/Enemies/Boss 10A.png", 663
   Load image "Images/Enemies/Boss 10B.png", 664
   Load image "Images/Enemies/Boss 10C.png", 665
   Load image "Images/Enemies/Boss 11.png", 666
   Load image "Images/Enemies/Boss 13.png", 667
   Load image "Images/Enemies/Boss 14.png", 668
   Load image "Images/Enemies/Boss 15.jpg", 669
   Load image "Images/Enemies/Boss 16.png", 670
   Load image "Images/Enemies/Boss 17A.png", 671
   Load image "Images/Enemies/Boss 17B.png", 672
   Load image "Images/Enemies/Boss 18A.png", 673
   Load image "Images/Enemies/Boss 18B.png", 674
   Load image "Images/Enemies/Boss 20A.png", 675
   Load image "Images/Enemies/Boss 20B.png", 676
   Load image "Images/Enemies/Boss 20C.png", 677
   Load image "Images/Enemies/Boss 20D.png", 678

   `701 to 750: Game GUI
   Load image "Images/Game GUI/Status Bar.png", 701
   Load image "Images/Game GUI/Health 0.png", 702
   Load image "Images/Game GUI/Health 1.png", 703
   Load image "Images/Game GUI/Health 2.png", 704
   Load image "Images/Game GUI/Health 3.png", 705
   Load image "Images/Game GUI/Health 4.png", 706
   Load image "Images/Game GUI/Health 5.png", 707
   Load image "Images/Game GUI/Health 6.png", 708
   Load image "Images/Game GUI/Health 7.png", 709
   Load image "Images/Game GUI/Health 8.png", 710
   Load image "Images/Game GUI/Health 9.png", 711
   Load image "Images/Game GUI/Health 10.png", 712
   Load image "Images/Game GUI/Game Over Box.png", 713
   Load image "Images/Game GUI/Lives Box.png", 714
   Load image "Images/Game GUI/Power Core Using.png", 715
   Load image "Images/Game GUI/Power Core Recharging.png", 716
   Load image "Images/Game GUI/Power Core Normal.png", 717
   Load image "Images/Game GUI/Status Bar Competitive.png", 718

   `======= LOADING SOUNDS =======

   `51 and onward: Sound effects
   Load sound "Sounds/Player Death.wav", 51
   Load sound "Sounds/Laser.wav", 52
   Load sound "Sounds/Power Core.wav", 53
   Load sound "Sounds/Pause.mp3", 57
   Load sound "Sounds/Explosion.wav", 58
   Load sound "Sounds/Crash.mp3", 59
   Load sound "Sounds/Explosion 2.wav", 61
   Load sound "Sounds/Enemy Laser.wav", 62
   Load sound "Sounds/Extra Life.wav", 63

   GoSub ApplyVolume

Return

DeleteGameAssets:
`Deletes images and sounds used in the game.

   ` ======= DELETE IMAGES =======

   `201 to 240: Backgrounds
   For k = 201 to 220
      If image exist(k) = 1 then Delete image k
   Next k

   `241 to 400: Ships
   For k = 241 to 360
      If image exist(k) = 1 then Delete image k
   Next k
   Delete image 362
   Delete image 363
   Delete image 364

   `401 to 500: Powerups and projectiles
   Delete image 401
   Delete image 402
   Delete image 403
   Delete image 404
   Delete image 405
   Delete image 406
   Delete image 407
   Delete image 408
   Delete image 409
   Delete image 410
   Delete image 411
   Delete image 412
   Delete image 413
   Delete image 414
   Delete image 415
   Delete image 416
   Delete image 417
   Delete image 418
   Delete image 419
   Delete image 420
   Delete image 421
   Delete image 422
   Delete image 423
   Delete image 424
   Delete image 425
   Delete image 426
   Delete image 427
   Delete image 428
   Delete image 429
   Delete image 430
   Delete image 431
   Delete image 432
   Delete image 433
   Delete image 434
   Delete image 435
   Delete image 436
   Delete image 437
   Delete image 438
   Delete image 439

   Delete image 471
   Delete image 472
   Delete image 473
   Delete image 474
   Delete image 475
   Delete image 476
   Delete image 477
   Delete image 478
   Delete image 479
   Delete image 480
   Delete image 481
   Delete image 482
   Delete image 483
   Delete image 484
   Delete image 485

   `601 to 700: Enemies and Bosses
   Delete image 601
   Delete image 602
   Delete image 603
   Delete image 604
   Delete image 605
   Delete image 606
   Delete image 607
   Delete image 608
   Delete image 609
   Delete image 610
   Delete image 611
   Delete image 612
   Delete image 613
   Delete image 614
   Delete image 615
   Delete image 616
   Delete image 617
   Delete image 618

   Delete image 651
   Delete image 652
   Delete image 653
   Delete image 654
   Delete image 655
   Delete image 656
   Delete image 657
   Delete image 658
   Delete image 659
   Delete image 660
   Delete image 661
   Delete image 662
   Delete image 663
   Delete image 664
   Delete image 665
   Delete image 666
   Delete image 667
   Delete image 668
   Delete image 669
   Delete image 670
   Delete image 671
   Delete image 672
   Delete image 673
   Delete image 674
   Delete image 675
   Delete image 676
   Delete image 677
   Delete image 678

   `701 to 750: Game GUI
   Delete image 701
   Delete image 702
   Delete image 703
   Delete image 704
   Delete image 705
   Delete image 706
   Delete image 707
   Delete image 708
   Delete image 709
   Delete image 710
   Delete image 711
   Delete image 712
   Delete image 713
   Delete image 714
   Delete image 715
   Delete image 716
   Delete image 717
   Delete image 718

   `======= DELETE SOUNDS =======

   `51 and onward: Sound effects
   Delete sound 51
   Delete sound 52
   Delete sound 53
   Delete sound 57
   Delete sound 58
   Delete sound 59
   Delete sound 61
   Delete sound 62
   Delete sound 63

   For k = 1 to 30
      If sound exist(k) = 1 then Delete sound k
   Next k

Return

CallLoadingScreen1:
`Displays the game loading screen.

   cls
   cls
   Paste image 84, 344, 256
   sync
   sync

Return

CallLoadingScreen2:
`Displays the menu loading screen.

   cls
   cls
   Paste image 94, 344, 256
   sync
   sync

Return

LoadSongs:
`Loads songs into game when they are needed.

   If songToLoad > 0 and songToLoad <= 20
      Load sound "Music/" + fileOptions$(6,1) + "/Song " + STR$(songToLoad) + ".mp3", setMusic
   EndIf
   Load sound "Music/" + fileOptions$(6,1) + "/Fanfare.mp3", 21
   Load sound "Music/" + fileOptions$(6,1) + "/Boss Music 1.mp3", 28
   If songToLoad = 22 then Load sound "Music/" + fileOptions$(6,1) + "/Battle Music.mp3", 22
   If missionNumber = 0 or missionNumber = 7 or missionNumber = 12 or missionNumber = 19
      Load sound "Music/" + fileOptions$(6,1) + "/Boss Music Pirate.mp3", 27
   EndIf
   If missionNumber = 0 or missionNumber = 5 or missionNumber = 10 or missionNumber = 15 or missionNumber = 19
      Load sound "Music/" + fileOptions$(6,1) + "/Boss Music 2.mp3", 29
   EndIf
   If missionNumber = 0 or missionNumber = 9 or missionNumber = 13 or missionNumber = 16 or missionNumber = 19
      Load sound "Music/" + fileOptions$(6,1) + "/Boss Music Rogue.mp3", 30
   EndIf

   GoSub ApplyVolume

Return

` === LOG IN PROCEDURES ===

LogInHandling:
`Used to compare entered player details with those stored in the database, then either log the user into their account
` or refuse them entry, based on whether or not they have entered their details correctly.

   `Loads the data into the game first.
   GoSub FileLoading

   `Validates the save files before they can be used in the game.
   GoSub WriteSaves

   `Initialises variables.
   badChar = 0
   logInSuccess = 0

   `Checks that username and password is correct length.
   If Len(userName$) < 6 or Len(userName$) > 20 then badChar = 1
   If Len(passWord$) < 8 or Len(passWord$) > 20 then badChar = 1

   `Checks to see if non-permitted characters have been used.
   badChar = 0
      For i = 1 to 20
      badString$ = RIGHT$(LEFT$(userName$, i), 1)
      If badString$ = "0" or badString$ = "-" or badString$ = " " then badChar = 1
      badString$ = RIGHT$(LEFT$(passWord$, i), 1)
      If badString$ = "0" or badString$ = "-" or badString$ = " " then badChar = 1
   Next i

   `Runs loop to compare the username and passwords of each player
   `to the username and password entered, if the log in details have
   `passed the validation checks.
   If badChar = 0
      For i = 1 to 10
         `If the player has been found, then transfer the relevant data from the file arrays to the main game array.
         If filePlayerStore$(i, 2) = userName$ and filePlayerStore$(i, 3) = passWord$ and Val(filePlayerStore$(i, 4)) = 1
            playerType$ = "Player"
            `Transfers data from player file into playerAccount$.
            playerAccount$(1) = filePlayerStore$(i, 1)
            playerAccount$(2) = filePlayerStore$(i, 2)
            playerAccount$(3) = filePlayerStore$(i, 3)
            playerAccount$(4) = filePlayerStore$(i, 4)
            `Using PA link to find the account the player is linked to.
            For j = 1 to 10
               If playerAccount$(1) = filePlayerLink$(j, 1) then playerAccount$(5) = filePlayerLink$(j, 2)
            Next j
            `Transfers data from the appropriate account entry into playerAccount$.
            For j = 1 to 10
               If playerAccount$(5) = fileAccountStore$(j, 1)
                  playerAccount$(6) = fileAccountStore$(j, 2)
                  playerAccount$(7) = fileAccountStore$(j, 3)
                  playerAccount$(8) = fileAccountStore$(j, 4)
                  playerAccount$(9) = fileAccountStore$(j, 5)
                  playerAccount$(10) = fileAccountStore$(j, 6)
                  playerAccount$(11) = fileAccountStore$(j, 7)
                  playerAccount$(12) = fileAccountStore$(j, 8)
                  playerAccount$(13) = fileAccountStore$(j, 9)
                  playerAccount$(14) = fileAccountStore$(j, 10)
                  playerAccount$(15) = fileAccountStore$(j, 11)
                  j = 11
               EndIf
            Next j
            `Transfers data from the appropriate purchase entry into playerAccount$.
            For j = 1 to 10
               If playerAccount$(5) = filePurchases$(j, 1)
                  playerAccount$(16) = filePurchases$(j, 2)
                  playerAccount$(17) = filePurchases$(j, 3)
                  playerAccount$(18) = filePurchases$(j, 4)
                  playerAccount$(19) = filePurchases$(j, 5)
                  j = 11
               EndIf
            Next j
            GoSub TransferSaves
            logInSuccess = 1
            i = 11
         EndIf
      Next i
   Else
      promptActive = 1
      promptHeader$ = "ERROR"
      promptLine1$ = "These details are incorrect, and should not be in the database."
      promptLine2$ = "If you believe this response to be incorrect, please contact an admin."
      promptType$ = "Okay"
      Play sound 56
   EndIf

   `Sets variables depending on whether or not log in was successful.
   If logInSuccess = 1
      userName$ = ""
      `Sends user to main menu.
      menu$ = "Main"
      `Resets any debug variables that might be left over from a previous user.
      debugShowDataIn = 0
      debugAllowDeath = 0
      debugInfiniteHealth = 0
      debugWaveAdvance = 0
      debugShowFPS = 0
      debugScorePlus = 0
      debugBitzPlus = 0
      debugKillEnemies = 0
      debugStopEnemies = 0
      debugShowDataOut = 0
      debugBuyAll = 0
      debugPlayAll = 0
      debugLevelUp = 0
      debugBitzUp = 0
      `Loads messages into game memory, and determines if the player has
      `any new messages.
      GoSub ReadMessages
      NewMessages()
      `Plays the log in success sound.
      Play sound 55
   Else
      If badChar = 0
         `Displays prompt box to notify the player that they have not logged in.
         promptActive = 1
         promptHeader$ = "LOG IN FAILED"
         promptLine1$ = "Incorrect Username/Password."
         promptType$ = "Okay"
         Play sound 56
      EndIf
   EndIf

   `Clears password field.
   passWord$ = ""

Return

TransferSaves:
`Used to store all of the player's mission mode save files in one array
`for easy access by the game, or for reverting a player's mission mode progress
`by replacing the data from the array with the data in the file.

   `Finds the save IDs that are linked to the player's account.
   For j = 1 to 10
      If playerAccount$(5) = fileSaveLink$(j, 1)
         playerSaves$(1, 1) = fileSaveLink$(j, 2)
         playerSaves$(2, 1) = fileSaveLink$(j, 3)
         playerSaves$(3, 1) = fileSaveLink$(j, 4)
         j = 11
      EndIf
   Next j
   `Transfers all of the player's saves to the in game array.
   For j = 1 to 30
      For k = 1 to 3
         If playerSaves$(k, 1) = fileSaveStore$(j, 1)
            playerSaves$(k, 2) = fileSaveStore$(j, 2)
            playerSaves$(k, 3) = fileSaveStore$(j, 3)
            playerSaves$(k, 4) = fileSaveStore$(j, 4)
            playerSaves$(k, 5) = fileSaveStore$(j, 5)
            playerSaves$(k, 6) = fileSaveStore$(j, 6)
            playerSaves$(k, 7) = fileSaveStore$(j, 7)
            playerSaves$(k, 8) = fileSaveStore$(j, 8)
            playerSaves$(k, 9) = fileSaveStore$(j, 9)
            playerSaves$(k, 10) = fileSaveStore$(j, 10)
            playerSaves$(k, 11) = fileSaveStore$(j, 11)
            playerSaves$(k, 12) = fileSaveStore$(j, 12)
            playerSaves$(k, 13) = fileSaveStore$(j, 13)
            playerSaves$(k, 14) = fileSaveStore$(j, 14)
            playerSaves$(k, 15) = fileSaveStore$(j, 15)
            playerSaves$(k, 16) = fileSaveStore$(j, 16)
            playerSaves$(k, 17) = fileSaveStore$(j, 17)
            playerSaves$(k, 18) = fileSaveStore$(j, 18)
            playerSaves$(k, 19) = fileSaveStore$(j, 19)
            playerSaves$(k, 20) = fileSaveStore$(j, 20)
            playerSaves$(k, 21) = fileSaveStore$(j, 21)
            playerSaves$(k, 22) = fileSaveStore$(j, 22)
            playerSaves$(k, 23) = fileSaveStore$(j, 23)
            playerSaves$(k, 24) = fileSaveStore$(j, 24)
         EndIf
      Next k
   Next j

Return

` === FILE HANDLING PROCEDURES ===

FileLoading:
`Loads all files into their appropriate arrays.

   GoSub ReadPlayers
   GoSub ReadPlayerLink
   GoSub ReadAccounts
   GoSub ReadPurchases
   GoSub ReadSaves
   GoSub ReadSaveLink

Return

FileSaving:
`Saving all data in the game's arrays to the database.

   GoSub WritePlayers
   GoSub WritePlayerLink
   GoSub WriteAccounts
   GoSub WritePurchases
   GoSub WriteSaves
   GoSub WriteSaveLink
   GoSub WriteOptions

Return

ReadPlayers:
`Reads all data from the Player file.

   `Opens file, and reads each string into it's appropriate slot in the array.
   Open to read 1, "Data Stores/Players.txt"
      For i = 1 to 10
         Read string 1, filePlayerStore$(i, 1)
         Read string 1, filePlayerStore$(i, 2)
         Read string 1, filePlayerStore$(i, 3)
         Read string 1, filePlayerStore$(i, 4)
      Next i
   Close file 1

Return

ClearPlayers:
`Used to reset all player data in the array.

   `Resets data in the array to the default values.
   For i = 1 to 10
      filePlayerStore$(i, 1) = "-"
      filePlayerStore$(i, 2) = "NONAME"
      filePlayerStore$(i, 3) = "NOPASS"
      filePlayerStore$(i, 4) = "0"
   Next i

Return

UpdatePlayers:
`Updates the entries of the players array.

   `Finds the player's account by looping through the data, and seeing if the
   `player ID matches any of the records in the database. This number is then
   `stored in saveNumber.
   saveNumber = 0
   i = 0
   While i <= 10
      INC i
      saveNumber = i
      If playerAccount$(1) = filePlayerStore$(saveNumber, 1) then i = 11
   EndWhile

   `Synchronises data in game with the database.
   If saveNumber <= 10
      For i = 2 to 4
         filePlayerStore$(saveNumber, i) = playerAccount$(i)
      Next i
   EndIf

Return

WritePlayers:
`Writes all relevant data to the Player file.

   `Deletes existing file.
   If file exist("Data Stores/Players.txt") = 1 then delete file "Data Stores/Players.txt"

   `Writes data in the array to the new file.
   Open to write 1, "Data Stores/Players.txt"
      For i = 1 to 10
         Write string 1, filePlayerStore$(i, 1)
         Write string 1, filePlayerStore$(i, 2)
         Write string 1, filePlayerStore$(i, 3)
         Write string 1, filePlayerStore$(i, 4)
      Next i
   Close file 1

Return

ReadPlayerLink:
`Loads the data from the PA Link file to link together players and their accounts.

   `Reads all data in the file to it's appropriate slot in the array.
   Open to read 2, "Data Stores/PA Link.txt"
      For i = 1 to 10
         Read string 2, filePlayerLink$(i, 1)
         Read string 2, filePlayerLink$(i, 2)
      Next i
   Close file 2

Return

ClearPlayerLink:
`Used to clear out all data from player link array.

   `Resets data in array to default values.
   For i = 1 to 10
      filePlayerLink$(i, 1) = "-"
      filePlayerLink$(i, 2) = "-"
   Next i

Return

WritePlayerLink:
`Saves data to the PA Link file.

   `Deletes existing file.
   If file exist("Data Stores/PA Link.txt") = 1 then delete file "Data Stores/PA Link.txt"

   `Writes data in the array to the new file.
   Open to write 2, "Data Stores/PA Link.txt"
      For i = 1 to 10
         Write string 2, filePlayerLink$(i, 1)
         Write string 2, filePlayerLink$(i, 2)
      Next i
   Close file 2

Return

ReadAccounts:
`Reads all accounts from the Accounts file.

   `Reads data in the file into the array.
   Open to read 3, "Data Stores/Accounts.txt"
      For i = 1 to 10
         Read string 3, fileAccountStore$(i, 1)
         Read string 3, fileAccountStore$(i, 2)
         Read string 3, fileAccountStore$(i, 3)
         Read string 3, fileAccountStore$(i, 4)
         Read string 3, fileAccountStore$(i, 5)
         Read string 3, fileAccountStore$(i, 6)
         Read string 3, fileAccountStore$(i, 7)
         Read string 3, fileAccountStore$(i, 8)
         Read string 3, fileAccountStore$(i, 9)
         Read string 3, fileAccountStore$(i, 10)
         Read string 3, fileAccountStore$(i, 11)
      Next i
   Close file 3

Return

UpdateAccounts:
`Updates the entries of the accounts array, and validates data being saved.

   `Finds the player's account by looping through the data, and seeing if the
   `account ID matches any of the records in the database. This number is then
   `stored in saveNumber.
   saveNumber = 0
   i = 0
   While i <= 10
      INC i
      saveNumber = i
      If playerAccount$(5) = fileAccountStore$(saveNumber, 1) then i = 11
   EndWhile

   `Validates player level, money and experience.
   If Val(playerAccount$(6)) > 20 then playerAccount$(6) = "20"
   If Val(playerAccount$(8)) > 9999 then playerAccount$(8) = "9999"
   If Val(playerAccount$(6)) < 1 then playerAccount$(6) = "1"
   If Val(playerAccount$(8)) < 0 then playerAccount$(8) = "0"
   If playerAccount$(6) = "20" then playerAccount$(7) = "0"

   `Synchronises data in game with the database.
   If saveNumber <= 10
      For i = 2 to 11
         fileAccountStore$(saveNumber, i) = playerAccount$(i + 4)
      Next i
      k = saveNumber
      `Adds new date to file.
      fileAccountStore$(k, 11) = get date$()
      fileAccountStore$(k, 11) = (RIGHT$((LEFT$(get date$(), 5)), 2)) + "/"
      fileAccountStore$(k, 11) = fileAccountStore$(k, 11) + (LEFT$(get date$(), 2)) + "/"
      fileAccountStore$(k, 11) = fileAccountStore$(k, 11) + (RIGHT$(get date$(), 2))
   EndIf

Return

ClearAccounts:
`Remove all data from the player Accounts array.

   `Resets all data in the array to it's default values.
   For i = 1 to 10
      fileAccountStore$(i, 1) = "-"
      fileAccountStore$(i, 2) = "0"
      fileAccountStore$(i, 3) = "0"
      fileAccountStore$(i, 4) = "0"
      fileAccountStore$(i, 5) = "-"
      fileAccountStore$(i, 6) = "-"
      fileAccountStore$(i, 7) = "-"
      fileAccountStore$(i, 8) = "-"
      fileAccountStore$(i, 9) = "-"
      fileAccountStore$(i, 10) = "-"
      fileAccountStore$(i, 11) = "01/01/14"
   Next i

Return

WriteAccounts:
`Writes updated account data to the local store.

   `Deletes existing file.
   If file exist("Data Stores/Accounts.txt") then delete file "Data Stores/Accounts.txt"

   `Writes data to new file.
   Open to write 3, "Data Stores/Accounts.txt"
      For i = 1 to 10
         Write string 3, fileAccountStore$(i, 1)
         Write string 3, fileAccountStore$(i, 2)
         Write string 3, fileAccountStore$(i, 3)
         Write string 3, fileAccountStore$(i, 4)
         Write string 3, fileAccountStore$(i, 5)
         Write string 3, fileAccountStore$(i, 6)
         Write string 3, fileAccountStore$(i, 7)
         Write string 3, fileAccountStore$(i, 8)
         Write string 3, fileAccountStore$(i, 9)
         Write string 3, fileAccountStore$(i, 10)
         Write string 3, fileAccountStore$(i, 11)
      Next i
   Close file 3

Return

ReadPurchases:
`Used to read state of player purchases from the local Purchases file.

   `Reads data from file into the array.
   Open to read 4, "Data Stores/Purchases.txt"
      For i = 1 to 10
         Read string 4, filePurchases$(i, 1)
         Read string 4, filePurchases$(i, 2)
         Read string 4, filePurchases$(i, 3)
         Read string 4, filePurchases$(i, 4)
         Read string 4, filePurchases$(i, 5)
      Next i
   Close file 4

Return

UpdatePurchases:
`Transfers changed data to the file array.

   `Finds the player's account by looping through the data, and seeing if the
   `account ID matches any of the records in the database. This number is then
   `stored in saveNumber.
   saveNumber = 0
   i = 0
   While i <= 10
      INC i
      saveNumber = i
      If playerAccount$(5) = filePurchases$(saveNumber, 1) then i = 11
   EndWhile

   `Loops through array and updates each purchase entry.
   For i = 0 to 3
      filePurchases$(saveNumber, 2 + i) = playerAccount$(16 + i)
   Next i

Return

ClearPurchases:
`Clears all purchase data from the array.

   `Resets all data to default values.
   For i = 1 to 10
      filePurchases$(i, 1) = "-"
      filePurchases$(i, 2) = "0"
      filePurchases$(i, 3) = "0"
      filePurchases$(i, 4) = "0"
      filePurchases$(i, 5) = "0"
   Next i

Return

WritePurchases:
`Used to write player purchases to the local store.

   `Deletes existing file.
   If file exist("Data Stores/Purchases.txt") then delete file "Data Stores/Purchases.txt"

   `Writes data in the array to the new file.
   Open to write 4, "Data Stores/Purchases.txt"
      For i = 1 to 10
         Write string 4, filePurchases$(i, 1)
         Write string 4, filePurchases$(i, 2)
         Write string 4, filePurchases$(i, 3)
         Write string 4, filePurchases$(i, 4)
         Write string 4, filePurchases$(i, 5)
      Next i
   Close file 4

Return

ReadScores:
`Used to read all local scores from the Local Scores file.

   `Reads all data from the file into the array.
   Open to read 5, "Data Stores/Scores.txt"
      For i = 1 to 100
         If file end(5) = 0
            Read string 5, fileScoreStore$(i, 1)
            Read string 5, fileScoreStore$(i, 2)
            Read string 5, fileScoreStore$(i, 3)
            Read string 5, fileScoreStore$(i, 4)
            Read string 5, fileScoreStore$(i, 5)
            Read string 5, fileScoreStore$(i, 6)
         EndIf
      Next i
   Close file 5

Return

SortScores:
`Used to order scores from smallest to largest score in the high
`score table. Can be switched to sort by endless or mission scores.

   `Changes the field to be sorted by.
   If highScoreMode$ = "Mission"
      sortField = 6
   Else
      sortField = 3
   EndIf

   `Begin bubble sort, which sorts from highest to lowest.
   For i = 1 to sortLimit
      If Val(fileScoreStore$(i, sortField)) < Val(fileScoreStore$(i + 1, sortField))
         For j = 1 to 6
            fileScoreStore$(101,j) = fileScoreStore$(i,j)
            fileScoreStore$(i,j) = fileScoreStore$(i + 1,j)
            fileScoreStore$(i + 1, j) = fileScoreStore$(101, j)
         Next j
      EndIf
   Next i

   `Decrease limit of comparisons.
   DEC sortLimit

   `Termating condition for recursive loop.
   If sortLimit > 0
      GoSub SortScores
   EndIf

Return

WriteScores:
`Used to save all local scores to the Local Scores file.

   `Deletes existing files.
   If file exist("Data Stores/Scores.txt") then delete file "Data Stores/Scores.txt"

   `Writes data in the array to the new file.
   Open to write 5, "Data Stores/Scores.txt"
      For i = 1 to 100
         Write string 5, fileScoreStore$(i, 1)
         Write string 5, fileScoreStore$(i, 2)
         Write string 5, fileScoreStore$(i, 3)
         Write string 5, fileScoreStore$(i, 4)
         Write string 5, fileScoreStore$(i, 5)
         Write string 5, fileScoreStore$(i, 6)
      Next i
   Close file 5

Return

ReadSaves:
`Used to load all locally stored save files into game memory.

   `Reads all data from the file into the array.
   Open to read 7, "Data Stores/Saves.txt"
      For i = 1 to 30
         If file end(7) = 0
            Read string 7, fileSaveStore$(i, 1)
            Read string 7, fileSaveStore$(i, 2)
            Read string 7, fileSaveStore$(i, 3)
            Read string 7, fileSaveStore$(i, 4)
            Read string 7, fileSaveStore$(i, 5)
            Read string 7, fileSaveStore$(i, 6)
            Read string 7, fileSaveStore$(i, 7)
            Read string 7, fileSaveStore$(i, 8)
            Read string 7, fileSaveStore$(i, 9)
            Read string 7, fileSaveStore$(i, 10)
            Read string 7, fileSaveStore$(i, 11)
            Read string 7, fileSaveStore$(i, 12)
            Read string 7, fileSaveStore$(i, 13)
            Read string 7, fileSaveStore$(i, 14)
            Read string 7, fileSaveStore$(i, 15)
            Read string 7, fileSaveStore$(i, 16)
            Read string 7, fileSaveStore$(i, 17)
            Read string 7, fileSaveStore$(i, 18)
            Read string 7, fileSaveStore$(i, 19)
            Read string 7, fileSaveStore$(i, 20)
            Read string 7, fileSaveStore$(i, 21)
            Read string 7, fileSaveStore$(i, 22)
            Read string 7, fileSaveStore$(i, 23)
            Read string 7, fileSaveStore$(i, 24)
         EndIf
      Next i
   Close file 7

Return

UpdateSaves:
`Updates the file saves with the player's saves.

   `Moves all data from the game arrays into the file arrays ready to
   `be saved to the database.
   For i = 1 to 3
      For j = 1 to 30
         If playerSaves$(i,1) = fileSaveStore$(j, 1)
            For k = 2 to 24
               fileSaveStore$(j, k) = playerSaves$(i, k)
            Next k
         EndIf
      Next j
   Next i

Return

UpdateSuspendSaves:
`Updates only the suspended area of the save record with the player's suspended data.

   `Moves all data from the game arrays into the file arrays ready to
   `be saved to the database.
   For i = 1 to 3
      For j = 1 to 30
         If playerSaves$(i,1) = fileSaveStore$(j, 1)
            For k = 7 to 24
               fileSaveStore$(j, k) = playerSaves$(i, k)
            Next k
         EndIf
      Next j
   Next i

Return

ClearSaves:
`Used to reset all data in the saves array.

   `Resets all data values in the array back to their default values.
   For i = 1 to 30
      fileSaveStore$(i, 1) = "-"
      fileSaveStore$(i, 2) = "0"
      fileSaveStore$(i, 3) = "0"
      fileSaveStore$(i, 4) = "0"
      fileSaveStore$(i, 5) = "-"
      fileSaveStore$(i, 6) = "0"
      fileSaveStore$(i, 7) = "0"
      fileSaveStore$(i, 8) = "-"
      fileSaveStore$(i, 9) = "-"
      fileSaveStore$(i, 10) = "-"
      fileSaveStore$(i, 11) = "-"
      fileSaveStore$(i, 12) = "-"
      fileSaveStore$(i, 13) = "-"
      fileSaveStore$(i, 14) = "-"
      fileSaveStore$(i, 15) = "-"
      fileSaveStore$(i, 16) = "-"
      fileSaveStore$(i, 17) = "-"
      fileSaveStore$(i, 18) = "-"
      fileSaveStore$(i, 19) = "-"
      fileSaveStore$(i, 20) = "-"
      fileSaveStore$(i, 21) = "-"
      fileSaveStore$(i, 22) = "-"
      fileSaveStore$(i, 23) = "-"
      fileSaveStore$(i, 24) = "-"
   Next i

Return

WriteSaves:
`Used to save all in-game stored save files into the local scores.

   `Deletes file if it already exists.
   If file exist("Data Stores/Saves.txt") then delete file "Data Stores/Saves.txt"

   `Writes all data to the new file.
   Open to write 7, "Data Stores/Saves.txt"
      For i = 1 to 30
         `Validates data entering the database.
         If Val(fileSaveStore$(i, 2)) < 0 then fileSaveStore$(i, 2) = "1"
         If Val(fileSaveStore$(i, 2)) > 20 then fileSaveStore$(i, 2) = "20"
         If Val(fileSaveStore$(i, 3)) < 0 then fileSaveStore$(i, 3) = "0"
         If Val(fileSaveStore$(i, 3)) > 99 then fileSaveStore$(i, 3) = "99"
         If Val(fileSaveStore$(i, 4)) < 0 then fileSaveStore$(i, 4) = "0"
         If Val(fileSaveStore$(i, 4)) > 99999999 then fileSaveStore$(i, 4) = "99999999"
         If Val(fileSaveStore$(i, 6)) < 0 then fileSaveStore$(i, 6) = "0"
         If Val(fileSaveStore$(i, 6)) > 99 then fileSaveStore$(i, 6) = "99"

         `Writes all data to the file.
         If file end(7) = 0
            Write string 7, fileSaveStore$(i, 1)
            Write string 7, fileSaveStore$(i, 2)
            Write string 7, fileSaveStore$(i, 3)
            Write string 7, fileSaveStore$(i, 4)
            Write string 7, fileSaveStore$(i, 5)
            Write string 7, fileSaveStore$(i, 6)
            Write string 7, fileSaveStore$(i, 7)
            Write string 7, fileSaveStore$(i, 8)
            Write string 7, fileSaveStore$(i, 9)
            Write string 7, fileSaveStore$(i, 10)
            Write string 7, fileSaveStore$(i, 11)
            Write string 7, fileSaveStore$(i, 12)
            Write string 7, fileSaveStore$(i, 13)
            Write string 7, fileSaveStore$(i, 14)
            Write string 7, fileSaveStore$(i, 15)
            Write string 7, fileSaveStore$(i, 16)
            Write string 7, fileSaveStore$(i, 17)
            Write string 7, fileSaveStore$(i, 18)
            Write string 7, fileSaveStore$(i, 19)
            Write string 7, fileSaveStore$(i, 20)
            Write string 7, fileSaveStore$(i, 21)
            Write string 7, fileSaveStore$(i, 22)
            Write string 7, fileSaveStore$(i, 23)
            Write string 7, fileSaveStore$(i, 24)
         EndIf
      Next i
   Close file 7

Return

ReadSaveLink:
`Used to load the links between accounts and saves into game memory.

   `Reads all data to from the file into the array.
   Open to read 8, "Data Stores/AS Link.txt"
      For i = 1 to 10
         If file end(8) = 0
            Read string 8, fileSaveLink$(i, 1)
            Read string 8, fileSaveLink$(i, 2)
            Read string 8, fileSaveLink$(i, 3)
            Read string 8, fileSaveLink$(i, 4)
         EndIf
      Next i
   Close file 8

Return

ClearSaveLink:
`Used to reset all data stored in the save link file.

   `Resets all data values in the array to their default values.
   For i = 1 to 10
      fileSaveLink$(i, 1) = "-"
      fileSaveLink$(i, 2) = "-"
      fileSaveLink$(i, 3) = "-"
      fileSaveLink$(i, 4) = "-"
   Next i

Return

WriteSaveLink:
`Used to load the links between accounts and saves into game memory.

   `Deletes the existing file.
   If file exist("Data Stores/AS Link.txt") = 1 then delete file "Data Stores/AS Link.txt"

   `Writes data to the new file.
   Open to write 8, "Data Stores/AS Link.txt"
      For i = 1 to 10
         Write string 8, fileSaveLink$(i, 1)
         Write string 8, fileSaveLink$(i, 2)
         Write string 8, fileSaveLink$(i, 3)
         Write string 8, fileSaveLink$(i, 4)
      Next i
   Close file 8

Return

ReadOptions:
`Used to retrieve data from the local Options file.

   `Reads all data from the file into the array.
   Open to read 9, "Data Stores/Options.txt"
      Read string 9, randomiser$
      Read string 9, totalPlayers$
      For i = 1 to 6
         Read string 9, fileOptions$(i, 1)
      Next i
   Close file 9

Return

WriteOptions:
`Used to rewrite all of the options data to the local Options file.

   `Deletes existing file.
   If file exist("Data Stores/Options.txt") = 1 then delete file "Data Stores/Options.txt"

   `Writes data to the new version of the file.
   Open to write 9, "Data Stores/Options.txt"
      Write string 9, randomiser$
      Write string 9, totalPlayers$
      For i = 1 to 6
         Write string 9, fileOptions$(i, 1)
      Next i
   Close file 9

Return

ReadAdmin:
`Used to retrieve data from the Admin file.

   `Read all data from the file into the array.
   Open to read 10, "Data Stores/Admins.txt"
      For i = 1 to 5
         Read string 10, fileAdminStore$(i, 1)
         Read string 10, fileAdminStore$(i, 2)
         Read string 10, fileAdminStore$(i, 3)
      Next i
   Close file 10

Return

ReadMessages:
`Used to retrieve data from the messages file.

   `Readsa all data in the file into the array.
   Open to read 11, "Data Stores/Messages.txt"
      For i = 1 to 100
         Read string 11, fileMessages$(i, 1)
         Read string 11, fileMessages$(i, 2)
         Read string 11, fileMessages$(i, 3)
         Read string 11, fileMessages$(i, 4)
         Read string 11, fileMessages$(i, 5)
      Next i
   Close file 11

Return

WriteMessages:
`Used to write data to the messages file.

   `Deletes existing version of the file.
   If file exist("Data Stores/Messages.txt") = 1 then delete file "Data Stores/Messages.txt"

   `Writes all data in the array to the new file.
   Open to write 11, "Data Stores/Messages.txt"
      For i = 1 to 100
         Write string 11, fileMessages$(i, 1)
         Write string 11, fileMessages$(i, 2)
         Write string 11, fileMessages$(i, 3)
         Write string 11, fileMessages$(i, 4)
         Write string 11, fileMessages$(i, 5)
      Next i
   Close file 11

Return

` === MENU PROCEDURES ===

MainMenuButtons:
`Used to detect button clicks on the main menu.

   `Main Menu: Singleplayer Button
   `Takes the player to the Singleplayer Menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 120 and mouseY() < 204) and menu$ = "Main"
      Paste image 19, 184, 120, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Single Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Main Menu: Multiplayer Button
   `Takes the player to the Multiplayer Menu.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 240 and mouseY() < 324) and menu$ = "Main"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Multi Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Main Menu: Tutorial Button
   `Takes the player to the Tutorial Screen.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 444) and menu$ = "Main"
      Paste image 19, 24, 360, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Tutorial"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Main Menu: Customisation Button
   `Takes the player to the Customisation Menu.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 480 and mouseY() < 564) and menu$ = "Main"
      Paste image 19, 64, 480, 1
      If mouseclick() = 1 and buttonTimer = 0
         prevMenu2$ = menu$
         menu$ = "Custom Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Main Menu: High Scores Button
   `Takes the player to the Scores and Messages Menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Main"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Scores Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Main Menu: Admin Button
   `Takes the player to the Admin Log In Screen.
   `Button will only appear when mouse is over it's location.
   If (mouseX() > 840 and mouseX() < 1000) and (mouseY() > 24 and mouseY() < 108) and menu$ = "Main" and playerType$ = "Player"
      Paste image 99, 840, 24, 1
      Set text size 12
      Center Text 920, 44, "Secret"
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Admin Log In"
         adminName$ = ""
         adminPass$ = ""
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Completion Screen: Back Button
   `Takes the player back to the main menu from the Mission Mode Completion Screen.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Completion Screen"
      Paste image 19, 344, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Reset's player's save file, but increases the amount of times they have completed
         `mission mode by 1. This will factor into their bonuses if they complete mission
         `mode again.
         playerSaves$(save, 2) = "0"
         playerSaves$(save, 3) = "0"
         playerSaves$(save, 4) = "0"
         playerSaves$(save, 6) = STR$(Val(playerSaves$(save, 6)) + 1)
         playerSaves$(save, 7) = "0"

         `Adds the completion bonuses to the player's account.
         playerAccount$(7) = STR$(Val(playerAccount$(7)) + expReward)
         playerAccount$(8) = STR$(Val(playerAccount$(8)) + bitzReward)

         `Increases the player's level if they have reached the needed experience level.
         If Val(playerAccount$(7)) > 100 * Val(playerAccount$(6))
            playerAccount$(7) = STR$(Val(playerAccount$(7)) - (100 * Val(playerAccount$(6))))
            playerAccount$(6) = STR$(Val(playerAccount$(6)) + 1)
         EndIf

         `Writes all relevant data to the database.
         If playerType$ = "Player" then GoSub UpdateSaves
         If playerType$ = "Player" then GoSub WriteSaves
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         If playerType$ = "Player" then saveTimer = 20

         `Stops completion song, and plays main menu song.
         Stop sound 24
         Play sound 25

         `Sets the player back to the main menu.
         menu$ = "Main"

         buttonTimer = TIMER
         Play sound 54

      EndIf
   EndIf

Return

LogInButtons:
`Handles button presses and text box focusing on the log in and account creation forms.

   `Title screen: Start button
   `Takes the user from the title screen to the log in screen.
   If (mouseX() > 392 and mouseX() < 632) and (mouseY() > 500 and mouseY() < 560) and menu$ = "Title" and mouseclick() = 1
      menu$ = "Log In"
      buttonTimer = TIMER
      Play sound 54
   EndIf

   `Log In Button
   `Checks the user's name and password against those stored in the database.
   `If match, then store user data and move to main menu.
   `Else, no not allow into game.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 560 and mouseY() < 644) and menu$ = "Log In"
      Paste image 44, 400, 520, 1
      If mouseclick() = 1 and buttonTimer = 0
         GoSub LogInHandling
         buttonTimer = TIMER
      EndIf
   EndIf

   `Create Account Button
   `Takes the user to the create account screen.
   If (mouseX() > 25 and mouseX() < 249) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Log In"
      Paste image 44, 25, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Create"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Play as Guest Button
   `Allows the user to play the game as a guest.
   `Data and scores are not saved as a guest, and some features are restricted.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Log In"
      Paste image 44, 275, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         playerType$ = "Guest"
         playerAccount$(1) = "Guest"
         playerAccount$(2) = "Guest"
         playerAccount$(3) = "Guest"
         playerAccount$(4) = "1"
         playerAccount$(5) = "Guest"
         playerAccount$(6) = "1"
         playerAccount$(7) = "0"
         playerAccount$(8) = "0"
         playerAccount$(9) = "Space Fighter"
         playerAccount$(10) = "Blue"
         playerAccount$(11) = "Flight Kit"
         playerAccount$(12) = "Power Pack"
         playerAccount$(13) = "Ion Trigger"
         playerAccount$(14) = "Boost Array"
         playerAccount$(15) = "01/01/2014"
         playerAccount$(16) = "0"
         playerAccount$(17) = "0"
         playerAccount$(18) = "0"
         playerAccount$(19) = "0"
         For j = 1 to 3
            playerSaves$(j, 1) = "-"
            playerSaves$(j, 2) = "0"
            playerSaves$(j, 3) = "0"
            playerSaves$(j, 4) = "0"
            playerSaves$(j, 5) = "-"
            playerSaves$(j, 6) = "0"
            playerSaves$(j, 7) = "0"
         Next j
         menu$ = "Main"
         Play sound 55
         buttonTimer = TIMER
      EndIf
   EndIf

   `Cancel Button
   `Clears the entry fields.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Log In"
      Paste image 44, 525, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         userName$ = ""
         passWord$ = ""
         buttonTimer = TIMER
         Play sound 56
      EndIf
   EndIf

   `Quit Button
   `Closes the game.
   If (mouseX() > 775 and mouseX() < 999) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Log In"
      Paste image 44, 775, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         userName$ = ""
         passWord$ = ""
         buttonTimer = TIMER
         Play sound 56
         End
      EndIf
   EndIf

   `Username Box focus
   `Allows the user to enter data into the box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 200 and mouseY() < 298)
      If menu$ = "Log In" and mouseclick() = 1 and buttonTimer = 0
         Paste image 43, 432, 200
         Paste image 45, 422, 190, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 300, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 240
         Input userName$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Password Box focus
   `Allows user to enter their password into the box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 340 and mouseY() < 438)
      If menu$ = "Log In" and mouseclick() = 1 and buttonTimer = 0
         Paste image 43, 432, 340
         Paste image 45, 422, 330, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 440, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 380
         Input passWord$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Create Screen: Create Button
   `Validates the user's chosen name and password.
   `Checks to make sure name is unique, that entered passwords match, that
   `username and passwords are within acceptable ranges and that no
   `illegal characters or names are used.
   `If checks are passed, a new entry in the database is initialised and is
   `saved as the player's entry.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Create"
      Paste image 44, 275, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         GoSub FileLoading
         `Checks to see if name is in use.
         nameCheck$ = newName$
         GoSub ReadScores
         `Checks if name is unique and if passwords match.
         If NameAvailability(nameCheck$) = 1 and newPass1$ = newPass2$
            `Checks that username is correct length.
            If Len(newName$) >= 6 and Len(newName$) <= 20
               `Checks that password is correct length.
               If Len(newPass1$) >= 8 and Len(newPass1$) <= 20
                  `Checks if name is on reserved name list.
                  If newName$ <> "Guest" and newName$ <> "guest" and newName$ <> "NONAME"
                     `Checks to see if non-permitted characters have been used.
                     badChar = 0
                     For i = 1 to 20
                        badString$ = RIGHT$(LEFT$(newName$, i), 1)
                        If badString$ = "0" or badString$ = "-" or badString$ = " " then badChar = 1
                        badString$ = RIGHT$(LEFT$(newPass1$, i), 1)
                        If badString$ = "0" or badString$ = "-" or badString$ = " " then badChar = 1
                     Next i
                     If badChar = 0
                        `Finds an empty account.
                        i = 0
                        saveReplace = 0
                        While i <= 11
                           INC i
                           saveReplace = i
                           If i <= 10
                              If filePlayerStore$(i, 4) = "0" then i = 12
                           EndIf
                        EndWhile
                        If saveReplace <= 10
                           SaveCreation(newName$, newPass1$, saveReplace, totalPlayers$)
                           totalPlayers$ = STR$(Val(totalPlayers$) + 1)
                           If Val(totalPlayers$) > 999 then totalPlayers$ = "1"
                           GoSub FileSaving
                           `Reseting variables and returning user to log in screen.
                           newName$ = ""
                           newPass1$ = ""
                           newPass2$ = ""
                           menu$ = "Log In"
                           promptActive = 1
                           promptHeader$ = "ACCOUNT CREATED"
                           promptLine1$ = "Your account has been successfully created."
                           promptLine2$ = "You may now log in using your previously entered details."
                           promptType$ = "Okay"
                        Else
                           promptActive = 1
                           promptHeader$ = "LOCAL STORE FULL"
                           promptLine1$ = "The maximum number of local accounts has been reached."
                           promptLine2$ = "Would you like to delete an account to make room?"
                           promptType$ = "Yes/No"
                        EndIf
                     Else
                        promptActive = 1
                        promptHeader$ = "ERROR"
                        promptLine1$ = "Spaces, 0 and - cannot be used in either"
                        promptLine2$ = "your username or password."
                        promptType$ = "Okay"
                     EndIf
                  Else
                     promptActive = 1
                     promptHeader$ = "ERROR"
                     promptLine1$ = "Name is reserved."
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  EndIf
               Else
                  promptActive = 1
                  promptHeader$ = "CREATION FAILURE"
                  promptLine1$ = "Passwords must be between 8 and 20 characters. (Inclusive)"
                  promptLine2$ = ""
                  promptType$ = "Okay"
                  newPass1$ = ""
                  newPass2$ = ""
               EndIf
            Else
               promptActive = 1
               promptHeader$ = "CREATION FAILURE"
               promptLine1$ = "Usernames must be between 6 and 20 characters. (Inclusive)"
               promptLine2$ = ""
               promptType$ = "Okay"
               newPass1$ = ""
               newPass2$ = ""
            EndIf
         Else
            If NameAvailability(nameCheck$) = 0
               promptActive = 1
               promptHeader$ = "CREATION FAILURE"
               promptLine1$ = "The name you have chosen is already or was in use."
               promptLine2$ = ""
               promptType$ = "Okay"
               newPass1$ = ""
               newPass2$ = ""
            Else
               promptActive = 1
               promptHeader$ = "CREATION FAILURE"
               promptLine1$ = "The entered passwords do not match."
               promptLine2$ = ""
               promptType$ = "Okay"
               newPass1$ = ""
               newPass2$ = ""
            EndIf
         EndIf
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Create Screen: Cancel Button
   `Clears all of the text entry fields.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Create"
      Paste image 44, 525, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         newName$ = ""
         newPass1$ = ""
         newPass2$ = ""
         menu$ = "Log In"
         buttonTimer = TIMER
         Play sound 56
      EndIf
   EndIf

   `Create: Username Box focus
   `Allows the user to enter data into the text entry box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 160 and mouseY() < 258)
      If menu$ = "Create" and mouseclick() = 1 and buttonTimer = 0
         Paste image 43, 432, 160
         Paste image 45, 422, 150, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 260, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 200
         Input newName$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Create: Password Box 1 focus
   `Allows the user to enter data into the text entry box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 300 and mouseY() < 398)
      If menu$ = "Create" and mouseclick() = 1 and buttonTimer = 0
         Paste image 43, 432, 300
         Paste image 45, 422, 290, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 400, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 340
         Input newPass1$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Create: Password Box 2 focus
   `Allows the user to enter data into the text entry box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 440 and mouseY() < 538)
      If menu$ = "Create" and mouseclick() = 1 and buttonTimer = 0
         Paste image 43, 432, 440
         Paste image 45, 422, 430, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 540, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 480
         Input newPass2$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

SingleplayerButtons:
`Controls the button handlers in the singleplayer menus.

   `Singleplayer Menu: Mission Mode Button
   `Takes the player to the Mission Saves screen.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 240 and mouseY() < 324) and menu$ = "Single Main"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Single Saves"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Menu: Endless Mode Button
   `Takes the player to the Game Setup Screen, where they can enter the game in
   `Endless mode.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 448) and menu$ = "Single Main"
      Paste image 19, 24, 360, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Finds the player's high score to display on the setup screen.
         If playerType$ = "Player" then GoSub ReadScores
         scoreFound = 0
         If playerType$ = "Player"
            For i = 1 to 100
               If fileScoreStore$(i, 1) = playerAccount$(5)
                  scoreFound = 1
                  playerHighScore$ = fileScoreStore$(i, 3)
                  i = 101
               EndIf
            Next i
         EndIf
         `Initialises variables
         setMusic = 1
         If scoreFound = 0 then playerHighScore$ = "0"
         missionNumber = 0
         `Stores the menu the player came from.
         prevMenu1$ = menu$
         menu$ = "Single Setup"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Menu: Back Button
   `Takes the user back to the main menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Single Main"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Saves data that might have changed.
         GoSub UpdateAccounts
         GoSub WriteAccounts
         saveTimer = 20
         missionNumber = 0
         menu$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer game setup: Play button
   `Launches either Mission mode or Endless mode, depending
   `on the user's selections in previous menus.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 120 and mouseY() < 204) and menu$ = "Single Setup"
      Paste image 19, 184, 120, 1
      If mouseclick() = 1 and buttonTimer = 0
         Play sound 54
         Stop sound 25
         GoSub CallLoadingScreen1
         GoSub DeleteMenuAssets
         GoSub LoadGameAssets
         If missionNumber <> 0 then setMusic = missionNumber
         songToLoad = setMusic
         GoSub LoadSongs

         If missionNumber = 0
            GoSub RunEndlessGame
         Else
            GoSub RunMissionGame
         EndIf
      EndIf
   EndIf

   `Singleplayer game setup: Customise Ship Button
   `Takes the user to the customisation menu from the game setup screen.
   If (mouseX() > 120 and mouseX() < 358) and (mouseY() > 240 and mouseY() < 328) and menu$ = "Single Setup"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         prevMenu2$ = menu$
         menu$ = "Custom Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer game setup: Change Music Button
   `Used to cycle through available songs for endless mode.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 444)
      If menu$ = "Single Setup" and missionNumber = 0
         Paste image 19, 24, 360, 1
         If buttonTimer = 0
            If mouseclick() = 1
               INC setMusic
               If setMusic > 20 then setMusic = 1
               buttonTimer = 7
               Play sound 54
            EndIf
            If mouseclick() = 2
               DEC setMusic
               If setMusic < 1 then setMusic = 20
               buttonTimer = 7
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

   `Singleplayer game setup: Back Button
   `Takes the user back to the last menu they were on.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Single Setup"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = prevMenu1$
         prevMenu1$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Save Buttons
   `Buttons used to select a save file to use for Mission Mode.
   `Effect of button can change depending on state of editMode.
   For i = 1 to 3
      If (mouseX() > 80 and mouseX() < 330) and (mouseY() > 200 + (120*(i-1)) and mouseY() < 260 + (120*(i-1)))
         If menu$ = "Single Saves" and (editMode = 0 or editMode = 2)
            Paste image 52, 70, 190 + (120*(i-1)), 1
            If mouseclick() = 1 and buttonTimer = 0
               `Highlights save file.
               If editMode = 0
                  boxFocus = i
                  buttonTimer = TIMER
                  Play sound 54
               Else
                  `Marks save file to copy data to.
                  If editMode = 2 and Val(playerSaves$(k, 2)) = 0 and Val(playerSaves$(k, 6)) = 0
                     fileSelected = i
                     editMode = 3
                     buttonTimer = TIMER
                     Play sound 54
                  Else
                     promptHeader$ = "ERROR"
                     promptLine1$ = "Please select an empty file."
                     promptLine2$ = ""
                     promptActive = 1
                     promptType$ = "Okay"
                     Play sound 56
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf
   Next i

   `Singleplayer Mission Save screen: Load/Start Button
   `Used to start a new game or load an existing one.
   `If there is no suspended file, the user will be taken to the map screen.
   `If there is a suspended file, then the game takes the user straight into
   `the mission mode.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 450 and mouseY() < 510)
      If menu$ = "Single Saves" and editMode = 0 and boxFocus > 0
         Paste image 75, 642, 440, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Stores which save file is selected.
            save = boxFocus

            `Determines if the save file is a new save file or not, by checking the player's
            `next mission.
            If Val(playerSaves$(save, 2)) > 0
               boxFocus = 0
               editMode = 0
               `Determines whether or not the game should load the player's suspended game.
               If Val(playerSaves$(save, 7)) = 0
                  `Sets up and takes the player to the map screen.
                  GoSub FillMissions
                  menu$ = "Single Map"
                  Play sound 54
               Else
                  `Stopping menu music
                  Play sound 54
                  Stop sound 25

                  `Resetting variables and loading assets.
                  GoSub CallLoadingScreen1
                  GoSub DeleteMenuAssets
                  GoSub LoadGameAssets
                  GoSub StopAllMusic
                  GoSub ResetMissionGame

                  `Setting final variables and loading songs.
                  If playerSaves$(save, 7) = "1"
                     missionNumber = Val(playerSaves$(save, 20))
                  Else
                     missionNumber = Val(playerSaves$(save, 2))
                  EndIf
                  songToLoad = missionNumber
                  setMusic = songToLoad
                  GoSub LoadSongs

                  `Runs the game.
                  GoSub RunMissionGame
               EndIf
            Else
               `Code for new games.
               `Determines if player can set difficulty, depending if the player has completed
               `the game on this file or not.
               If Val(playerSaves$(save, 6)) <= 0
                  editMode = 4
                  Play sound 54
               Else
                  playerSaves$(save, 2) = "1"
                  playerSaves$(save, 3) = "2"
                  playerSaves$(save, 4) = "0"
                  boxFocus = 0
                  editMode = 0
                  menu$ = "Single Map"
                  If playerType$ = "Player" then GoSub UpdateSaves
                  If playerType$ = "Player" then GoSub WriteSaves
                  If playerType$ = "Player" then saveTimer = TIMER
                  GoSub FillMissions
                  Play sound 55
               EndIf
            EndIf
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Copy Button
   `Used to copy one save file to another slot.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 520 and mouseY() < 580)
      If menu$ = "Single Saves" and Val(playerSaves$(boxFocus, 2)) > 0 and editMode = 0 and boxFocus > 0
         Paste image 75, 642, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Stores selected save file.
            save = boxFocus
            `Checks if conditions are met to copy file.
            If playerSaves$(save, 7) = "0"
               editMode = 2
               Play sound 54
            Else
               promptHeader$ = "ERROR"
               promptLine1$ = "Cannot copy suspended game."
               promptLine2$ = ""
               promptActive = 1
               promptType$ = "Okay"
               Play sound 56
            EndIf
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Yes Button
   `Used to confirm save file deletion/copying.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 520 and mouseY() < 580)
      If menu$ = "Single Saves" and Val(playerSaves$(boxFocus, 2)) > 0
         If (editMode = 1 or editMode = 3) and boxFocus > 0
            Paste image 75, 642, 510, 1
            If mouseclick() = 1 and buttonTimer = 0
               `Confirms save file deletion.
               If editMode = 1
                  playerSaves$(save, 2) = "0"
                  playerSaves$(save, 3) = "0"
                  playerSaves$(save, 4) = "0"
                  playerSaves$(save, 5) = "-"
                  playerSaves$(save, 6) = "0"
                  playerSaves$(save, 7) = "0"
                  save = 0
               `Confirms save file copying.
               Else
                  playerSaves$(fileSelected, 2) = playerSaves$(save, 2)
                  playerSaves$(fileSelected, 3) = playerSaves$(save, 3)
                  playerSaves$(fileSelected, 4) = playerSaves$(save, 4)
                  playerSaves$(fileSelected, 5) = playerSaves$(save, 5)
                  playerSaves$(fileSelected, 6) = playerSaves$(save, 6)
                  save = 0
                  fileSelected = 0
               EndIf
               `Saves data to file.
               If playerType$ = "Player" then GoSub UpdateSaves
               If playerType$ = "Player" then GoSub WriteSaves
               If playerType$ = "Player" then saveTimer = TIMER
               editMode = 0
               Play sound 54
               buttonTimer = TIMER
            EndIf
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Delete Button
   `Marks the save file for deletion, then asks the user if they
   `are sure they want to delete the file.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 590 and mouseY() < 650)
      If menu$ = "Single Saves" and Val(playerSaves$(boxFocus, 2)) > 0 and editMode = 0 and boxFocus > 0
         Paste image 75, 642, 580, 1
         If mouseclick() = 1 and buttonTimer = 0
            save = boxFocus
            editMode = 1
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: No Button
   `Cancels any choices the player may make in regards to save file
   `deletion or copying.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 590 and mouseY() < 650)
      If menu$ = "Single Saves" and Val(playerSaves$(boxFocus, 2)) > 0
         If (editMode = 1 or editMode = 3) and boxFocus > 0
            Paste image 75, 642, 580, 1
            If mouseclick() = 1 and buttonTimer = 0
               editMode = 0
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Easy Button
   `Sets the player's difficulty to easy, initialises their save file
   `and takes the player to the map screen.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 450 and mouseY() < 510)
      If menu$ = "Single Saves" and editMode = 4 and boxFocus > 0
         Paste image 75, 642, 440, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerSaves$(save, 2) = "1"
            playerSaves$(save, 3) = "2"
            playerSaves$(save, 4) = "0"
            playerSaves$(save, 5) = "Easy"
            playerSaves$(save, 6) = "0"
            boxFocus = 0
            editMode = 0
            menu$ = "Single Map"
            If playerType$ = "Player" then GoSub UpdateSaves
            If playerType$ = "Player" then GoSub WriteSaves
            If playerType$ = "Player" then saveTimer = TIMER
            GoSub FillMissions
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Normal Button
   `Sets the player's difficulty to normal, initialises their save file
   `and takes the player to the map screen.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 520 and mouseY() < 580)
      If menu$ = "Single Saves" and editMode = 4 and boxFocus > 0
         Paste image 75, 642, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerSaves$(save, 2) = "1"
            playerSaves$(save, 3) = "2"
            playerSaves$(save, 4) = "0"
            playerSaves$(save, 5) = "Normal"
            playerSaves$(save, 6) = "0"
            boxFocus = 0
            editMode = 0
            menu$ = "Single Map"
            If playerType$ = "Player" then GoSub UpdateSaves
            If playerType$ = "Player" then GoSub WriteSaves
            If playerType$ = "Player" then saveTimer = TIMER
            GoSub FillMissions
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Hard Button
   `Sets the player's difficulty to hard, initialises their save file
   `and takes the player to the map screen.
   If (mouseX() > 652 and mouseX() < 812) and (mouseY() > 590 and mouseY() < 650)
      If menu$ = "Single Saves" and editMode = 4 and boxFocus > 0
         Paste image 75, 642, 580, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerSaves$(save, 2) = "1"
            playerSaves$(save, 3) = "2"
            playerSaves$(save, 4) = "0"
            playerSaves$(save, 5) = "Hard"
            playerSaves$(save, 6) = "0"
            boxFocus = 0
            editMode = 0
            menu$ = "Single Map"
            If playerType$ = "Player" then GoSub UpdateSaves
            If playerType$ = "Player" then GoSub WriteSaves
            If playerType$ = "Player" then saveTimer = TIMER
            GoSub FillMissions
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Save screen: Back/Cancel Button
   `Cancels the save file deletion, or takes the user back to the singleplayer
   `menu, depending on the state of editMode.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Single Saves"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         If editMode > 0
            editMode = 0
         Else
            menu$ = "Single Main"
            boxFocus = 0
            editMode = 0
         EndIf
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Mission Map Screen: Mission Buttons
   `Buttons that allow the user to select a mission to play.
   For k = 1 to 20
      If (mouseX() > Val(missionData$(k, 2)) and mouseX() < Val(missionData$(k, 2)) + 50)
         If (mouseY() > Val(missionData$(k, 3)) and mouseY() < Val(missionData$(k, 3)) + 50)
            If menu$ = "Single Map" and boxFocus = 0
               Paste image 89, Val(missionData$(k, 2)) - 5, Val(missionData$(k, 3)) - 5, 1
               If mouseclick() = 1 and buttonTimer = 0
                  boxFocus = k
                  buttonTimer = TIMER
                  Play sound 54
               EndIf
            EndIf
         EndIf
      EndIf
   Next k

   `Singleplayer Mission Map screen: Save Button
   `Allows the player to manually save their progress in the game.
   If (mouseX() > 854 and mouseX() < 1014) and (mouseY() > 628 and mouseY() < 688)
      If menu$ = "Single Map" and boxFocus = 0
         Paste image 75, 844, 618, 1
         If mouseclick() = 1 and buttonTimer = 0
            If playerType$ = "Player" then GoSub UpdateSaves
            If playerType$ = "Player" then GoSub WriteSaves
            saveTimer = TIMER
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Map screen: Exit Button
   `Brings up the screen that asks the player to confirm that
   `they want to leave the map screen.
   If (mouseX() > 854 and mouseX() < 1014) and (mouseY() > 698 and mouseY() < 758)
      If menu$ = "Single Map" and boxFocus = 0
         Paste image 75, 844, 688, 1
         If mouseclick() = 1 and buttonTimer = 0
            If playerType$ = "Player"
               boxFocus = 21
            Else
               menu$ = "Single Saves"
               saveTimer = TIMER
            EndIf
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Map screen: Start/Replay Mission Button
   `Saves the mission number, and takes the user to the setup screen.
   If (mouseX() > 460 and mouseX() < 620) and (mouseY() > 470 and mouseY() < 530)
      If menu$ = "Single Map" and (boxFocus > 0 and boxFocus < 21)
         If (Val(playerSaves$(save, 2)) >= boxFocus or debugPlayAll = 1)
            Paste image 75, 450, 460, 1
            If mouseclick() = 1 and buttonTimer = 0
               `Code used to find player's high score in the database.
               If playerType$ = "Player" then GoSub ReadScores
               scoreFound = 0
               If playerType$ = "Player"
                  For i = 1 to 100
                     `If the active player's ID matches the ID in the database
                     `then mark that record as the player's.
                     If fileScoreStore$(i, 1) = playerAccount$(5)
                        scoreFound = 1
                        playerHighScore$ = fileScoreStore$(i, 6)
                        i = 101
                     EndIf
                  Next i
               EndIf
               If scoreFound = 0 then playerHighScore$ = "0"
               missionNumber = boxFocus
               boxFocus = 0
               prevMenu1$ = menu$
               menu$ = "Single Setup"
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Map screen: Close Button
   `Closes the mission preview window.
   If (mouseX() > 640 and mouseX() < 800) and (mouseY() > 470 and mouseY() < 530)
      If menu$ = "Single Map" and (boxFocus > 0 and boxFocus < 21)
         Paste image 75, 630, 460, 1
         If mouseclick() = 1 and buttonTimer = 0
            boxFocus = 0
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Singleplayer Mission Map screen: "Save first" Button
   `Saves the game for the player, then takes them to the save screen.
   If (mouseX() > 262 and mouseX() < 422) and (mouseY() > 450 and mouseY() < 510) and menu$ = "Single Map" and boxFocus = 21
      Paste image 75, 252, 440, 1
      If mouseclick() = 1 and buttonTimer = 0
         If playerType$ = "Player" then GoSub UpdateSaves
         If playerType$ = "Player" then GoSub WriteSaves
         If playerType$ = "Player" then saveTimer = TIMER
         boxFocus = 0
         menu$ = "Single Saves"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Mission Map screen: "Don't save" Button
   `Takes the player back to the save screen without saving their progress.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 450 and mouseY() < 510) and menu$ = "Single Map" and boxFocus = 21
      Paste image 75, 422, 440, 1
      If mouseclick() = 1 and buttonTimer = 0
         If playerType$ = "Player" then GoSub TransferSaves
         boxFocus = 0
         menu$ = "Single Saves"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Singleplayer Mission Map screen: "Stay here" Button
   `Closes the window.
   If (mouseX() > 602 and mouseX() < 762) and (mouseY() > 450 and mouseY() < 510) and menu$ = "Single Map" and boxFocus = 21
      Paste image 75, 592, 440, 1
      If mouseclick() = 1 and buttonTimer = 0
         boxFocus = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

MultiplayerButtons:
`Controls button clicks on the multiplayer menus.

   `Multiplayer Menu: Cooperative Missions Button
   `Determines how many missions are unlocked on this player account,
   `and takes the players to the cooperative mission select menu.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 240 and mouseY() < 324) and menu$ = "Multi Main"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Determies how many missions the player has unlocked for multiplayer.
         If Val(playerSaves$(1,6)) > 0 or Val(playerSaves$(2,6)) > 0 or Val(playerSaves$(3,6)) > 0
            `If the player has beaten the mission mode, all levels are unlocked.
            furthestLevel = 20
         Else
            `If they have not beaten the mission mode, then the game finds the
            `save file with the most progress, and unlocks the missions before that
            `save file's current mission.
            furthestLevel = Val(playerSaves$(1,2))
            If Val(playerSaves$(2,2)) > furthestLevel then furthestLevel = Val(playerSaves$(2,2))
            If Val(playerSaves$(3,2)) > furthestLevel then furthestLevel = Val(playerSaves$(3,2))
         EndIf

         `Sets up array to display mission info.
         GoSub FillMissions
         menu$ = "Multi Mission"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Menu: Competitive Battling Button
   `Initialises the player data for competitive mode, then takes the users to
   `the Multiplayer Setup Screen.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 448) and menu$ = "Multi Main"
      Paste image 19, 24, 360, 1
      If mouseclick() = 1 and buttonTimer = 0

         `Sets up player array with active player's, their controls, ships, etc.
         For i = 1 to 4
            playerData$(i, 6) = "Space Fighter"
            playerData$(i, 16) = "1"
         Next i
         playerData$(1, 7) = "Blue"
         playerData$(2, 7) = "Red"
         playerData$(3, 7) = "Yellow"
         playerData$(4, 7) = "Green"
         playerData$(1, 17) = "WASD"
         playerData$(2, 17) = "Arrow Keys"
         playerData$(3, 17) = "IJKL"
         playerData$(4, 17) = "Numpad"
         victoryCondition$ = "Lives"
         victoryNumber = 0

         `Initialises variables.
         boxFocus = 0
         menuScroll = 0
         missionNumber = 0
         prevMenu1$ = menu$

         menu$ = "Multi Setup"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Menu: Back Button
   `Takes the user back to the main menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Multi Main"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Missions: Choice Buttons
   `Buttons used to select what mission is to be played in the
   `cooperative mode.
   For i = 1 to 4
      If (mouseX() > 100 and mouseX() < 350) and mouseY() > 200 + (70 * (i - 1))
         If mouseY() < 260 + (70 * (i - 1)) and menu$ = "Multi Mission"
            Paste image 52, 90, 190 + (70 * (i - 1)), 1
            If mouseclick() = 1 and buttonTimer = 0
               `Opens up the mission info box on the right hand side of the screen.
               If boxFocus = i
                  boxFocus = 0
               Else
                  boxFocus = i
               EndIf
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
      If boxFocus = i and menu$ = "Multi Mission" then Paste image 52, 90, 190 + (70 * (i - 1)), 1
   Next i

   `Multiplayer Missions: Up Arrow Button
   `Scrolls the mission menu up by four missions.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 100 and mouseY() < 180)
         If menu$ = "Multi Mission" and mouseclick() = 1 and buttonTimer = 0 and menuScroll > 0
         `Scrolls menu up.
         menuScroll = menuScroll - 1
         boxFocus = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Missions: Down Arrow Button
   `Scrolls the mission menu down by four missions.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 480 and mouseY() < 560)
      If menu$ = "Multi Mission" and mouseclick() = 1 and buttonTimer = 0 and menuScroll < 4
         `Scrolls menu down.
         menuScroll = menuScroll + 1
         boxFocus = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Missions: Select Mission Button
   `Stores the mission to be played, initialises the player array for
   `cooperative play, and takes the users to the Multiplayer Game
   `Setup Screen.
   If (mouseX() > 632 and mouseX() < 792) and (mouseY() > 450 and mouseY() < 510)
      If menu$ = "Multi Mission" and boxFocus > 0
         If (furthestLevel - 1 => (boxFocus + (menuScroll * 4)) or debugPlayAll = 1)
            Paste image 75, 622, 440, 1
            If mouseclick() = 1 and buttonTimer = 0
               `Stores the mission to be played.
               missionNumber = boxFocus + (menuScroll * 4)

               `Sets up player array with active player's, their controls, ships, etc.
               For i = 1 to 2
                  playerData$(i, 6) = "Space Fighter"
                  playerData$(i, 16) = "1"
               Next i
               playerData$(1, 7) = "Blue"
               playerData$(2, 7) = "Red"
               playerData$(1, 17) = "WASD"
               playerData$(2, 17) = "Arrow Keys"
               playerData$(3, 16) = "0"
               playerData$(4, 16) = "0"
               victoryCondition$ = "Easy"

               `Initialises variables.
               boxFocus = 0
               menuScroll = 0

               prevMenu1$ = menu$
               menu$ = "Multi Setup"
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

   `Multiplayer Missions: Back Button
   `Returns the user to the Multiplayer Main Menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Multi Mission"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Multi Main"
         buttonTimer = TIMER
         Play sound 54
         boxFocus = 0
         menuScroll = 0
      EndIf
   EndIf

   `Multiplayer setup: Play button
   `Runs either the competitive or cooperative mode, depending on choices made in the
   `previous menus.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 120 and mouseY() < 204) and menu$ = "Multi Setup"
      Paste image 19, 184, 120, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Resets variables.
         boxFocus = 0

         `Sets up a competitive game.
         If missionNumber = 0
            `Validates that player's are not using identical controls.
            multiValidate = 0
            For i = 1 to 4
               For j = 1 to 4
                  If i <> j and playerData$(i,16) = "1" and playerData$(j,16) = "1"
                     If playerData$(i,17) = playerData$(j,17) then multiValidate = 1
                  EndIf
               Next j
            Next i
            `Validates that at least one player is on each team.
            If Val(playerData$(1,16)) + Val(playerData$(3,16)) < 1 then multiValidate = 2
            If Val(playerData$(2,16)) + Val(playerData$(4,16)) < 1 then multiValidate = 2
            `Runs game if validation is successful.
            If multiValidate = 0
               Play sound 54
               Stop sound 25
               GoSub CallLoadingScreen1
               GoSub DeleteMenuAssets
               GoSub LoadGameAssets
               setMusic = 22
               songToLoad = setMusic
               GoSub LoadSongs

               GoSub RunCompeteGame

            `Returns message if validation found an error.
            Else
               If multiValidate = 1 then promptLine1$ = "Players cannot use same control schemes."
               If multiValidate = 2 then promptLine1$ = "Minimum of 1 player on each team required."
               promptHeader$ = "ERROR"
               promptLine2$ = ""
               promptActive = 1
               promptType$ = "Okay"
               Play sound 56
            EndIf

         `Sets up a cooperative game.
         Else
            `Validates to make sure players are not using the same control scheme.
            multiValidate = 0
            If playerData$(1,17) = playerData$(2,17) then multiValidate = 1
            If multiValidate = 0
               Play sound 54
               Stop sound 25
               GoSub CallLoadingScreen1
               GoSub DeleteMenuAssets
               GoSub LoadGameAssets
               setMusic = missionNumber
               songToLoad = setMusic
               GoSub LoadSongs

               GoSub RunCooperateGame

            Else
               promptHeader$ = "ERROR"
               promptLine1$ = "Players cannot use same control schemes."
               promptLine2$ = ""
               promptActive = 1
               promptType$ = "Okay"
               Play sound 56
            EndIf

            buttonTimer = TIMER

         EndIf
      EndIf

   EndIf

   `Multiplayer Setup: Change Options buttons
   `Displays buttons that allow the players to change variables in
   `the player array, like ship type or control schemes.
   For i = 1 to 3
      If (mouseX() > 100 and mouseX() < 350) and mouseY() > 230 + (70 * (i-1))
         If mouseY() < 290 + (70 * (i-1)) and menu$ = "Multi Setup" and (i <> 1 or missionNumber = 0)
            Paste image 93, 60, 230 + (70 * (i-1)), 1
            If mouseclick() = 1 and buttonTimer = 0
               If boxFocus = i
                  boxFocus = 0
               Else
                  boxFocus = i
               EndIf
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
      If boxFocus = i and menu$ = "Multi Setup" then Paste image 52, 90, 220 + (70 * (i-1)), 1
   Next i

   `Multiplayer Setup: Change Victory/Difficulty Button
   `Changes the quantity of kills/deaths requires to win/lose Competitive
   `Mode, or to change the difficulty of cooperative mode.
   If (mouseX() > 100 and mouseX() < 350) and (mouseY() > 480 and mouseY() < 540) and menu$ = "Multi Setup"
      Paste image 93, 60, 480, 1
      If mouseclick() = 1 and buttonTimer = 0
         `If setting up a competitive, change victory condition.
         If missionNumber = 0
            If victoryCondition$ = "Kills"
               victoryCondition$ = "Lives"
            Else
               victoryCondition$ = "Kills"
               INC victoryNumber
               If victoryNumber > 10 then victoryNumber = 0: victoryCondition$ = "Lives"
            EndIf
         `If setting up a cooperative game, change the difficulty.
         Else
            If victoryCondition$ = "Easy"
               victoryCondition$ = "Normal"
            Else
               If victoryCondition$ = "Normal"
                  victoryCondition$ = "Hard"
               Else
                  victoryCondition$ = "Easy"
               EndIf
            EndIf
         EndIf
         buttonTimer = TIMER / 2
         Play sound 54
      EndIf
   EndIf

   `Multiplayer Setup: Change Options buttons
   `Buttons that allow the players to change their individual
   `control schemes, ships and whether or not they are in the game.
   For i = 1 to 4
      If (mouseX() > 400 and mouseX() < 560) and mouseY() > 210 + (70 * (i-1))
         If mouseY() < 270 + (70 * (i-1)) and menu$ = "Multi Setup" and boxFocus > 0
            If ((missionNumber = 0) or (missionNumber > 0 and i <=2))
               Paste image 40, 360, 210 + (70 * (i-1)), 1
               If mouseclick() = 1 and buttonTimer = 0
                  `Adds or removes a player from the game.
                  If boxFocus = 1
                     playerData$(i, 16) = STR$(1 - Val(playerData$(i, 16)))
                  EndIf
                  `Cycles through all playable ships in the game.
                  If boxFocus = 2
                     If playerData$(i, 6) = "Space Fighter"
                        playerData$(i, 6) = "Nebula Baron"
                     Else
                        If playerData$(i, 6) = "Nebula Baron"
                           playerData$(i, 6) = "Orbital Freighter"
                        Else
                           If playerData$(i, 6) = "Orbital Freighter"
                              If Val(playerAccount$(16)) >= 1
                                 playerData$(i, 6) = "Binary Duo"
                              Else
                                 playerData$(i, 6) = "Space Fighter"
                              EndIf
                           Else
                              If playerData$(i, 6) = "Binary Duo"
                                 If Val(playerAccount$(16)) >= 2
                                    playerData$(i, 6) = "Magneteer"
                                 Else
                                    playerData$(i, 6) = "Space Fighter"
                                 EndIf
                              Else
                                 If playerData$(i, 6) = "Magneteer"
                                    If Val(playerAccount$(16)) >= 3
                                       playerData$(i, 6) = "Geocentral Star"
                                    Else
                                       playerData$(i, 6) = "Space Fighter"
                                    EndIf
                                 Else
                                    If playerData$(i, 6) = "Geocentral Star"
                                       If Val(playerAccount$(16)) >= 4
                                          playerData$(i, 6) = "Dwarf Shuttle"
                                       Else
                                          playerData$(i, 6) = "Space Fighter"
                                       EndIf
                                    Else
                                       If playerData$(i, 6) = "Dwarf Shuttle"
                                          If Val(playerAccount$(16)) >= 5
                                             playerData$(i, 6) = "Bot Morpher"
                                          Else
                                             playerData$(i, 6) = "Space Fighter"
                                          EndIf
                                       Else
                                          playerData$(i, 6) = "Space Fighter"
                                       EndIf
                                    EndIf
                                 EndIf
                              EndIf
                           EndIf
                        EndIf
                     EndIf
                  EndIf
                  `Cycles through controls schemes.
                  If boxFocus = 3
                     If playerData$(i, 17) = "WASD"
                        playerData$(i, 17) = "Arrow Keys"
                     Else
                        If playerData$(i, 17) = "Arrow Keys"
                           playerData$(i, 17) = "IJKL"
                        Else
                           If playerData$(i, 17) = "IJKL"
                              playerData$(i, 17) = "Numpad"
                           Else
                              playerData$(i, 17) = "WASD"
                           EndIf
                        EndIf
                     EndIf
                  EndIf
                  buttonTimer = TIMER / 2
                  Play sound 54
               EndIf
            EndIf
         EndIf
      EndIf
      If boxFocus = i and menu$ = "Multi Setup" then Paste image 52, 90, 220 + (70 * (i-1)), 1
   Next i

   `Multiplayer Setup: Back Button
   `Returns the user to the previous menu they were on.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Multi Setup"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = prevMenu1$
         prevMenu1$ = "Main"
         buttonTimer = TIMER
         Play sound 54
         boxFocus = 0
         menuScroll = 0
      EndIf
   EndIf

Return

TutorialButtons:
`Controls button clicks on the tutorial screen.

   `Tutorial Screen: Back Button
   `Returns the user to the main menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Tutorial"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Main"
         boxFocus = 0
         menuScroll = 0
         editMode = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Tutorial Screen: Choice Buttons
   `Displays the selected tutorial.
   For i = 1 to 4
      If (mouseX() > 100 and mouseX() < 350) and (mouseY() > 200 + (70 * (i - 1)) and mouseY() < 260 + (70 * (i - 1)))
         If menu$ = "Tutorial"
            Paste image 52, 90, 190 + (70 * (i - 1)), 1
            If mouseclick() = 1 and buttonTimer = 0
               `Selects the menu option.
               If boxFocus = i
                  boxFocus = 0
               Else
                  boxFocus = i
               EndIf
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
      If boxFocus = i then Paste image 52, 90, 190 + (70 * (i - 1)), 1
   Next i

   `Tutorial Screen: Up Arrow Button
   `Scrolls the tutorial menu up by four tutorials.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 100 and mouseY() < 180) and menu$ = "Tutorial"
      If mouseclick() = 1 and buttonTimer = 0 and menuScroll > 0
         `Scrolls menu up.
         menuScroll = menuScroll - 1
         boxFocus = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Tutorial Screen: Down Arrow Button
   `Scrolls the tutorial menu down by four tutorials.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 480 and mouseY() < 560) and menu$ = "Tutorial"
      If mouseclick() = 1 and buttonTimer = 0 and menuScroll < 3
         `Scrolls menu down.
         menuScroll = menuScroll + 1
         boxFocus = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

CustomisationButtons:
`Controls button clicks on the customisation menus.

   `Customisation Menu: Ship Model Button
   `Takes the user to the ship model customisation screen.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 120 and mouseY() < 204) and menu$ = "Custom Main"
      Paste image 19, 184, 120, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Custom Ship"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Customisation Menu: Ship Colour Button
   `Takes the user to the ship colour customisation screen.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 240 and mouseY() < 324) and menu$ = "Custom Main"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Custom Colour"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Customisation Menu: Power Core Button
   `Takes the user to the power core customisation screen.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 444) and menu$ = "Custom Main"
      Paste image 19, 24, 360, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Custom Power"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Customisation Menu: Shop Button
   `Takes the user to the shop screen.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 480 and mouseY() < 564) and menu$ = "Custom Main"
      Paste image 19, 64, 480, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Shop"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Customisation Menu: Back Button
   `Returns the user to the main menu, or the singleplayer setup
   `screen if the user initially cam from there.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Custom Main"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Saves player data, then returns to the main menu.
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         If playerType$ = "Player" then saveTimer = 20
         menu$ = prevMenu2$
         prevMenu2$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Ship Model/Colours/Power Cores Customising: Back Button
   `Returns the user to the customisation menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684)
      If (menu$ = "Custom Ship" or menu$ = "Custom Colour" or menu$ = "Custom Power")
         Paste image 19, 184, 600, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Custom Main"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Ship Model/Colours/Power Cores Customising: Choice Buttons
   `Handles buttons that allow the player to examine ship models, colours
   `and power cores.
   For i = 1 to 4
      If (mouseX() > 100 and mouseX() < 350) and (mouseY() > 200 + (70 * (i - 1)) and mouseY() < 260 + (70 * (i - 1)))
         If (menu$ = "Custom Ship" or menu$ = "Custom Colour" or menu$ = "Custom Power")
            If (menu$ <> "Custom Colour" or i <> 4 or menuScroll <> 2) then Paste image 52, 90, 190 + (70 * (i - 1)), 1
            If mouseclick() = 1 and buttonTimer = 0 and (menu$ <> "Custom Colour" or i <> 4 or menuScroll <> 2)
               `Selects option from the menu.
               If boxFocus = i
                  boxFocus = 0
               Else
                  boxFocus = i
               EndIf
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
      If boxFocus = i then Paste image 52, 90, 190 + (70 * (i - 1)), 1
   Next i

   `Ship Model/Colours/Power Cores Customising: Up Arrow Button
   `Scrolls the cutsomisation menu up by four items.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 100 and mouseY() < 180)
      If (menu$ = "Custom Ship" or menu$ = "Custom Colour" or menu$ = "Custom Power")
         If mouseclick() = 1 and buttonTimer = 0 and menuScroll > 0
            `Scrolls menu up.
            menuScroll = menuScroll - 1
            boxFocus = 0
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Ship Model/Colours/Power Cores Customising: Down Arrow Button
   `Scrolls the customisation menu down by four items.
   If (mouseX() > 100 and mouseX() < 180) and (mouseY() > 480 and mouseY() < 560)
      If (menu$ = "Custom Ship" or menu$ = "Custom Colour" or menu$ = "Custom Power")
         If mouseclick() = 1 and buttonTimer = 0
            If menu$ = "Custom Ship" and menuScroll < 1
               `Scrolls menu down.
               menuScroll = menuScroll + 1
               boxFocus = 0
               buttonTimer = TIMER
               Play sound 54
            EndIf
            If (menu$ = "Custom Colour" or menu$ = "Custom Power") and menuScroll < 2
               `Scrolls menu down.
               menuScroll = menuScroll + 1
               boxFocus = 0
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

   `Ship Model/Colours Customising: Select Item Button
   `Button that stores the player's choice of item in the array.
   If (mouseX() > 632 and mouseX() < 792) and (mouseY() > 450 and mouseY() < 510)
      If (menu$ = "Custom Ship" or menu$ = "Custom Colour") and boxFocus > 0
         Paste image 75, 622, 440, 1
         If mouseclick() = 1 and buttonTimer = 0
            If menu$ = "Custom Ship" and (Val(playerAccount$(16)) >= (boxFocus + (menuScroll * 4)) - 3 or debugBuyAll = 1)
               `Determines what ship the player has picked, and places it in the array.
               If menuScroll = 0 and boxFocus = 1 then playerAccount$(9) = "Space Fighter"
               If menuScroll = 0 and boxFocus = 2 then playerAccount$(9) = "Nebula Baron"
               If menuScroll = 0 and boxFocus = 3 then playerAccount$(9) = "Orbital Freighter"
               If menuScroll = 0 and boxFocus = 4 then playerAccount$(9) = "Binary Duo"
               If menuScroll = 1 and boxFocus = 1 then playerAccount$(9) = "Magneteer"
               If menuScroll = 1 and boxFocus = 2 then playerAccount$(9) = "Geocentral Star"
               If menuScroll = 1 and boxFocus = 3 then playerAccount$(9) = "Dwarf Shuttle"
               If menuScroll = 1 and boxFocus = 4 then playerAccount$(9) = "Bot Morpher"
               menu$ = "Custom Main"
               Play sound 55
            Else
               If menu$ = "Custom Colour" and (Val(playerAccount$(17)) >= (boxFocus + (menuScroll * 4)) - 4 or debugBuyAll = 1)
                  `Determies what colour the player has picked, and places it in the array.
                  If menuScroll = 0 and boxFocus = 1 then playerAccount$(10) = "Blue"
                  If menuScroll = 0 and boxFocus = 2 then playerAccount$(10) = "Red"
                  If menuScroll = 0 and boxFocus = 3 then playerAccount$(10) = "Yellow"
                  If menuScroll = 0 and boxFocus = 4 then playerAccount$(10) = "Green"
                  If menuScroll = 1 and boxFocus = 1 then playerAccount$(10) = "Orange"
                  If menuScroll = 1 and boxFocus = 2 then playerAccount$(10) = "Purple"
                  If menuScroll = 1 and boxFocus = 3 then playerAccount$(10) = "Grey"
                  If menuScroll = 1 and boxFocus = 4 then playerAccount$(10) = "Pink"
                  If menuScroll = 2 and boxFocus = 1 then playerAccount$(10) = "Brown"
                  If menuScroll = 2 and boxFocus = 2 then playerAccount$(10) = "White"
                  If menuScroll = 2 and boxFocus = 3 then playerAccount$(10) = "Special"
                  menu$ = "Custom Main"
                  Play sound 55
               Else
                  Play sound 56
               EndIf
            EndIf
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Ship Power Core Customising: Select Power Core Buttons
   `Buttons that allow the player to assign power cores to different
   `slots in the array.
   powerCoreSlot = 1
   powerCoreChosen$ = ""
   `Simulates button presses for all four buttons at once.
   For j = 0 to 1
      For i = 0 to 1
         If (mouseX() > (542 + (180 * i)) and mouseX() < (702 + (180 * i)))
            If (mouseY() > (460 + (80 * j)) and mouseY() < (520 + (80 * j)))
               If menu$ = "Custom Power" and boxFocus > 0
                  Paste image 75, 532 + (180 * i), 450 + (80 * j), 1
                  If mouseclick() = 1 and buttonTimer = 0
                     If (Val(playerAccount$(18)) >= (boxFocus + (menuScroll * 4)) - 4 or debugBuyAll = 1)
                        `Determies what colour the player has picked, and places into a variable.
                        `This variable is then passed onto the next section of code.
                        If menuScroll = 0 and boxFocus = 1 then powerCoreChosen$ = "Flight Kit"
                        If menuScroll = 0 and boxFocus = 2 then powerCoreChosen$ = "Power Pack"
                        If menuScroll = 0 and boxFocus = 3 then powerCoreChosen$ = "Ion Trigger"
                        If menuScroll = 0 and boxFocus = 4 then powerCoreChosen$ = "Boost Array"
                        If menuScroll = 1 and boxFocus = 1 then powerCoreChosen$ = "Underclocker Drive"
                        If menuScroll = 1 and boxFocus = 2 then powerCoreChosen$ = "Nuclear Pulse"
                        If menuScroll = 1 and boxFocus = 3 then powerCoreChosen$ = "Bounty Exchange"
                        If menuScroll = 1 and boxFocus = 4 then powerCoreChosen$ = "Nova Shielding"
                        If menuScroll = 2 and boxFocus = 1 then powerCoreChosen$ = "Diffraction Cannon"
                        If menuScroll = 2 and boxFocus = 2 then powerCoreChosen$ = "Terravolt Bomb"
                        If menuScroll = 2 and boxFocus = 3 then powerCoreChosen$ = "Evasion Cloak"
                        If menuScroll = 2 and boxFocus = 4 then powerCoreChosen$ = "Black Hole Blast"
                        If i = 0 and j = 0 then powerCoreSlot = 1
                        If i = 1 and j = 0 then powerCoreSlot = 2
                        If i = 0 and j = 1 then powerCoreSlot = 3
                        If i = 1 and j = 1 then powerCoreSlot = 4
                        buttonTimer = TIMER
                     EndIf
                  EndIf
               EndIf
            EndIf
         EndIf
      Next i
   Next j

   `Assigns power core to appropriate slot if the power core does not already
   `occupy another slot.
   If powerCoreSlot > 0 and powerCoreChosen$ <> ""
      powerCoreFilled = 0
      For i = 11 to 14
         If i <> 10 + powerCoreSlot and playerAccount$(i) = powerCoreChosen$ then powerCoreFilled = 1
      Next i
      If powerCoreFilled = 0
         playerAccount$(10 + powerCoreSlot) = powerCoreChosen$
         menu$ = "Custom Main"
         Play sound 55
      Else
         promptHeader$ = "ERROR"
         promptLine1$ = "Unable to choose: Core is already in use."
         promptLine2$ = ""
         promptActive = 1
         promptType$ = "Okay"
         Play sound 56
      EndIf
      powerCoreSlot = 0
   EndIf

   `Shop Screen: Back Button
   `takes the user back to the customisation main menu.
   If (mouseX() > 790 and mouseX() < 1014) and (mouseY() > 674 and mouseY() < 758) and menu$ = "Shop" and buyWindow = 0
      Paste image 19, 734, 674, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Saves the player's purchases.
         If playerType$ = "Player" then GoSub UpdatePurchases
         If playerType$ = "Player" then GoSub WritePurchases
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         If playerType$ = "Player" then saveTimer = TIMER
         menu$ = "Custom Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Shop Screen: New Ship Button
   `Opens the shop window for new ships.
   If (mouseX() > 200 and mouseX() < 450) and (mouseY() > 256 and mouseY() < 316)
      If menu$ = "Shop" and buyWindow = 0 and Val(playerAccount$(16)) < 5
         Paste image 52, 190, 246, 1
         If mouseclick() = 1 and buttonTimer = 0
            buyWindow = Val(playerAccount$(16)) + 1
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Shop Screen: New Colour Button
   `Opens the shop window for new colours.
   If (mouseX() > 574 and mouseX() < 824) and (mouseY() > 256 and mouseY() < 316)
      If menu$ = "Shop" and buyWindow = 0 and Val(playerAccount$(17)) < 7
         Paste image 52, 564, 246, 1
         If mouseclick() = 1 and buttonTimer = 0
            buyWindow = Val(playerAccount$(17)) + 6
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Shop Screen: New Power Core Button
   `Opens the shop window for new power cores.
   If (mouseX() > 200 and mouseX() < 450) and (mouseY() > 512 and mouseY() < 572)
      If menu$ = "Shop" and buyWindow = 0 and Val(playerAccount$(18)) < 8
         Paste image 52, 190, 502, 1
         If mouseclick() = 1 and buttonTimer = 0
            buyWindow = Val(playerAccount$(18)) + 13
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Shop Screen: New Tutorial Button
   `Opens the shop window for new tutorials.
   If (mouseX() > 574 and mouseX() < 824) and (mouseY() > 512 and mouseY() < 572)
      If menu$ = "Shop" and buyWindow = 0 and Val(playerAccount$(19)) < 12
         Paste image 52, 564, 502, 1
         If mouseclick() = 1 and buttonTimer = 0
            buyWindow = Val(playerAccount$(19)) + 21
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Shop Screen: Buy Button
   `Checks that the player has the correct amount of money and levels for the
   `purchase, deducts the required money, and adds the item to their save file.
   If (mouseX() > 342 and mouseX() < 502) and (mouseY() > 490 and mouseY() < 550) and menu$ = "Shop" and buyWindow > 0
      Paste image 75, 332, 480, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Determines if player has enough money and levels, or if debug purchase mode is on.
         If (buyPrice <= Val(playerAccount$(8)) and buyLevel <= Val(playerAccount$(6))) or (debugBuyAll = 1)
            `Determies what item the player has bought.
            If buyWindow >= 1 and buyWindow <= 5 then playerAccount$(16) = STR$(Val(playerAccount$(16)) + 1)
            If buyWindow >= 6 and buyWindow <= 12 then playerAccount$(17) = STR$(Val(playerAccount$(17)) + 1)
            If buyWindow >= 13 and buyWindow <= 20 then playerAccount$(18) = STR$(Val(playerAccount$(18)) + 1)
            If buyWindow >= 21 then playerAccount$(19) = STR$(Val(playerAccount$(19)) + 1)
            `Deducts cost of item from player's money.
            If debugBuyAll = 0 then playerAccount$(8) = STR$(Val(playerAccount$(8)) - buyPrice)
            `Returns message to player.
            promptActive = 1
            promptHeader$ = "PURCHASE SUCCESSFUL"
            If buyWindow >= 21
               promptLine1$ = "You have purchased " + buyName$ + "!"
            Else
               If buyWindow <= 5
                  promptLine1$ = "You have purchased the " + buyName$ + "!"
               Else
                  promptLine1$ = "You have purchased the colour " + buyName$ + "!"
               EndIf
            EndIf
            promptLine2$ = ""
            promptType$ = "Okay"
            buyWindow = 0
            buttonTimer = TIMER
            Play sound 60
         Else
            `Returns message to player if they do not have enough money/levels.
            promptActive = 1
            promptHeader$ = "PURCHASE UNSUCCESSFUL"
            promptLine1$ = "The item could not be bought."
            promptType$ = "Okay"
            If buyPrice > Val(playerAccount$(8))
               promptLine2$ = "You do not have enough Bitz."
            Else
               promptLine2$ = "You need to be a higher level."
            EndIf
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Shop Screen: Cancel Button
   `Closes the shop window.
   If (mouseX() > 522 and mouseX() < 682) and (mouseY() > 490 and mouseY() < 550) and menu$ = "Shop" and buyWindow > 0
      Paste image 75, 512, 480, 1
      If mouseclick() = 1 and buttonTimer = 0
         buyWindow = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

HighScoresButtons:
`Controls button clicks on the high score menus.

   `Score and Messages Menu: High Scores Button
   `Sorts all of the scores in the database, and then takes the user
   `to the high score table.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 240 and mouseY() < 324) and menu$ = "Scores Main"
      Paste image 19, 64, 240, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Sorts the scores in the database, then takes the player to the high score table.
         menu$ = "Scores"
         sortLimit = 100
         highScoreMode$ = "Endless"
         GoSub ReadScores
         GoSub SortScores
         menuScroll = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Score and Messages Menu: Messaging Button
   `Takes the user to the Messaging system.
   If (mouseX() > 80 and mouseX() < 304) and (mouseY() > 360 and mouseY() < 444)
      If menu$ = "Scores Main" and playerType$ = "Player"
         Paste image 19, 24, 360, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Messages"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Score and Messages Menu: Back Button
   `Takes the user back to the main menu.
   If (mouseX() > 240 and mouseX() < 464) and (mouseY() > 600 and mouseY() < 684) and menu$ = "Scores Main"
      Paste image 19, 184, 600, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `High Scores: Back Button
   `Takes the user back to the Scores and Messaging menu.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 674 and mouseY() < 758) and menu$ = "Scores"
      Paste image 19, 344, 674, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Scores Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `High Scores: Horizontal Arrows
   `Switches the table from endless scores to mission scores, and
   `vice versa, and sortes the scores as well.
   If (mouseX() > 342 and mouseX() < 422) or (mouseX() > 602 and mouseX() < 682)
      If (mouseY() > 117 and mouseY() < 197) and menu$ = "Scores"
         If mouseclick() = 1 and buttonTimer = 0
            `Sorts scores again, and switches menu.
            If highScoreMode$ = "Endless"
               highScoreMode$ = "Mission"
            Else
               highScoreMode$ = "Endless"
            EndIf
            sortLimit = 100
            GoSub SortScores
            menuScroll = 0
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `High Scores: -1 Arrow
   `Scrolls the high score table up by one.
   If (mouseX() > 250 and mouseX() < 330) and (mouseY() > 570 and mouseY() < 650)
      If menu$ = "Scores" and mouseclick() = 1 and buttonTimer = 0 and menuScroll > 0
         `Moves score up one.
         DEC menuScroll
         buttonTimer = TIMER - 7
         Play sound 54
      EndIf
   EndIf

   `High Scores: +1 Arrow
   `Scrolls the high score table down by one.
   If (mouseX() > 330 and mouseX() < 410) and (mouseY() > 570 and mouseY() < 650)
      If menu$ = "Scores" and mouseclick() = 1 and buttonTimer = 0 and menuScroll < 90
         `Moves scores down one.
         INC menuScroll
         buttonTimer = TIMER - 7
         Play sound 54
      EndIf
   EndIf

   `High Scores: -10 Arrow
   `Scrolls the high score table up by ten.
   If (mouseX() > 694 and mouseX() < 774) and (mouseY() > 570 and mouseY() < 650)
      If menu$ = "Scores" and mouseclick() = 1 and buttonTimer = 0
         `Moves scores up ten.
         If menuScroll >= 10
            menuScroll = menuScroll - 10
         Else
            menuScroll = 0
         EndIf
         buttonTimer = TIMER - 7
         Play sound 54
      EndIf
   EndIf

   `High Scores: +10 Arrow
   `Scrolls the high score table down by ten.
   If (mouseX() > 614 and mouseX() < 694) and (mouseY() > 570 and mouseY() < 650)
      If menu$ = "Scores" and mouseclick() = 1 and buttonTimer = 0
         `Moves scores down ten.
         If menuScroll <= 80
            menuScroll = menuScroll + 10
         Else
            menuScroll = 90
         EndIf
         buttonTimer = TIMER - 7
         Play sound 54
      EndIf
   EndIf

   `Messages - Menu: View Messages Button
   `Takes the user to the view messages screen.
   If (mouseX() > 312 and mouseX() < 472) and (mouseY() > 300 and mouseY() < 360)
      If menu$ = "Messages" and messageMode$ = "Menu"
         Paste image 40, 272, 300, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Switches menu to read mode.
            messageMode$ = "Read"
            `Finds number of messages total and that are new.
            NewMessages()
            TotalMessages()
            messageNumber = 0
            messageDirection$ = "Forward"
            If TotalMessages() > 0 then messageNumber = 1
            messageFound = 0
            GoSub OutputMessage
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - Menu: Send Messages Button
   `Takes the user to the send messages screen.
   If (mouseX() > 552 and mouseX() < 712) and (mouseY() > 300 and mouseY() < 360)
      If menu$ = "Messages" and messageMode$ = "Menu"
         Paste image 40, 512, 300, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Switches menu to write mode, and resets relevant variables.
            messageMode$ = "Write"
            messagePlayer$ = ""
            messageLine1$ = ""
            messageLine2$ = ""
            messageLine3$ = ""
            messageLine4$ = ""
            messageDate$ = ""
            messageRead = -1
            messageFound = 0
            linesToInput = 0
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - Menu: Back Button
   `Returns the user to the Scores and Messages menu.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 674 and mouseY() < 758)
      If menu$ = "Messages" and messageMode$ = "Menu"
         Paste image 19, 344, 674, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Scores Main"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - View: Left Arrow Button
   `Finds the previous message addressed to the player in
   `the database.
   If (mouseX() > 130 and mouseX() < 210) and (mouseY() > 200 and mouseY() < 280)
      If menu$ = "Messages" and messageMode$ = "Read"
         If mouseclick() = 1 and buttonTimer = 0
            `Moves pointer back one, and fetches new message.
            messageDirection$ = "Back"
            GoSub OutputMessage
            DEC messageNumber
            If messageNumber < 1 then messageNumber = TotalMessages()
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - View: Right Arrow Button
   `Finds the next message addressed to the player in
   `the database.
   If (mouseX() > 814 and mouseX() < 894) and (mouseY() > 200 and mouseY() < 280)
      If menu$ = "Messages" and messageMode$ = "Read"
         If mouseclick() = 1 and buttonTimer = 0
            `Moves pointer forward one, and fetches new message.
            messageDirection$ = "Forward"
            GoSub OutputMessage
            INC messageNumber
            If messageNumber > TotalMessages() then messageNumber = 1
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - View: Mark as Read/Delete Message Button
   `Marks the message as reads, or deletes the message from
   `the database.
   If (mouseX() > 162 and mouseX() < 322) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Read"
         Paste image 40, 122, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Deletes message if the message had been read.
            `OR marks messages as read if it is a new message.
            If messageRead = 1
               promptActive = 1
               promptHeader$ = "DELETE MESSAGE?"
               promptLine1$ = "Are you sure you would like to delete this message?"
               promptLine2$ = ""
               promptType$ = "Yes/No"
            Else
               messageRead = 1
               fileMessages$(messageFound, 5) = "1"
               GoSub WriteMessages
               saveTimer = TIMER
               NewMessages()
            EndIf
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - View: Reply Button
   `Stores the player who sent the message, and takes the user to
   `the send messages screen. The recipient of the message is then
   `automatically changed to the stored player.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Read"
         Paste image 40, 392, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Stores message sender's name, and takes player to write mode.
            If messagePlayer$ <> "A player that no longer exists" and messagePlayer$ <> ""
               messageMode$ = "Write"
               messageLine1$ = ""
               messageLine2$ = ""
               messageLine3$ = ""
               messageLine4$ = ""
               messageDate$ = ""
               messageRead = 0
               messageFound = 0
               linesToInput = 5
               Play sound 54
            Else
               Play sound 56
            EndIf
         EndIf
      EndIf
   EndIf

   `Messages - View: Back Button
   `Takes the user back to the Message menu.
   If (mouseX() > 702 and mouseX() < 862) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Read"
         Paste image 40, 662, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            messageMode$ = "Menu"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - Send: Write Message Button
   `Activates the interface for sending messages to other players,
   `and prompts the user to start typing their message.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 250 and mouseY() < 334)
      If menu$ = "Messages" and messageMode$ = "Write" and messageRead = -1
         Paste image 19, 344, 250, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Initialises variables for writing mode.
            messageLine1$ = ""
            messageLine2$ = ""
            messageLine3$ = ""
            messageLine4$ = ""
            messageRead = 0
            linesToInput = 4
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - Send: Change Recipient Button
   `Cycles through all of the player's in the database.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Write" and messageRead = 1
         Paste image 40, 392, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            GoSub FindRecipient
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - View: Send Button
   `Stores the message in the database, along with the sender, recipient
   `and the date sent.
   If (mouseX() > 702 and mouseX() < 862) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Write" and messageRead = 1
         Paste image 40, 662, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Uses messageRead to find empty space in database.
            messageRead = -2
            For i = 1 to 100
               If fileMessages$(i, 3) = "-" then messageRead = i: i = 101
            Next i
            `If no space found, the game will find the oldest message, and
            `write over it.
            If i <= 0
               FetchOldestDateMessages()
               messageRead = FetchOldestDateMessages()
            EndIf
            `Stores the sender's player ID.
            fileMessages$(messageRead, 1) = playerAccount$(1)
            `Finds recipient's player ID, and saves it.
            For i = 1 to 10
               If messagePlayer$ = filePlayerStore$(i, 2)
                  fileMessages$(messageRead, 2) = filePlayerStore$(i, 1)
                  i = 11
               EndIf
            Next i
            `Pads out the length of each line of the message to fit into the
            `database's fixed length records.
            For i = 1 to 64
               If Len(messageLine1$) < 64 then messageLine1$ = messageLine1$ + " "
               If Len(messageLine2$) < 64 then messageLine2$ = messageLine2$ + " "
               If Len(messageLine3$) < 64 then messageLine3$ = messageLine3$ + " "
               If Len(messageLine4$) < 63 then messageLine4$ = messageLine4$ + " "
            Next i
            `Stores message, send date and read status.
            fileMessages$(messageRead, 3) = messageLine1$ + messageLine2$ + messageLine3$ + messageLine4$
            fileMessages$(messageRead, 4) = messageDate$
            fileMessages$(messageRead, 5) = "0"
            `Saves the messages to the database.
            GoSub WriteMessages
            saveTimer = TIMER
            messageRead = -1
            `Returns a message for the player.
            promptActive = 1
            promptHeader$ = "MESSAGE SENT!"
            promptLine1$ = "Your message has been successfully sent to " + messagePlayer$
            promptLine2$ = ""
            promptType$ = "Okay"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Messages - Send: Back Button
   `Takes the user back to the Messaging menu.
   If (mouseX() > 162 and mouseX() < 322) and (mouseY() > 510 and mouseY() < 570)
      If menu$ = "Messages" and messageMode$ = "Write" and messageRead <> 0
         Paste image 40, 122, 510, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Cancels menu sending, or returns the user to the messaging menu.
            If messageRead = -1
               messageMode$ = "Menu"
               buttonTimer = TIMER
               Play sound 54
            Else
               messageRead = -1
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   EndIf

Return

MultipleMenuButtons:
`Used to detect clicking on buttons that appear on multiple menus.

   `Displys the buttons.
   Set text size 12
   ink RGB(0,0,0), RGB(0,0,0)
   Paste image 37, 859, 573
   Center Text 939, 593, "Options"
   Paste image 38, 859, 638
   Center Text 939, 658, "Log Out"
   Paste image 39, 859, 703
   Center Text 939, 723, "Quit"

   `Options Button
   `Takes the user to the options screen.
   If (mouseX() > 859 and mouseX() < 1019) and (mouseY() > 573 and mouseY() < 633) and debugMenuShow + promptActive = 0
      Paste image 20, 819, 573, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Fills out the options array.
         For i = 1 to 6
            fileOptions$(i, 2) = fileOptions$(i, 1)
         Next i
         prevMenu3$ = menu$
         menu$ = "Options"
         optionsMenu$ = "Graphics"
         changesMade = 0
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Log Out Button
   `Takes the user to the log out screen.
   If (mouseX() > 859 and mouseX() < 1019) and (mouseY() > 638 and mouseY() < 698) and debugMenuShow + promptActive = 0
      Paste image 20, 819, 638, 1
      If mouseclick() = 1 and buttonTimer = 0
         prevMenu3$ = menu$
         menu$ = "Log Out"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Quit Button
   `Takes the user to the quit screen.
   If (mouseX() > 859 and mouseX() < 1019) and (mouseY() > 703 and mouseY() < 763) and debugMenuShow + promptActive = 0
      Paste image 20, 819, 703, 1
      If mouseclick() = 1 and buttonTimer = 0
         prevMenu3$ = menu$
         menu$ = "Quit"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

OptionsButtons:
`Used to perform commands based on button clicks in the options menu.

   `Tab change buttons
   `Switches which options can be changed.
   For i = 1 to 4
      If (mouseX() > 112 + ((i-1)*200) and mouseX() < 312 + ((i-1)*200)) and (mouseY() > 130 and mouseY() < 179)
         If menu$ = "Options"
            Paste image 44, 100 + ((i-1)*200), 90, 1
            If mouseclick() = 1 and buttonTimer = 0
               `Used to change the options menu interface.
               If i = 1 then optionsMenu$ = "Graphics"
               If i = 2 then optionsMenu$ = "Audio"
               If i = 3 then optionsMenu$ = "Credits"
               If i = 4 then optionsMenu$ = "Account"
               buttonTimer = TIMER
               Play sound 54
            EndIf
         EndIf
      EndIf
   Next i

   `Apply Button
   `Activates any changes made to the options, but does not save them.
   If (mouseX() > 120 and mouseX() < 344) and (mouseY() > 650 and mouseY() < 734) and changesMade = 1 and menu$ = "Options"
      Paste image 19, 64, 650, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Applies any changes made to the game.
         GoSub ApplyVolume
         changesMade = 2
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Confirm Button
   `Activates any changes made to the options, and saves them to the database.
   If (mouseX() > 680 and mouseX() < 904) and (mouseY() > 650 and mouseY() < 734) and changesMade >= 1 and menu$ = "Options"
      Paste image 19, 624, 650, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Applies any changes made to the game, and returns the user to the menu.
         If changesMade = 1 then GoSub ApplyVolume
         GoSub WriteOptions
         saveTimer = 20
         menu$ = prevMenu3$
         prevMenu3$ = "Main"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Cancel Button
   `Cancles any changes made to the options, and returns the user to the
   `last menu they were on.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 650 and mouseY() < 734) and menu$ = "Options"
      Paste image 19, 344, 650, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Cancels any changes made, and returns the user to the menu.
         For i = 1 to 6
            fileOptions$(i, 1) = fileOptions$(i, 2)
         Next i
         If changesMade = 2
            GoSub ApplyVolume
         EndIf
         menu$ = prevMenu3$
         prevMenu3$ = "Main"
         buttonTimer = TIMER
         Play sound 56
      EndIf
   EndIf

   `Graphics: Change Fullscreen Button
   `Switches fullscreen mode from on to off.
   If (mouseX() > 650 and mouseX() < 810) and (mouseY() > 230 and mouseY() < 290) and optionsMenu$ = "Graphics"
      If menu$ = "Options"
         Paste image 40, 610, 230, 1
         If mouseclick() = 1 and buttonTimer = 0
            If fileOptions$(1,1) = "Off"
               fileOptions$(1,1) = "On"
            Else
               fileOptions$(1,1) = "Off"
            EndIf
            changesMade = 1
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Graphics: Change Controls Button
   `Cycles through the different control schemes the player can use.
   If (mouseX() > 650 and mouseX() < 810) and (mouseY() > 480 and mouseY() < 540) and optionsMenu$ = "Graphics"
      If menu$ = "Options"
         Paste image 40, 610, 480, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Cycles through control schemes.
            If fileOptions$(2,1) = "WASD"
               fileOptions$(2,1) = "Arrow Keys"
            Else
               If fileOptions$(2,1) = "Arrow Keys"
                  fileOptions$(2,1) = "IJKL"
               Else
                  If fileOptions$(2,1) = "IJKL"
                     fileOptions$(2,1) = "Numpad"
                  Else
                     fileOptions$(2,1) = "WASD"
                  EndIf
               EndIf
            EndIf
            changesMade = 1
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Audio: Change Volume Buttons
   `Increases the volume by 5% each click.
   For i = 1 to 3
      If (mouseX() > 650 and mouseX() < 810) and (mouseY() > 200 + ((i-1)*100) and mouseY() < 260 + ((i-1)*100))
         If optionsMenu$ = "Audio" and menu$ = "Options"
            Paste image 40, 610, 200 + ((i-1)*100), 1
            If mouseclick() = 1 and buttonTimer = 0
               fileOptions$(i+2, 1) = STR$(Val(fileOptions$(i+2, 1)) + 5)
               If Val(fileOptions$(i+2, 1)) > 100 then fileOptions$(i+2, 1) = "0"
               changesMade = 1
               buttonTimer = TIMER / 4
               Play sound 54
            EndIf
         EndIf
      EndIf
   Next i

   `Audio: Change Soundtrack Button
   `Switches which directory the game should load songs from.
   If (mouseX() > 650 and mouseX() < 810) and (mouseY() > 500 and mouseY() < 560)
      If optionsMenu$ = "Audio" and menu$ = "Options"
         Paste image 40, 610, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            If fileOptions$(6, 1) = "Retro"
               fileOptions$(6, 1) = "Neo"
            Else
               fileOptions$(6, 1) = "Retro"
            EndIf
            changesMade = 1
            buttonTimer = TIMER / 4
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Account: Change Username Button
   `Takes the player to the username change screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 200 and mouseY() < 260) and optionsMenu$ = "Account"
      If menu$ = "Options"
         Paste image 40, 392, 200, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Options Change"
            optionsChangeMode$ = "Name"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Account: Change Password Button
   `Takes the player to the password change screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 350 and mouseY() < 410) and optionsMenu$ = "Account"
      If menu$ = "Options"
         Paste image 40, 392, 350, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Options Change"
            optionsChangeMode$ = "Password"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Account: Delete Account Button
   `Displays a prompt asking the user if they are sure they want to
   `delete their account.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 500 and mouseY() < 560) and optionsMenu$ = "Account"
      If menu$ = "Options"
         Paste image 40, 392, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Asks the user if they are sure they want to delete their account.
            promptActive = 1
            promptHeader$ = "DELETE YOUR ACCOUNT?"
            promptLine1$ = "Deleting your account will erase all of your personal game data, saves, etc.,"
            promptLine2$ = "but your high scores will remain. Is this okay?"
            promptType$ = "Yes/No"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Box 1 focus
   `Allows for data entry in the first box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 200 and mouseY() < 298)
      If menu$ = "Options Change" and mouseclick() = 1 and buttonTimer = 0
         If (optionsChangeMode$ = "Name" or optionsChangeMode$ = "Password")
            Paste image 43, 432, 200
            Paste image 45, 422, 190, 1
            ink RGB(255,255,255), RGB(0,0,0)
            Text 480, 300, "Press Enter to confirm."
            sync
            ink RGB(0,0,0), RGB(255,255,255)
            Set Cursor 440, 240
            Input adminNew1$
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Box 2 focus
   `Allows for data entry in the second box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 340 and mouseY() < 438)
      If menu$ = "Options Change" and mouseclick() = 1 and buttonTimer = 0
         If (optionsChangeMode$ = "Name" or optionsChangeMode$ = "Password")
            Paste image 43, 432, 340
            Paste image 45, 422, 330, 1
            ink RGB(255,255,255), RGB(0,0,0)
            Text 480, 440, "Press Enter to confirm."
            sync
            ink RGB(0,0,0), RGB(255,255,255)
            Set Cursor 440, 380
            Input adminNew2$
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Name Change Confirm Button
   `Game will validate the new name to make sure it is unique,
   `and that it follows the other validation rules.
   `If it does, then the name is stored in the array.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Options Change" and optionsChangeMode$ = "Name"
         Paste image 44, 275, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Checks to see if name is in use.
            nameCheck$ = adminNew1$
            NameAvailability(nameCheck$)
            `Checks if name is unique and if usernames match.
            If NameAvailability(nameCheck$) = 1 and adminNew1$ = adminNew2$
               `Checks that username is correct length.
               If Len(adminNew1$) >= 6 and Len(adminNew1$) <= 20
                  `Checks if name is on reserved name list.
                  If adminNew1$ <> "Guest" and adminNew1$ <> "guest" and adminNew1$ <> "NONAME"
                     playerAccount$(2) = adminNew1$
                     menu$ = "Options"
                     adminNew1$ = ""
                     adminNew2$ = ""
                     GoSub UpdatePlayers
                     GoSub WritePlayers
                     saveTimer = 20
                     promptActive = 1
                     promptHeader$ = "CHANGE SUCCESS"
                     promptLine1$ = "You are now " + playerAccount$(2) + "!"
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  Else
                     promptActive = 1
                     promptHeader$ = "CHANGE FAILURE"
                     promptLine1$ = "Name is reserved."
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  EndIf
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "Usernames must be between 6 and 20 characters. (Inclusive)"
                  promptLine2$ = ""
                  promptType$ = "Okay"
               EndIf
            Else
               If NameAvailability(nameCheck$) = 0
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "The name you have chosen is already in use."
                  promptLine2$ = ""
                  promptType$ = "Okay"
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "The entered names do not match."
                  promptLine2$ = ""
                  promptType$ = "Okay"
               EndIf
            EndIf
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Admin Change: Password Change Confirm Button
   `Game will validate the new password to make sure it
   `follows the validation rules used in account creation.
   `If it does, then the name is stored in the array.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Options Change" and optionsChangeMode$ = "Password"
         Paste image 44, 275, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Checks if passwords match.
            If adminNew1$ = adminNew2$
               `Checks that username is correct length.
               If Len(adminNew1$) >= 8 and Len(adminNew1$) <= 20
                  `Checks if password is on reserved name list.
                  If adminNew1$ <> "NOPASS"
                     playerAccount$(3) = adminNew1$
                     menu$ = "Options"
                     adminNew1$ = ""
                     adminNew2$ = ""
                     GoSub UpdatePlayers
                     GoSub WritePlayers
                     saveTimer = 20
                     promptActive = 1
                     promptHeader$ = "CHANGE SUCCESS"
                     promptLine1$ = "Your password was successfully changed!"
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  Else
                     promptActive = 1
                     promptHeader$ = "CHANGE FAILURE"
                     promptLine1$ = "Password is reserved."
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  EndIf
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "Usernames must be between 6 and 20 characters. (Inclusive)"
                  promptLine2$ = ""
                  promptType$ = "Okay"
                  adminNew1$ = ""
                  adminNew2$ = ""
               EndIf
            Else
               promptActive = 1
               promptHeader$ = "CHANGE FAILURE"
               promptLine1$ = "The entered passwords do not match."
               promptLine2$ = ""
               promptType$ = "Okay"
               adminNew1$ = ""
               adminNew2$ = ""
            EndIf
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Admin Change: Change Cancel Button
   `Cancels the text entry and returns the user to the player change screen.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Options Change"
         Paste image 44, 525, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            adminNew1$ = ""
            adminNew2$ = ""
            menu$ = "Options"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

Return

LogOutButtons:
`Detects clicking on the log out verification screen.

   `Log Out: Yes button
   `Takes the user back to the log in screen, and clears all of their data
   `from the game arrays.
   If (mouseX() > 200 and mouseX() < 424) and (mouseY() > 350 and mouseY() < 464) and menu$ = "Log Out"
      Paste image 19, 144, 350, 1
      If mouseclick() = 1 and buttonTimer = 0
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         If playerType$ = "Player" then saveTimer = 20
         playerAccount$(1) = "-"
         playerAccount$(2) = "NONAME"
         playerAccount$(3) = "NOPASS"
         playerAccount$(4) = "0"
         playerAccount$(5) = "-"
         playerAccount$(6) = "0"
         playerAccount$(7) = "0"
         playerAccount$(8) = "0"
         playerAccount$(9) = "-"
         playerAccount$(10) = "-"
         playerAccount$(11) = "-"
         playerAccount$(12) = "-"
         playerAccount$(13) = "-"
         playerAccount$(14) = "-"
         playerAccount$(15) = "-"
         playerAccount$(16) = "0"
         playerAccount$(17) = "0"
         playerAccount$(18) = "0"
         playerAccount$(19) = "0"
         userName$ = ""
         menu$ = "Log In"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Log Out: No button
   `Returns the user to the last menu they were on.
   If (mouseX() > 600 and mouseX() < 824) and (mouseY() > 350 and mouseY() < 464) and menu$ = "Log Out"
      Paste image 19, 544, 350, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = prevMenu3$
         prevMenu3$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

QuitButtons:
`Detects clicking on the quit verification screen.

   `Quit: Yes button
   `Saves player data. then closes the game.
   If (mouseX() > 200 and mouseX() < 424) and (mouseY() > 350 and mouseY() < 464) and menu$ = "Quit"
      Paste image 19, 144, 350, 1
      If mouseclick() = 1 and buttonTimer = 0
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         Play sound 54
         End
      EndIf
   EndIf

   `Quit: No button
   `Returns the user to the last menu they were on.
   If (mouseX() > 600 and mouseX() < 824) and (mouseY() > 350 and mouseY() < 464) and menu$ = "Quit"
      Paste image 19, 544, 350, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = prevMenu3$
         prevMenu3$ = "Main"
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

Return

InGameButtons:
`Used to detect clicks on the in game buttons, which are displayed on the pause
`menu and the game over screen.

   `Game Over: Retry Button
   `Resets the game to allow the player to play again straight away,
   If (mouseX() > 250 and mouseX() < 410) and (mouseY() > 480 and mouseY() < 540)
      If gameStopped = 1 and animationStage => 80 and missionEnd = 0 and gameMode$ = "Single"
         Paste image 40, 210, 480, 1
         If mouseclick() = 1 and buttonTimer = 0
            Play sound 54
            `Saves the player's data, then restarts the endless game.
            If playerType$ = "Player" then GoSub UpdateAccounts
            If playerType$ = "Player" then GoSub WriteAccounts
            If playerType$ = "Player" then saveTimer = 20
            GoSub ResetEndlessGame
            Loop sound setMusic
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Game Over: Quit Button
   `Takes the user back to the Singleplayer Setup Screen.
   If (mouseX() > 614 and mouseX() < 774) and (mouseY() > 480 and mouseY() < 540)
      If gameStopped = 1 and animationStage => 80 and missionEnd = 0 and gameMode$ = "Single"
         Paste image 40, 574, 480, 1
         If mouseclick() = 1 and buttonTimer = 0
            Play sound 54
            `Loads menu assets, saves the player's data, then takes them back to the menu.
            GoSub StopAllMusic
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            If playerType$ = "Player" then GoSub UpdateAccounts
            If playerType$ = "Player" then GoSub WriteAccounts
            If playerType$ = "Player" then saveTimer = 20
            GoSub ResetEndlessGame
            menu$ = "Single Setup"
            mouse = 1
            endGame = 1
            Play sound 25
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Game Over: High Scores Button
   `Takes the player to the high scores screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 550 and mouseY() < 610)
      If gameStopped = 1 and animationStage => 80 and missionEnd = 0 and gameMode$ = "Single"
         Paste image 40, 392, 550, 1
         If mouseclick() = 1 and buttonTimer = 0
            Play sound 54
            `Loads menu assets, saves the player's data, then takes
            `them back to the high score table.
            GoSub StopAllMusic
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            If playerType$ = "Player" then GoSub UpdateAccounts
            If playerType$ = "Player" then GoSub WriteAccounts
            If playerType$ = "Player" then saveTimer = 20
            GoSub ResetEndlessGame
            menu$ = "Scores Main"
            mouse = 1
            endGame = 1
            Play sound 25
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Mission Complete: Return Button
   `Takes the user back to the Mission Map screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 500 and mouseY() < 560) and missionEnd = 1 and gameMode$ = "Single"
      Paste image 40, 392, 500, 1
      If mouseclick() = 1 and buttonTimer = 0
         GoSub ResetMissionGame
         GoSub StopAllMusic
         Play sound 54
         `Resets entries in the array used for game suspension, and progresses the player to the next mission.
         If playerSaves$(save, 2) = STR$(missionNumber) then playerSaves$(save, 2) = STR$(Val(playerSaves$(save, 2)) + 1)
         playerSaves$(save, 7) = "0"
         playerSaves$(save, 8) = "0"
         playerSaves$(save, 9) = "0"
         playerSaves$(save, 10) = "0"
         playerSaves$(save, 11) = "-"
         playerSaves$(save, 12) = "-"
         playerSaves$(save, 13) = "0"
         playerSaves$(save, 14) = "0"
         playerSaves$(save, 15) = "0"
         playerSaves$(save, 16) = "0"
         playerSaves$(save, 17) = "0"
         playerSaves$(save, 18) = "0"
         playerSaves$(save, 19) = "0"
         playerSaves$(save, 20) = "0"
         playerSaves$(save, 21) = "0"
         playerSaves$(save, 22) = "0"
         playerSaves$(save, 23) = "0"
         playerSaves$(save, 24) = "0"

         `Saves player's score and resets their save file if they finish the game.
         If Val(playerSaves$(save, 2)) => 21 and missionNumber = 20
            newHighScore = 0
            scoreStored = 0
            GoSub ReadScores
            For i = 1 to 100
               If fileScoreStore$(i, 1) = playerAccount$(5)
                  scoreStored = 1
                  If Val(playerSaves$(save, 4)) > Val(fileScoreStore$(i, 6))
                     fileScoreStore$(i, 6) = playerSaves$(save, 4)
                     newHighScore = 1
                  EndIf
                  i = 101
               EndIf
            Next i
            If scoreStored = 0
               highScoreMode$ = "Mission"
               sortLimit = 100
               GoSub SortScores
               newHighScore = 0
               i = 1
               While newHighScore = 0 and i > 0
                  If (fileScoreStore$(i, 1) = "-" and fileScoreStore$(i, 6) = "0") or (i = 100)
                     fileScoreStore$(i, 1) = playerAccount$(5)
                     fileScoreStore$(i, 2) = playerAccount$(2)
                     fileScoreStore$(i, 3) = "0"
                     fileScoreStore$(i, 4) = "-"
                     fileScoreStore$(i, 5) = "-"
                     fileScoreStore$(i, 6) = playerSaves$(save, 4)
                     newHighScore = 1
                  Else
                     INC i
                  EndIf
               EndWhile
            EndIf
            GoSub WriteScores
            `Calculates the reward for completing the game.
            bitzReward = 200.0 * missionDifficulty# * (Val(playerSaves$(save, 6)) + 1)
            expReward = 100.0 * missionDifficulty# * (Val(playerSaves$(save, 6)) + 1)
            If bitzReward > 5000 then bitzReward = 5000
            If expReward > 2500 then expReward = 2500
            menu$ = "Completion Screen"
            soundToPlay = 24
         Else
            menu$ = "Single Map"
            soundToPlay = 25
         EndIf

         `Saves player data.
         If playerType$ = "Player" then GoSub UpdateSuspendSaves
         If playerType$ = "Player" then GoSub WriteSaves
         If playerType$ = "Player" then GoSub UpdateAccounts
         If playerType$ = "Player" then GoSub WriteAccounts
         If playerType$ = "Player" then saveTimer = 20

         `Loads assets for the menu.
         GoSub FillMissions
         GoSub StopAllMusic
         GoSub CallLoadingScreen2
         GoSub DeleteGameAssets
         GoSub LoadMenuAssets
         mouse = 1
         endGame = 1

         Play sound soundToPlay
         buttonTimer = TIMER

      EndIf
   EndIf

   `Mission Failed: Retry Button
   `Resets the game variables to allow the user to reattempt the mission
   `from the beginning.
   If (mouseX() > 300 and mouseX() < 460) and (mouseY() > 500 and mouseY() < 560)
      If animationStage => 80 and missionEnd = -1 and gameMode$ = "Single"
         Paste image 40, 260, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Gives the player two lives, saves their data, and restarts the
            `mission game.
            playerSaves$(save, 3) = "2"
            If playerType$ = "Player" then GoSub UpdateAccounts
            If playerType$ = "Player" then GoSub WriteAccounts
            If playerType$ = "Player" then saveTimer = 20
            Play sound 54
            GoSub ResetMissionGame
            GoSub StopAllMusic
            Loop sound missionNumber
            mouse = 0
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Mission Failed: Return Button
   `takes the user back to the map screen.
   If (mouseX() > 564 and mouseX() < 724) and (mouseY() > 500 and mouseY() < 560)
      If animationStage => 80 and missionEnd = -1 and gameMode$ = "Single"
         Paste image 40, 524, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Gives the player two lives, saves their data, and returns
            `them to the menu.
            playerSaves$(save, 3) = "2"
            If playerType$ = "Player" then GoSub UpdateAccounts
            If playerType$ = "Player" then GoSub WriteAccounts
            Play sound 54
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            saveTimer = 20
            GoSub ResetMissionGame
            GoSub StopAllMusic
            mouse = 1
            endGame = 1
            Loop sound 25
            GoSub FillMissions
            menu$ = "Single Map"
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Multiplayer Mission Failed: Retry Button
   `Allows the players to retry the mission.
   If (mouseX() > 300 and mouseX() < 460) and (mouseY() > 500 and mouseY() < 560)
      If missionEnd = -1 and gameMode$ = "Multi"
         Paste image 40, 260, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Resets the game so that the players can play again.
            GoSub ResetCooperateGame
            GoSub StopAllMusic
            Loop sound missionNumber
            mouse = 0
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Multiplayer Mission Failed: Return Button
   `Returns the player to the setup screen.
   If (mouseX() > 564 and mouseX() < 724) and (mouseY() > 500 and mouseY() < 560)
      If missionEnd = -1 and gameMode$ = "Multi"
         Paste image 40, 524, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Returns the players to the main menu after loading the menu assets.
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            GoSub ResetCooperateGame
            GoSub StopAllMusic
            mouse = 1
            endGame = 1
            Loop sound 25
            menu$ = "Multi Setup"
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Pause Menu: Resume Game Button
   `Unpauses the game.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 300 and mouseY() < 360) and gamePaused = 1
      Paste image 40, 392, 300, 1
      If mouseclick() = 1 and pauseTimer = 0
         mouse = 0
         gamePaused = 0
         Play sound 57
         Resume sound setMusic
         pauseTimer = TIMER
      EndIf
   EndIf

   `Pause Menu: Restart Button
   `Resets all of the game variables and restarts the endless game.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 370 and mouseY() < 430)
      If gamePaused = 1 and missionNumber = 0 and gameMode$ = "Single"
         Paste image 40, 392, 370, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Resets the endless game.
            GoSub ResetEndlessGame
            Loop sound setMusic
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Pause Menu: Suspend Game Button
   `Allows players to save their progress in the game to their save file,
   `which they can resume playing from later.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 370 and mouseY() < 430)
      If gamePaused = 1 and missionNumber > 0 and gameMode$ = "Single"
         Paste image 40, 392, 370, 1
         If mouseclick() = 1 and buttonTimer = 0
            Play sound 54
            `Stores all the data that will be needed to resume the player's
            `suspended game.
            playerSaves$(save, 7) = "1"
            playerSaves$(save, 8) = playerData$(1, 1)
            playerSaves$(save, 9) = playerData$(1, 2)
            playerSaves$(save, 10) = playerData$(1, 5)
            playerSaves$(save, 11) = playerData$(1, 6)
            playerSaves$(save, 12) = playerData$(1, 7)
            playerSaves$(save, 13) = playerData$(1, 8)
            playerSaves$(save, 14) = playerData$(1, 9)
            playerSaves$(save, 15) = playerData$(1, 10)
            playerSaves$(save, 16) = playerData$(1, 11)
            playerSaves$(save, 17) = playerData$(1, 13)
            playerSaves$(save, 18) = STR$(missionStage)
            playerSaves$(save, 19) = playerData$(1, 14)
            playerSaves$(save, 20) = STR$(missionNumber)
            playerSaves$(save, 21) = STR$(powerCores(1, 1))
            playerSaves$(save, 22) = STR$(powerCores(2, 1))
            playerSaves$(save, 23) = STR$(powerCores(3, 1))
            playerSaves$(save, 24) = STR$(powerCores(4, 1))
            `Saves the player's save game, loads the menu assets, and
            `returns the player to the main menu.
            GoSub ResetEndlessGame
            GoSub UpdateSuspendSaves
            GoSub WriteSaves
            GoSub StopAllMusic
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            save = 0
            endGame = 1
            mouse = 1
            menu$ = "Single Saves"
            Play sound 25
         EndIf
      EndIf
   EndIf

   `Pause Menu: End Endless/Mission Game Button
   `Returns the user to the Singleplayer Setup screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 440 and mouseY() < 500)
      If gamePaused = 1 and gameMode$ = "Single"
         Paste image 40, 392, 440, 1
         `Warns the player that quitting will delete any suspended game
         `progress from their file.
         If missionNumber > 0 and gameMode$ = "Single"
            Set text size 14
            ink RGB(255,255,255), RGB(0,0,0)
            Text 780, 200, "This will clear any"
            Text 790, 220, "suspended progress"
            Text 800, 240, "on this file!"
         EndIf
         If mouseclick() = 1 and pauseTimer = 0
            `Resets all variables related to the game.
            GoSub ResetEndlessGame
            GoSub ResetMissionGame
            GoSub StopAllMusic
            If Val(playerSaves$(save, 3)) < 2 then playerSaves$(save, 3) = "2"
            playerSaves$(save, 7) = "0"
            playerSaves$(save, 8) = "0"
            playerSaves$(save, 9) = "0"
            playerSaves$(save, 10) = "-"
            playerSaves$(save, 11) = "-"
            playerSaves$(save, 12) = "-"
            playerSaves$(save, 13) = "-"
            playerSaves$(save, 14) = "-"
            playerSaves$(save, 15) = "-"
            playerSaves$(save, 16) = "-"
            playerSaves$(save, 17) = "0"
            playerSaves$(save, 18) = "0"
            playerSaves$(save, 19) = "0"
            playerSaves$(save, 20) = "0"
            playerSaves$(save, 21) = "0"
            playerSaves$(save, 22) = "0"
            playerSaves$(save, 23) = "0"
            playerSaves$(save, 24) = "0"
            `Saves player save games.
            If playerType$ = "Player" then GoSub UpdateSuspendSaves
            If playerType$ = "Player" then GoSub WriteSaves
            `Loads menu assets.
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            If playerType$ = "Player" then saveTimer = 20
            menu$ = "Single Main"
            mouse = 1
            endGame = 1
            Play sound 25
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Competitive Mode End: Return Button
   `Returns the players to the setup screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 500 and mouseY() < 560)
      If missionEnd => 1 and gameMode$ = "Multi"
         Paste image 40, 392, 500, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Resets variables related to the game.
            GoSub ResetCompeteGame
            GoSub StopAllMusic
            Play sound 54
            menu$ = "Multi Setup"
            buttonTimer = TIMER
            `Loads menu assets.
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            mouse = 1
            endGame = 1
            Play sound 25
         EndIf
      EndIf
   EndIf

   `Pause Menu: End Multiplayer Game Button
   `Stops the multiplayer game and returns the players to the
   `setup screen.
   If (mouseX() > 432 and mouseX() < 592) and (mouseY() > 440 and mouseY() < 500)
      If gamePaused = 1 and gameMode$ = "Multi"
         Paste image 40, 392, 440, 1
         If mouseclick() = 1 and pauseTimer = 0
            `Resets all variables related to the multiplayer games.
            GoSub ResetCooperateGame
            GoSub ResetCompeteGame
            GoSub StopAllMusic
            `Loads the menu assets.
            GoSub CallLoadingScreen2
            GoSub DeleteGameAssets
            GoSub LoadMenuAssets
            menu$ = "Multi Setup"
            mouse = 1
            endGame = 1
            Play sound 25
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

Return

AdminButtons:
`Runs click event handlers in the admin area of the game.

   `Admin Log In: Username Box focus
   `Allows the user to type the Admin Username in.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 200 and mouseY() < 298)
      If menu$ = "Admin Log In" and mouseclick() = 1 and buttonTimer = 0
         `Allows for data entry in this box.
         Paste image 43, 432, 200
         Paste image 45, 422, 190, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 300, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 240
         Input adminName$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Admin Log In: Password Box focus
   `Allows the user to type the Admin Password in.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 340 and mouseY() < 438)
      If menu$ = "Admin Log In" and mouseclick() = 1 and buttonTimer = 0
         `Allows for data entry in this box.
         Paste image 43, 432, 340
         Paste image 45, 422, 330, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 440, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 380
         Input adminPass$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Admin Log In: Log In Button
   `Checks if any of the admin entries match the username and password
   `entered by the user.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Admin Log In"
      Paste image 44, 275, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Reads all admin records from the file.
         GoSub ReadAdmin
         `Checks to see if the entered details match any of the records
         `in the database.
         For i = 1 to 5
            If adminName$ = fileAdminStore$(i, 2) and adminPass$ = fileAdminStore$(i, 3)
               menu$ = "Admin"
               playerType$ = "Admin"
               Play sound 55
            EndIf
         Next i
         `Returns error message if entered details do not match any
         `record in the database.
         If menu$ <> "Admin"
            promptActive = 1
            promptHeader$ = "ERROR"
            promptLine1$ = "Incorrect Admin name or password."
            promptLine2$ = ""
            promptType$ = "Okay"
            Play sound 56
         EndIf
         buttonTimer = TIMER
      EndIf
   EndIf

   `Admin Log In: Cancel Button
   `Clears the fields.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744) and menu$ = "Admin Log In"
      Paste image 44, 525, 620, 1
      If mouseclick() = 1 and buttonTimer = 0
         adminName$ = ""
         adminPass$ = ""
         playerType$ = "Player"
         menu$ = "Main"
         buttonTimer = TIMER
         Play sound 56
      EndIf
   EndIf

   `Admin Menu: Back Button
   `Takes the user back to the main menu.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 675 and mouseY() < 759) and menu$ = "Admin"
      Paste image 19, 344, 675, 1
      If mouseclick() = 1 and buttonTimer = 0
         playerType$ = "Player"
         menu$ = "Main"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Menu: Edit Player Data Button
   `Takes the admin to the Edit Player Data screen.
   If (mouseX() > 312 and mouseX() < 712) and (mouseY() > 150 and mouseY() < 210) and menu$ = "Admin" and playerType$ = "Admin"
      Paste image 103, 272, 150, 1
      If mouseclick() = 1 and buttonTimer = 0
         menu$ = "Admin Change"
         adminChangeMode$ = "Find"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Menu: Change Debug Mode Button
   `Toggles debug mode on or off.
   If (mouseX() > 312 and mouseX() < 712) and (mouseY() > 220 and mouseY() < 280) and menu$ = "Admin" and playerType$ = "Admin"
      Paste image 103, 272, 220, 1
      If mouseclick() = 1 and buttonTimer = 0
         debugModeOn = 1 - debugModeOn
         If debugModeOn = 1
            `Returns a message to tell the player that debug mode is on.
            promptActive = 1
            promptHeader$ = "DEBUG MODE - ON"
            promptLine1$ = "Debug mode is activated. To bring up debug menu, press B, U and G."
            promptLine2$ = "This can be done in menus or in game. Scores will not be saved while debug mode is on."
            promptType$ = "Okay"
         Else
            `Resets all debug variables.
            debugShowDataIn = 0
            debugAllowDeath = 0
            debugInfiniteHealth = 0
            debugWaveAdvance = 0
            debugShowFPS = 0
            debugScorePlus = 0
            debugKillsPlus = 0
            debugKillEnemies = 0
            debugStopEnemies = 0
            debugShowDataOut = 0
            debugBuyAll = 0
            debugPlayAll = 0
            debugLevelUp = 0
            debugBitzUp = 0
            `Returns a message to tell the player that debug mode is off.
            promptActive = 1
            promptHeader$ = "DEBUG MODE - OFF"
            promptLine1$ = "Debug mode has been deactivated."
            promptLine2$ = "All debug features have been turned off. Scores can now be saved."
            promptType$ = "Okay"
         EndIf
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Menu: Delete Local Data Button
   `Asks the user if they are sure they want to delete all of the
   `local data.
   If (mouseX() > 312 and mouseX() < 712) and (mouseY() > 290 and mouseY() < 350) and menu$ = "Admin" and playerType$ = "Admin"
      Paste image 103, 272, 290, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Asks the user if they are sure they want to delete all of the
         `data in the Adapt database.
         promptActive = 1
         promptHeader$ = "DELETE ALL LOCAL DATA?"
         promptLine1$ = "This will delete all data (not including high score tables)"
         promptLine2$ = "stored on this computer related to Adapt. Do you wish to do this?"
         promptType$ = "Yes/No"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Menu: Backup Local Data Button
   `Asks the user if they want to backup the current database.
   If (mouseX() > 312 and mouseX() < 712) and (mouseY() > 390 and mouseY() < 450) and menu$ = "Admin" and playerType$ = "Admin"
      Paste image 103, 272, 390, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Asks the user if they are sure they want to perform a backup.
         promptActive = 1
         promptHeader$ = "BACKUP DATA?"
         promptLine1$ = "This backup will copy all files to .../Adapt/Data Stores/Backup Area/Backup ."
         promptLine2$ = "Are you okay with this?"
         promptType$ = "Yes/No"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Menu: Restore Local Data Button
   `Asks the user if they are sure they want to replace the data in the
   `game with the backup data.
   If (mouseX() > 312 and mouseX() < 712) and (mouseY() > 460 and mouseY() < 520) and menu$ = "Admin" and playerType$ = "Admin"
      Paste image 103, 272, 460, 1
      If mouseclick() = 1 and buttonTimer = 0
         `Asks the user if they are sure they want to restore a backup.
         promptActive = 1
         promptHeader$ = "RESTORE DATA?"
         promptLine1$ = "The files located in .../Adapt/Data Stores/Backup Area/Backup"
         promptLine2$ = "will be restored. Changes since backup will be lost. Are you okay with this?"
         promptType$ = "Yes/No"
         buttonTimer = TIMER
         Play sound 55
      EndIf
   EndIf

   `Admin Change: Username Box focus
   `Allows the admin to enter the name of the user they want to edit.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 200 and mouseY() < 298)
      If menu$ = "Admin Change" and mouseclick() = 1 and buttonTimer = 0 and adminChangeMode$ = "Find"
         `Allows admin to input name of a player in this box.
         Paste image 43, 432, 200
         Paste image 45, 422, 190, 1
         ink RGB(255,255,255), RGB(0,0,0)
         Text 480, 300, "Press Enter to confirm."
         sync
         ink RGB(0,0,0), RGB(255,255,255)
         Set Cursor 440, 240
         Input adminFind$
         buttonTimer = TIMER
         Play sound 54
      EndIf
   EndIf

   `Admin Change: Find Player Button
   `Searches through the database to find the player to edit.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Admin Change" and adminChangeMode$ = "Find"
         Paste image 44, 275, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerFound = 0
            For i = 1 to 10
               If filePlayerStore$(i, 2) = adminFind$ and Val(filePlayerStore$(i, 4)) = 1
                  `Transfers data from player file into playerChange$.
                  playerChange$(1) = filePlayerStore$(i, 1)
                  playerChange$(2) = filePlayerStore$(i, 2)
                  playerChange$(3) = filePlayerStore$(i, 3)
                  playerChange$(4) = filePlayerStore$(i, 4)
                  `Using PA link to find the account the player is linked to.
                  For j = 1 to 10
                     If playerChange$(1) = filePlayerLink$(j, 1) then playerChange$(5) = filePlayerLink$(j, 2)
                  Next j
                  `Transfers data from the appropriate account entry into playerChange$.
                  For j = 1 to 10
                     If playerChange$(5) = fileAccountStore$(j, 1)
                        playerChange$(6) = fileAccountStore$(j, 2)
                        playerChange$(7) = fileAccountStore$(j, 3)
                        playerChange$(8) = fileAccountStore$(j, 4)
                        playerChange$(9) = fileAccountStore$(j, 5)
                        playerChange$(10) = fileAccountStore$(j, 6)
                        playerChange$(11) = fileAccountStore$(j, 7)
                        playerChange$(12) = fileAccountStore$(j, 8)
                        playerChange$(13) = fileAccountStore$(j, 9)
                        playerChange$(14) = fileAccountStore$(j, 10)
                        playerChange$(15) = fileAccountStore$(j, 11)
                        j = 11
                     EndIf
                  Next j
                  `Transfers data from the appropriate purchase entry into playerAccount$.
                  For j = 1 to 10
                     If playerChange$(5) = filePurchases$(j, 1)
                        playerChange$(16) = filePurchases$(j, 2)
                        playerChange$(17) = filePurchases$(j, 3)
                        playerChange$(18) = filePurchases$(j, 4)
                        playerChange$(19) = filePurchases$(j, 5)
                        j = 11
                     EndIf
                  Next j
                  playerFound = 1
                  i = 11
               EndIf
            Next i
            `Checks to see if the admin is trying to edit their own account.
            If playerFound = 1
               If playerChange$(1) = playerAccount$(1)
                  promptActive = 1
                  promptHeader$ = "ERROR"
                  promptLine1$ = "You cannot edit your own account! Please try again,"
                  promptLine2$ = "using/searching for a different account."
                  promptType$ = "Okay"
                  adminFind$ = ""
               Else
                  adminChangeMode$ = "Edit"
                  Play sound 55
               EndIf
            `Tells the admin that the account was not found.
            Else
               promptActive = 1
               promptHeader$ = "ERROR"
               promptLine1$ = "Could not find specified player."
               promptLine2$ = ""
               promptType$ = "Okay"
               Play sound 56
            EndIf
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Admin Change: Cancel Button
   `Returns the admin to the admin menu.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Admin Change" and adminChangeMode$ = "Find"
         Paste image 44, 525, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            menu$ = "Admin"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Admin Change: Change Name Button
   `Opens the name changing interface.
   If (mouseX() > 700 and mouseX() < 860) and (mouseY() > 150 and mouseY() < 210)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 40, 660, 150, 1
         If mouseclick() = 1 and buttonTimer = 0
            adminChangeMode$ = "Name"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Change Password Button
   `Opens the password changing interface.
   If (mouseX() > 700 and mouseX() < 860) and (mouseY() > 220 and mouseY() < 280)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 40, 660, 220, 1
         If mouseclick() = 1 and buttonTimer = 0
            adminChangeMode$ = "Password"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Increase Level Button
   `Allows the admin to increase the level of the player.
   If (mouseX() > 700 and mouseX() < 860) and (mouseY() > 290 and mouseY() < 350)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 40, 660, 290, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerChange$(6) = STR$(Val(playerChange$(6)) + 1)
            If Val(playerChange$(6)) > 20 then playerChange$(6) = "20"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Increase Bitz Button
   `Allows the admin to increase the total Bitz the player has.
   If (mouseX() > 700 and mouseX() < 860) and (mouseY() > 360 and mouseY() < 420)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 40, 660, 360, 1
         If mouseclick() = 1 and buttonTimer = 0
            playerChange$(8) = STR$(Val(playerChange$(8)) + 100)
            If Val(playerChange$(8)) > 9999 then playerChange$(8) = "9999"
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Apply Changes Button
   `Asks the user to confirm the changes they are about to make.
   If (mouseX() > 160 and mouseX() < 384) and (mouseY() > 675 and mouseY() < 759)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 44, 160, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            promptActive = 1
            promptHeader$ = "CONFIRM CHANGES"
            promptLine1$ = "Are you sure you would like to save the changes to"
            promptLine2$ = "this player's account? This could cause them to not be able to log in."
            promptType$ = "Yes/No"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Admin Change: Cancel Changes Button
   `Asks the user if they are sure they want to revert the changes they have made.
   If (mouseX() > 400 and mouseX() < 624) and (mouseY() > 675 and mouseY() < 759)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 44, 400, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            promptActive = 1
            promptHeader$ = "CONFIRM CANCEL"
            promptLine1$ = "Are you sure you want to cancel your changes?"
            promptLine2$ = ""
            promptType$ = "Yes/No"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Admin Change: Delete Player Button
   `Asks the admin if they are sure they want to delete the specified user.
   If (mouseX() > 640 and mouseX() < 864) and (mouseY() > 675 and mouseY() < 759)
      If menu$ = "Admin Change" and adminChangeMode$ = "Edit"
         Paste image 44, 640, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            promptActive = 1
            promptHeader$ = "DELETE THIS ACCOUNT?"
            promptLine1$ = "Are you sure you want to delete this player's account? There is"
            promptLine2$ = "no way to retrieve their account if you do this!"
            promptType$ = "Yes/No"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

   `Admin Change: Box 1 focus
   `Allows for data entry in the first box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 200 and mouseY() < 298)
      If menu$ = "Admin Change" and mouseclick() = 1 and buttonTimer = 0
         If (adminChangeMode$ = "Name" or adminChangeMode$ = "Password")
            Paste image 43, 432, 200
            Paste image 45, 422, 190, 1
            ink RGB(255,255,255), RGB(0,0,0)
            Text 480, 300, "Press Enter to confirm."
            sync
            ink RGB(0,0,0), RGB(255,255,255)
            Set Cursor 440, 240
            Input adminNew1$
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Box 2 focus
   `Allows for data entry in the second box.
   If (mouseX() > 432 and mouseX() < 812) and (mouseY() > 340 and mouseY() < 438)
      If menu$ = "Admin Change" and mouseclick() = 1 and buttonTimer = 0
         If (adminChangeMode$ = "Name" or adminChangeMode$ = "Password")
            Paste image 43, 432, 340
            Paste image 45, 422, 330, 1
            ink RGB(255,255,255), RGB(0,0,0)
            Text 480, 440, "Press Enter to confirm."
            sync
            ink RGB(0,0,0), RGB(255,255,255)
            Set Cursor 440, 380
            Input adminNew2$
            buttonTimer = TIMER
            Play sound 54
         EndIf
      EndIf
   EndIf

   `Admin Change: Name Change Confirm Button
   `Game will validate the new name to make sure it is unique,
   `and that it follows the other validation rules.
   `If it does, then the name is stored in the array.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Admin Change" and adminChangeMode$ = "Name"
         Paste image 44, 275, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Checks to see if name is in use.
            nameCheck$ = adminNew1$
            NameAvailability(nameCheck$)
            `Checks if name is unique and if passwords match.
            If NameAvailability(nameCheck$) = 1 and adminNew1$ = adminNew2$
               `Checks that username is correct length.
               If Len(adminNew1$) >= 6 and Len(adminNew1$) <= 20
                  `Checks if name is on reserved name list.
                  If adminNew1$ <> "Guest" and adminNew1$ <> "guest" and adminNew1$ <> "NONAME"
                     playerChange$(2) = adminNew1$
                     adminChangeMode$ = "Edit"
                     adminNew1$ = ""
                     adminNew2$ = ""
                  Else
                     promptActive = 1
                     promptHeader$ = "CHANGE FAILURE"
                     promptLine1$ = "Name is reserved."
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  EndIf
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "Usernames must be between 6 and 20 characters. (Inclusive)"
                  promptLine2$ = ""
                  promptType$ = "Okay"
               EndIf
            Else
               If NameAvailability(nameCheck$) = 0
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "The name you have chosen is already in use."
                  promptLine2$ = ""
                  promptType$ = "Okay"
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "The entered names do not match."
                  promptLine2$ = ""
                  promptType$ = "Okay"
               EndIf
            EndIf
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Admin Change: Password Change Confirm Button
   `Game will validate the new password to make sure it
   `follows the validation rules used in account creation.
   `If it does, then the name is stored in the array.
   If (mouseX() > 275 and mouseX() < 499) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Admin Change" and adminChangeMode$ = "Password"
         Paste image 44, 275, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            `Checks if passwords match.
            If adminNew1$ = adminNew2$
               `Checks that username is correct length.
               If Len(adminNew1$) >= 8 and Len(adminNew1$) <= 20
                  `Checks if password is on reserved name list.
                  If adminNew1$ <> "NOPASS"
                     playerChange$(3) = adminNew1$
                     adminChangeMode$ = "Edit"
                     adminNew1$ = ""
                     adminNew2$ = ""
                  Else
                     promptActive = 1
                     promptHeader$ = "CHANGE FAILURE"
                     promptLine1$ = "Password is reserved."
                     promptLine2$ = ""
                     promptType$ = "Okay"
                  EndIf
               Else
                  promptActive = 1
                  promptHeader$ = "CHANGE FAILURE"
                  promptLine1$ = "Usernames must be between 6 and 20 characters. (Inclusive)"
                  promptLine2$ = ""
                  promptType$ = "Okay"
                  adminNew1$ = ""
                  adminNew2$ = ""
               EndIf
            Else
               promptActive = 1
               promptHeader$ = "CHANGE FAILURE"
               promptLine1$ = "The entered passwords do not match."
               promptLine2$ = ""
               promptType$ = "Okay"
               adminNew1$ = ""
               adminNew2$ = ""
            EndIf
            Play sound 54
            buttonTimer = TIMER
         EndIf
      EndIf
   EndIf

   `Admin Change: Change Cancel Button
   `Cancels the text entry and returns the user to the player change screen.
   If (mouseX() > 525 and mouseX() < 749) and (mouseY() > 660 and mouseY() < 744)
      If menu$ = "Admin Change" and (adminChangeMode$ = "Name" or adminChangeMode$ = "Password")
         Paste image 44, 525, 620, 1
         If mouseclick() = 1 and buttonTimer = 0
            adminNew1$ = ""
            adminNew2$ = ""
            adminChangeMode$ = "Edit"
            buttonTimer = TIMER
            Play sound 56
         EndIf
      EndIf
   EndIf

Return

PromptResponse:
`Used to execute different pieces of code based on the user's response to the prompt box.
`The code looks at the title of the box, and runs the code that matches the title if the
`Yes button is pressed in the box.

   Select promptHeader$

      `Runs through all of the data in the database and resets
      `it to the default values. This is then saved, and the
      `admin is returned to the title screen.
      Case "ARE YOU SURE?"
         GoSub ReadPlayers
         GoSub ClearPlayers
         GoSub WritePlayers
         GoSub ReadPlayerLink
         GoSub ClearPlayerLink
         GoSub WritePlayerLink
         GoSub ReadAccounts
         GoSub ClearAccounts
         GoSub WriteAccounts
         GoSub ReadPurchases
         GoSub ClearPurchases
         GoSub WritePurchases
         GoSub ReadSaves
         GoSub ClearSaves
         GoSub WriteSaves
         GoSub ReadSaveLink
         GoSub ClearSaveLink
         GoSub WriteSaveLink
         GoSub FileLoading
         promptActive = 0
         promptHeader$ = ""
         promptLine1$ = ""
         promptLine2$ = ""
         promptType$ = ""
         userName$ = ""
         passWord$ = ""
         menu$ = "Title"
         Stop sound 25
         Play sound 25
         promptActive = 1
         promptHeader$ = "DATA DELETED"
         promptLine1$ = "The local data store has been deleted and recreated."
         promptLine2$ = ""
         promptType$ = "Okay"
         Play sound 54
      EndCase

      `Brings up another message box to ensure that the player does
      `want to delete all of the game's data.
      Case "DELETE ALL LOCAL DATA?"
         promptActive = 1
         promptHeader$ = "ARE YOU SURE?"
         promptLine1$ = "There is NO WAY of retrieving the data after this has been carried out. You will also"
         promptLine2$ = "be logged out. Are you still sure you want to delete all of the local data?"
         promptType$ = "Yes/No"
      EndCase

      `Deletes the player's account if they have confirmed twice that they want to delete their account.
      Case "SERIOUSLY?"
         `Finds the player's account.
         GoSub FileLoading
         i = 0
         saveReplace = 0
         `Finds the player's account.
         While i <= 11
            INC i
            saveReplace = i
            If i <= 10
               If filePlayerStore$(i, 1) = playerAccount$(1) then i = 12
            EndIf
         EndWhile
         SaveRemoval(saveReplace)
         GoSub FileSaving
         If SaveRemoval(saveReplace) = 1
            `Reseting variables and returning user to log in screen.
            newName$ = ""
            newPass1$ = ""
            newPass2$ = ""
            menu$ = "Log In"
            promptActive = 1
            promptHeader$ = "ACCOUNT DELETED"
            promptLine1$ = "Your account has been deleted."
            promptLine2$ = ""
            promptType$ = "Okay"
         Else
            promptActive = 1
            promptHeader$ = "ERROR"
            promptLine1$ = "An error occured while trying to delete your account."
            promptLine2$ = "The player file may have been tampered with. Please consult an admin."
            promptType$ = "Okay"
         EndIf
      EndCase

      `Asks the user a second time if they want to delete their account.
      Case "DELETE YOUR ACCOUNT?"
         promptActive = 1
         promptHeader$ = "SERIOUSLY?"
         promptLine1$ = "There is NO WAY to retrieve any of your data after this!"
         promptLine2$ = "Are you sure you would like to delete your Adapt account?"
         promptType$ = "Yes/No"
      EndCase

      `Writes data that has been changed by the admin to the database, if the admin
      `confirms that they want to perform this task.
      Case "CONFIRM CHANGES"
         `Finds the changed player's account.
         GoSub FileLoading
         i = 0
         k = 0
         While i <= 11
            INC i
            k = i
            If i <= 10
               If filePlayerStore$(i, 1) = playerChange$(1) then i = 12
            EndIf
         EndWhile
         If k <= 10
            `Writing data to player array
            filePlayerStore$(k, 1) = playerChange$(1)
            filePlayerStore$(k, 2) = playerChange$(2)
            filePlayerStore$(k, 3) = playerChange$(3)
            filePlayerStore$(k, 4) = playerChange$(4)
            `Writing data to account array
            fileAccountStore$(k, 1) = playerChange$(5)
            fileAccountStore$(k, 2) = playerChange$(6)
            fileAccountStore$(k, 3) = playerChange$(7)
            fileAccountStore$(k, 4) = playerChange$(8)
            fileAccountStore$(k, 5) = playerChange$(9)
            fileAccountStore$(k, 6) = playerChange$(10)
            fileAccountStore$(k, 7) = playerChange$(11)
            fileAccountStore$(k, 8) = playerChange$(12)
            fileAccountStore$(k, 9) = playerChange$(13)
            fileAccountStore$(k, 10) = playerChange$(14)
            fileAccountStore$(k, 11) = playerChange$(15)
            `Writing purchase info to array.
            filePurchases$(k, 2) = playerChange$(16)
            filePurchases$(k, 3) = playerChange$(17)
            filePurchases$(k, 4) = playerChange$(18)
            filePurchases$(k, 5) = playerChange$(19)
            `Saving all written data to the database.
            GoSub WritePlayers
            GoSub WriteAccounts
            GoSub WritePurchases
            `Displays confirmation message.
            adminChangeMode$ = "Find"
            promptActive = 1
            promptHeader$ = "CHANGES SAVED"
            promptLine1$ = "All of your changes to the player's account have been saved!"
            promptLine2$ = ""
            promptType$ = "Okay"
         Else
            promptActive = 1
            promptHeader$ = "ERROR"
            promptLine1$ = "An error occured while trying to save this account."
            promptLine2$ = "The player file may have been tampered with. Please consult the user guide."
            promptType$ = "Okay"
         EndIf
      EndCase

      `Returns the admin to the player finding screen, and cancels any
      `changes they made to any player accounts.
      Case "CONFIRM CANCEL"
         adminChangeMode$ = "Find"
         promptActive = 0
      EndCase

      `Delete's the account selected by the admin if the admin confirms
      `this decision.
      Case "DELETE THIS ACCOUNT?"
         `Finds the changed player's account.
         GoSub FileLoading
         i = 0
         k = 0
         While i <= 11
            INC i
            saveReplace = i
            If i <= 10
               If filePlayerStore$(i, 1) = playerChange$(1) then i = 12
            EndIf
         EndWhile
         SaveRemoval(saveReplace)
         If SaveRemoval(saveReplace) = 1
            `Displays confirmation message.
            adminChangeMode$ = "Find"
            GoSub FileSaving
            saveTimer = TIMER
            promptActive = 1
            promptHeader$ = "ACCOUNT DELETED"
            promptLine1$ = "Account successfully deleted!"
            promptLine2$ = ""
            promptType$ = "Okay"
         Else
            `Displays error message.
            promptActive = 1
            promptHeader$ = "ERROR"
            promptLine1$ = "An error occured while trying to delete this account."
            promptLine2$ = "The player file may have been tampered with. Please consult the user guide."
            promptType$ = "Okay"
         EndIf
      EndCase

      `Case used to replace old player accounts with new ones.
      Case "REPLACE THIS PLAYER?"
         `Stores the relevant data, then passes it into the
         `function SaveCreation.
         saveReplace = FetchOldestDateAccount()
         SaveRemoval(saveReplace)
         SaveCreation(newName$, newPass1$, saveReplace, totalPlayers$)
         `Increases variable used to create unique IDs.
         totalPlayers$ = STR$(Val(totalPlayers$) + 1)
         If Val(totalPlayers$) > 999 then totalPlayers$ = "1"
         `Saves all changes.
         GoSub FileSaving
         If SaveRemoval(saveReplace) = 1
            newName$ = ""
            newPass1$ = ""
            newPass2$ = ""
            menu$ = "Log In"
            promptActive = 1
            promptHeader$ = "ACCOUNT CREATED"
            promptLine1$ = "Your account has been successfully created."
            promptLine2$ = "You may now log in using your previously entered details."
            promptType$ = "Okay"
         Else
            promptHeader$ = "ERROR"
            promptLine1$ = "Could not correctly replace account."
            promptLine2$ = "System error. Please contact an admin."
            promptType$ = "Okay"
         EndIf
      EndCase

      `Case used to ask user if they want to replace an account in the database
      `with their new account.
      Case "LOCAL STORE FULL"
         FetchOldestDateAccount()
         promptActive = 1
         If FetchOldestDateAccount() > 0
            promptHeader$ = "REPLACE THIS PLAYER?"
            promptLine1$ = filePlayerStore$(FetchOldestDateAccount(), 2) + " hasn't played since:- "
            promptLine1$ = promptLine1$ + fileAccountStore$(FetchOldestDateAccount(), 11)
            promptLine2$ = "Is it okay to delete this account and replace it with your own?"
            promptType$ = "Yes/No"
         Else
            promptHeader$ = "ERROR"
            promptLine1$ = "Could not correctly find old account."
            promptLine2$ = "System error. Please contact an admin."
            promptType$ = "Okay"
         EndIf
      EndCase

      `Case used to delete messages from the database.
      Case "DELETE MESSAGE?"
         promptActive = 0
         `Clears data out of the record.
         fileMessages$(messageFound, 1) = "-"
         fileMessages$(messageFound, 2) = "-"
         fileMessages$(messageFound, 3) = "-"
         fileMessages$(messageFound, 4) = "-"
         fileMessages$(messageFound, 5) = "0"
         `Saves changes to the database.
         GoSub WriteMessages
         saveTimer = TIMER
         `Fetches new totals for read messages and total messages.
         NewMessages()
         TotalMessages()
         INC messageNumber
         messageDirection$ = "Forward"
         If TotalMessages() > 0 then messageNumber = 1
         GoSub OutputMessage
      EndCase

      `Case used to correctly backup each table of the database.
      Case "BACKUP DATA?"
         `Stores file names in variables.
         backupStart$ = "Data Stores/Accounts.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Accounts.txt"
         `Determies if file exists in the database.
         If file exist(backupStart$) = 1
            `Deletes the file if it exists in the old backup.
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            `Copies file to new backup.
            Copy file backupStart$, backupEnd$
         EndIf
         `Repeat for remaining files.
         backupStart$ = "Data Stores/Admins.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Admins.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/AS Link.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/AS Link.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Messages.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Messages.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Options.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Options.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/PA Link.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/PA Link.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Players.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Players.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Purchases.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Purchases.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Saves.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Saves.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         backupStart$ = "Data Stores/Scores.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Scores.txt"
         If file exist(backupStart$) = 1
            If file exist(backupEnd$) = 1 then delete file backupEnd$
            Copy file backupStart$, backupEnd$
         EndIf
         promptActive = 1
         promptHeader$ = "BACKUP COMPLETE!"
         promptLine1$ = "All files that were found have been backed up!"
         promptLine2$ = ""
         promptType$ = "Okay"
      EndCase

      `Case used to restore all tables in the backup folder to the game.
      Case "RESTORE DATA?"
         `Stores file names in variables.
         backupStart$ = "Data Stores/Accounts.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Accounts.txt"
         `Determies if file in backup exists.
         If file exist(backupEnd$) = 1
            `Deletes existsing file in database.
            If file exist(backupStart$) = 1 then delete file backupStart$
            `Replaces file with the file from the backup.
            Copy file backupEnd$, backupStart$
         EndIf
         `Repeat for remaining files.
         backupStart$ = "Data Stores/Admins.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Admins.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/AS Link.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/AS Link.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Messages.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Messages.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Options.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Options.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/PA Link.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/PA Link.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Players.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Players.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Purchases.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Purchases.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Saves.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Saves.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         backupStart$ = "Data Stores/Scores.txt"
         backupEnd$ = "Data Stores/Backup Area/Backup/Scores.txt"
         If file exist(backupEnd$) = 1
            If file exist(backupStart$) = 1 then delete file backupStart$
            Copy file backupEnd$, backupStart$
         EndIf
         promptActive = 1
         promptHeader$ = "RESTORE COMPLETE!"
         promptLine1$ = "All files that were found have been restored!"
         promptLine2$ = "You will now need to re-log in."
         promptType$ = "Okay"
         menu$ = "Title"
      EndCase

   EndSelect

Return

` === GAME PROCEDURES ===

RunEndlessGame:
`Used to run the endless mode and all of its related procedures.

   `Music setup and variable resetting.
   playerNumber = 1
   playerTotal = 1
   GoSub StopAllMusic
   Loop sound setMusic
   GoSub ResetEndlessGame

   Do
      cls

      `Displays the interface for the game.
      GoSub DisplaySingleGUI

      `Runs the game while the game is unpaused.
      If gameStopped = 0 and gamePaused = 0
         GoSub MovementHandling
         GoSub BoundaryHandlingSingleplayer
         GoSub ShipPlacementSingleplayer
         GoSub RunInvincibilitySingleplayer
         GoSub PlayerProjectilesSingleplayer
         GoSub EnemyProjectiles
         GoSub PowerCoreHandling
         GoSub EnemyHandlingSingleplayer
         GoSub EnemyHandlingSpecial
         GoSub BossHandling
         GoSub RemoveHealthEndless
         GoSub AutoFire
         GoSub DebugTools
      EndIf

      `Used to bring up and operate the pause menu.
      If gameStopped = 0
         GoSub PauseGame
      EndIf

      `Checks if the player has died/finished.
      GoSub GameOverCheckEndless

      `Used to capture images while in the game.
      GoSub TakeScreenshot

      `Runs the code for the buttons in the pause/game over screens.
      If (gameStopped = 1 or gamePaused = 1) and debugMenuShow = 0
         GoSub InGameButtons
      EndIf

      `Places mouse when permitted.
      If mouse = 1 then Paste image 3, mouseX(), mouseY(), 1

      `Decreases timer between button presses.
      If buttonTimer > 0 then DEC buttonTimer

      `Ends the game if the variable endGame is set to 1.
      If endGame = 1 then Exit

      `DEBUG: Shows the frames per second counter.
      If debugShowFPS = 1
         Set text size 14
         ink RGB(255,255,255), RGB(0,0,0)
         Text 900, 740, "FPS: " + STR$(Screen FPS())
      EndIf

      sync

   Loop

Return

RunMissionGame:
`Runs all of the procedures needed to run a mission mode game.

   `Music setup and variable resetting.
   playerNumber = 1
   playerTotal = 1
   GoSub StopAllMusic
   Loop sound setMusic
   GoSub ResetMissionGame

   Do
      cls

      `Displays the interface for the game.
      GoSub DisplaySingleGUI

      `Runs the game while the game is unpaused.
      If gameStopped = 0 and gamePaused = 0
         GoSub MovementHandling
         GoSub BoundaryHandlingSingleplayer
         GoSub ShipPlacementSingleplayer
         GoSub RunInvincibilitySingleplayer
         GoSub PlayerProjectilesSingleplayer
         GoSub EnemyProjectiles
         GoSub PowerCoreHandling
         GoSub EnemyHandlingSingleplayer
         GoSub EnemyHandlingSpecial
         GoSub BossHandling
         GoSub RemoveHealthMission
         GoSub AutoFire
         GoSub DebugTools
      EndIf

      `Used to bring up and operate the pause menu.
      If gameStopped = 0
         GoSub PauseGame
      EndIf

      `Checks if the player has died/finished.
      GoSub GameOverCheckMission

      `Used to capture images while in the game.
      GoSub TakeScreenshot

      `Runs the code for the buttons in the pause/game over screens.
      If (gameStopped = 1 or gamePaused = 1) and debugMenuShow = 0
         GoSub InGameButtons
      EndIf

      `Places mouse when permitted.
      If mouse = 1 then Paste image 3, mouseX(), mouseY(), 1

      `Decreases time rbetween button clicks.
      If buttonTimer > 0 then DEC buttonTimer

      `Closes the game if the variable endGame is 1.
      If endGame = 1 then Exit

      `DEBUG: Used to display the Frames per Second counter.
      If debugShowFPS = 1
         Set text size 14
         ink RGB(255,255,255), RGB(0,0,0)
         Text 900, 740, "FPS: " + STR$(Screen FPS())
      EndIf

      sync

   Loop

Return

RunCooperateGame:
`Used to run all of the procedures needed for the cooperative game.

   `Music setup and variable resetting.
   playerTotal = 2
   GoSub StopAllMusic
   Loop sound setMusic
   GoSub ResetCooperateGame

   Do
      cls

      `Loop to process all players in the game.
      For playerNumber = 1 to playerTotal

         `Displays interface for the game.
         GoSub DisplayCoopGUI

         `Runs all the subs needed to be run individually for each player.
         If gameStopped = 0 and gamePaused = 0
            GoSub MovementHandling
            GoSub BoundaryHandlingSingleplayer
            GoSub ShipPlacementCoop
            GoSub RunInvincibilityCoop
            GoSub PlayerProjectilesCoop
            GoSub AutoFire
         EndIf

      Next playerNumber

      `Runs all of the subs that only need to be run once.
      If gameStopped = 0 and gamePaused = 0
         GoSub EnemyProjectiles
         GoSub PowerCoreHandling
         GoSub EnemyHandlingCoop
         GoSub EnemyHandlingSpecial
         GoSub BossHandling
         GoSub DebugTools
      EndIf

      `Processes health loss for players. Has to be done after enemy and boss
      `collisions, otherwise game does not handle it well.
      For playerNumber = 1 to playerTotal
         GoSub RemoveHealthCoop
      Next playerNumber

      `Processes the pause function.
      If gameStopped = 0
         GoSub PauseGame
      EndIf

      `Checks to see if the players have died/finished.
      GoSub GameOverCheckCoop

      `Used to save images of the game.
      GoSub TakeScreenshot

      `Processes the in game button handlers.
      If (gameStopped = 1 or gamePaused = 1) and debugMenuShow = 0
         GoSub InGameButtons
      EndIf

      `Places mouse when permitted.
      If mouse = 1 then Paste image 3, mouseX(), mouseY(), 1

      `Decreases time rbetween button clicks.
      If buttonTimer > 0 then DEC buttonTimer

      `Closes the game if the variable endGame is 1.
      If endGame = 1 then Exit

      `DEBUG: Used to display the Frames per Second counter.
      If debugShowFPS = 1
         Set text size 14
         ink RGB(255,255,255), RGB(0,0,0)
         Text 900, 740, "FPS: " + STR$(Screen FPS())
      EndIf

      sync

   Loop

Return

RunCompeteGame:
`Used to run all of the procedures needed for the competitive game.

   `Music setup and variable resetting.
   playerTotal = 4
   GoSub StopAllMusic
   Loop sound setMusic
   GoSub ResetCompeteGame

   Do
      cls

      `Displays the game's user interface.
      GoSub DisplayCompeteGUI

      `Game loop for processing multiple players.
      For playerNumber = 1 to playerTotal

         `Runs all of the subs that must be run once per player.
         If gameStopped = 0 and gamePaused = 0 and playerData$(playerNumber, 16) = "1"
            GoSub MovementHandling
            GoSub BoundaryHandlingCompete
            GoSub ShipPlacementCompete
            GoSub PlayerProjectilesCompete
            GoSub RemoveHealthCompete
            GoSub RunInvincibilityCompete
         EndIf

      Next playerNumber

      `Processes the pause function.
      If gameStopped = 0
         GoSub PauseGame
      EndIf

      `Rins the subs that only need to be run once.
      If gameStopped = 0 and gamePaused = 0
         GoSub DebugTools
      EndIf

      `Checks to see if the multiplayer match has finished.
      GoSub GameOverCheckCompete

      `Used to save images of the game.
      GoSub TakeScreenshot

      `Runs the click event handlers for the in game buttons.
      If (gameStopped = 1 or gamePaused = 1) and debugMenuShow = 0
         GoSub InGameButtons
      EndIf

      `Places mouse when permitted.
      If mouse = 1 then Paste image 3, mouseX(), mouseY(), 1

      `Decreases time rbetween button clicks.
      If buttonTimer > 0 then DEC buttonTimer

      `Closes the game if the variable endGame is 1.
      If endGame = 1 then Exit

      `DEBUG: Used to display the Frames per Second counter.
      If debugShowFPS = 1
         Set text size 14
         ink RGB(255,255,255), RGB(0,0,0)
         Text 900, 740, "FPS: " + STR$(Screen FPS())
      EndIf

      sync

   Loop

Return

ResetEndlessGame:
`Used to reset all variables related to the endless game mode.

   `Removes mouse from the screen.
   mouse = 0

   `Resets other game variables.
   gameMode$ = "Single"
   gameStopped = 0
   gamePaused = 0
   invincibility = 0
   soundPlayed = 0
   laserNumber = 1
   laserStop = 0
   endGame = 0
   playerSpeedModifier = 1
   pLaserSpeedModifier = 1
   enemySpeedModifier = 1
   eLaserSpeedModifier = 1
   pointModifier = 1
   powerChance = 0
   powerCoreActive$ = ""
   enemyGroup# = 1
   enemyFormation = 0
   autoFire = 0
   endlessDifficulty# = 1.00
   missionDifficulty# = 1.00
   powerTimeCurrent = 0
   powerTimeMax = 1
   bossProjectile = 1
   bossLaserRecharge = 0
   bossesKilled = 0
   bossForm = 0
   bossMusic = 0
   newHighScore = 0

   `Sets a random background.
   setBackground = rnd(19) + 201

   `Resets power core array.
   For i = 1 to 5
      powerCores(i,1) = 0
      powerCores(i,2) = 0
      powerCores(i,3) = 0
      powerCores(i,4) = 0
      powerCores(i,5) = 0
      powerCores(i,6) = 0
      powerCores(i,7) = 0
   Next i

   `Reset player array basics.
   playerData$(1,1) = "464"
   playerData$(1,2) = "348"
   playerData$(1,5) = "100"
   playerData$(1,6) = playerAccount$(9)
   playerData$(1,7) = playerAccount$(10)
   playerData$(1,8) = playerAccount$(11)
   playerData$(1,9) = playerAccount$(12)
   playerData$(1,10) = playerAccount$(13)
   playerData$(1,11) = playerAccount$(14)
   playerData$(1,12) = "0"
   playerData$(1,13) = "0"
   playerData$(1,14) = "0"
   playerData$(1,15) = "0"
   playerData$(1,16) = "1"
   playerData$(1,17) = fileOptions$(2, 1)

   GoSub AllocateShipEndless

   `Resets all projectiles and their locations.
   For i = 1 to 32
      playerProjectiles(i, 1) = 0
      playerProjectiles(i, 2) = 1024
      playerProjectiles(i, 3) = 0
      playerProjectiles(i, 4) = 0
      playerProjectiles(i, 5) = 0
      playerProjectiles(i, 6) = 0
      playerProjectiles(i, 7) = 0
   Next i

   `Sets up the power core array.
   For i = 1 to 4
      If playerData$(1, 7 + i) = "Flight Kit" then powerCores(i, 7) = 451
      If playerData$(1, 7 + i) = "Power Pack" then powerCores(i, 7) = 452
      If playerData$(1, 7 + i) = "Ion Trigger" then powerCores(i, 7) = 453
      If playerData$(1, 7 + i) = "Boost Array" then powerCores(i, 7) = 454
      If playerData$(1, 7 + i) = "Underclocker Drive" then powerCores(i, 7) = 455
      If playerData$(1, 7 + i) = "Nuclear Pulse" then powerCores(i, 7) = 456
      If playerData$(1, 7 + i) = "Bounty Exchange" then powerCores(i, 7) = 457
      If playerData$(1, 7 + i) = "Nova Shielding" then powerCores(i, 7) = 458
      If playerData$(1, 7 + i) = "Diffraction Cannon" then powerCores(i, 7) = 459
      If playerData$(1, 7 + i) = "Terravolt Bomb" then powerCores(i, 7) = 460
      If playerData$(1, 7 + i) = "Evasion Cloak" then powerCores(i, 7) = 461
      If playerData$(1, 7 + i) = "Black Hole Blast" then powerCores(i, 7) = 462
   Next i

   `Checks power core array of empty slots.
   For i = 1 to 4
      If powerCores(i, 7) < 451 or powerCores(i, 7) > 462
         powerCores(i, 7) = 451
      EndIf
   Next i

   `Checks power core array for duplicates.
   For i = 1 to 4
      For l = 1 to 4
         If powerCores(i, 7) = powerCores(l, 7) and i <> l
            powerCores(l, 7) = powerCores(l, 7) + 1
            If powerCores(l, 7) > 462 then powerCores(l, 7) = 451
         EndIf
      Next l
   Next i

   `Re-sets up the power core array after the duplicate check.
   For i = 1 to 4
      If powerCores(i, 7) = 451 then playerData$(1, 7 + i) = "Flight Kit"
      If powerCores(i, 7) = 452 then playerData$(1, 7 + i) = "Power Pack"
      If powerCores(i, 7) = 453 then playerData$(1, 7 + i) = "Ion Trigger"
      If powerCores(i, 7) = 454 then playerData$(1, 7 + i) = "Boost Array"
      If powerCores(i, 7) = 455 then playerData$(1, 7 + i) = "Underclocker Drive"
      If powerCores(i, 7) = 456 then playerData$(1, 7 + i) = "Nuclear Pulse"
      If powerCores(i, 7) = 457 then playerData$(1, 7 + i) = "Bounty Exchange"
      If powerCores(i, 7) = 458 then playerData$(1, 7 + i) = "Nova Shielding"
      If powerCores(i, 7) = 459 then playerData$(1, 7 + i) = "Diffraction Cannon"
      If powerCores(i, 7) = 460 then playerData$(1, 7 + i) = "Terravolt Bomb"
      If powerCores(i, 7) = 461 then playerData$(1, 7 + i) = "Evasion Cloak"
      If powerCores(i, 7) = 462 then playerData$(1, 7 + i) = "Black Hole Blast"
   Next i

   `Resets enemy array.
   GoSub EnemyFormationReset

   `Resets boss array.
   For i = 1 to 5
      bossData(i, 1) = 0
      bossData(i, 2) = 0
      bossData(i, 3) = 0
      bossData(i, 4) = 0
      bossData(i, 5) = 0
      bossData(i, 6) = 0
      bossData(i, 7) = 0
      bossData(i, 8) = 0
      bossData(i, 9) = 100 + i
      bossData(i, 10) = 0
      bossData(i, 11) = 0
      bossData(i, 12) = 0
   Next i

   `Reset enemy projectile array.
   For i = 1 to 20
      enemyProjectiles(i, 1) = 0
      enemyProjectiles(i, 2) = 0
      enemyProjectiles(i, 3) = 768
      enemyProjectiles(i, 4) = 0
      enemyProjectiles(i, 5) = 0
   Next i

   `Moving all sprites off the screen.
   GoSub RemoveAllSprites

Return

ResetMissionGame:
`Used to reset all variables related to the endless game mode.

   `Removes mouse from the screen.
   mouse = 0

   `Resets other game variables.
   gameMode$ = "Single"
   gameStopped = 0
   gamePaused = 0
   invincibility = 0
   soundPlayed = 0
   laserNumber = 1
   laserStop = 0
   endGame = 0
   playerSpeedModifier = 1
   pLaserSpeedModifier = 1
   enemySpeedModifier = 1
   eLaserSpeedModifier = 1
   pointModifier = 1
   powerChance = 0
   powerCoreActive$ = ""
   enemyGroup# = 1
   enemyFormation = 0
   autoFire = 0
   endlessDifficulty# = 1.00
   If playerSaves$(save, 5) = "Easy"
      missionDifficulty# = 0.50
   Else
      If playerSaves$(save, 5) = "Normal"
         missionDifficulty# = 1.00
      Else
         missionDifficulty# = 2.00
      EndIf
   EndIf
   powerTimeCurrent = 0
   powerTimeMax = 1
   missionEnd = 0
   bossForm = 0
   bossTimer = 0
   bossProjectile = 1
   bossLaserRecharge = 0
   bossesKilled = 0
   bossMusic = 0
   newHighScore = 0

   `Sets background for specific missions.
   If missionNumber <> 16
      setBackground = missionNumber + 200
   Else
      setBackground = 213
   EndIf

   `Resets power core array.
   For i = 1 to 5
      powerCores(i,1) = 0
      powerCores(i,2) = 0
      powerCores(i,3) = 0
      powerCores(i,4) = 0
      powerCores(i,5) = 0
      powerCores(i,6) = 0
      powerCores(i,7) = 0
   Next i

   `Adds any stored power cores from the suspended file.
   If playerSaves$(save, 7) = "1"
      powerCores(1, 1) = Val(playerSaves$(save, 21))
      powerCores(2, 1) = Val(playerSaves$(save, 22))
      powerCores(3, 1) = Val(playerSaves$(save, 23))
      powerCores(4, 1) = Val(playerSaves$(save, 24))
   EndIf

   `Reset the data in the player array, or adds data from
   `suspended file to array.
   If playerSaves$(save, 7) = "0"
      playerData$(1,1) = "464"
      playerData$(1,2) = "348"
      playerData$(1,5) = "100"
      playerData$(1,6) = playerAccount$(9)
      playerData$(1,7) = playerAccount$(10)
      playerData$(1,8) = playerAccount$(11)
      playerData$(1,9) = playerAccount$(12)
      playerData$(1,10) = playerAccount$(13)
      playerData$(1,11) = playerAccount$(14)
      playerData$(1,13) = "0"
      playerData$(1,14) = "0"
      missionStage = 0
   Else
      playerData$(1,1) = playerSaves$(save, 8)
      playerData$(1,2) = playerSaves$(save, 9)
      playerData$(1,5) = playerSaves$(save, 10)
      playerData$(1,6) = playerSaves$(save, 11)
      playerData$(1,7) = playerSaves$(save, 12)
      playerData$(1,8) = playerSaves$(save, 13)
      playerData$(1,9) = playerSaves$(save, 14)
      playerData$(1,10) = playerSaves$(save, 15)
      playerData$(1,11) = playerSaves$(save, 16)
      playerData$(1,13) = playerSaves$(save, 17)
      playerData$(1,14) = playerSaves$(save, 19)
      missionStage = Val(playerSaves$(save, 18)) - 1
   EndIf
   playerData$(1,12) = "0"
   playerData$(1,16) = "1"
   playerData$(1,17) = fileOptions$(2, 1)

   If playerSaves$(save, 7) = "0"
      GoSub AllocateShipEndless
   Else
      GoSub AllocateShipMission
   EndIf

   `Resets all projectiles and their locations.
   For i = 1 to 32
      playerProjectiles(i, 1) = 0
      playerProjectiles(i, 2) = 1024
      playerProjectiles(i, 3) = 0
      playerProjectiles(i, 4) = 0
      playerProjectiles(i, 5) = 0
      playerProjectiles(i, 6) = 0
      playerProjectiles(i, 7) = 0
   Next i

   `Sets up the power core array.
   If playerSaves$(save, 7) = "1"
      For i = 1 to 4
         If playerSaves$(save, 12 + i) = "Flight Kit" then powerCores(i, 7) = 451
         If playerSaves$(save, 12 + i) = "Power Pack" then powerCores(i, 7) = 452
         If playerSaves$(save, 12 + i) = "Ion Trigger" then powerCores(i, 7) = 453
         If playerSaves$(save, 12 + i) = "Boost Array" then powerCores(i, 7) = 454
         If playerSaves$(save, 12 + i) = "Underclocker Drive" then powerCores(i, 7) = 455
         If playerSaves$(save, 12 + i) = "Nuclear Pulse" then powerCores(i, 7) = 456
         If playerSaves$(save, 12 + i) = "Bounty Exchange" then powerCores(i, 7) = 457
         If playerSaves$(save, 12 + i) = "Nova Shielding" then powerCores(i, 7) = 458
         If playerSaves$(save, 12 + i) = "Diffraction Cannon" then powerCores(i, 7) = 459
         If playerSaves$(save, 12 + i) = "Terravolt Bomb" then powerCores(i, 7) = 460
         If playerSaves$(save, 12 + i) = "Evasion Cloak" then powerCores(i, 7) = 461
         If playerSaves$(save, 12 + i) = "Black Hole Blast" then powerCores(i, 7) = 462
      Next i
   Else
      For i = 1 to 4
         If playerData$(1, 7 + i) = "Flight Kit" then powerCores(i, 7) = 451
         If playerData$(1, 7 + i) = "Power Pack" then powerCores(i, 7) = 452
         If playerData$(1, 7 + i) = "Ion Trigger" then powerCores(i, 7) = 453
         If playerData$(1, 7 + i) = "Boost Array" then powerCores(i, 7) = 454
         If playerData$(1, 7 + i) = "Underclocker Drive" then powerCores(i, 7) = 455
         If playerData$(1, 7 + i) = "Nuclear Pulse" then powerCores(i, 7) = 456
         If playerData$(1, 7 + i) = "Bounty Exchange" then powerCores(i, 7) = 457
         If playerData$(1, 7 + i) = "Nova Shielding" then powerCores(i, 7) = 458
         If playerData$(1, 7 + i) = "Diffraction Cannon" then powerCores(i, 7) = 459
         If playerData$(1, 7 + i) = "Terravolt Bomb" then powerCores(i, 7) = 460
         If playerData$(1, 7 + i) = "Evasion Cloak" then powerCores(i, 7) = 461
         If playerData$(1, 7 + i) = "Black Hole Blast" then powerCores(i, 7) = 462
      Next i

      `Checks power core array of empty slots.
      For i = 1 to 4
         If powerCores(i, 7) < 451 or powerCores(i, 7) > 462
            powerCores(i, 7) = 451
         EndIf
      Next i

      `Checks power core array for duplicates.
      For i = 1 to 4
         For l = 1 to 4
            If powerCores(i, 7) = powerCores(l, 7) and i <> l
               powerCores(l, 7) = powerCores(l, 7) + 1
               If powerCores(l, 7) > 462 then powerCores(l, 7) = 451
            EndIf
         Next l
      Next i

      `Re-sets up the power core array after the duplicate check.
      For i = 1 to 4
         If powerCores(i, 7) = 451 then playerData$(1, 7 + i) = "Flight Kit"
         If powerCores(i, 7) = 452 then playerData$(1, 7 + i) = "Power Pack"
         If powerCores(i, 7) = 453 then playerData$(1, 7 + i) = "Ion Trigger"
         If powerCores(i, 7) = 454 then playerData$(1, 7 + i) = "Boost Array"
         If powerCores(i, 7) = 455 then playerData$(1, 7 + i) = "Underclocker Drive"
         If powerCores(i, 7) = 456 then playerData$(1, 7 + i) = "Nuclear Pulse"
         If powerCores(i, 7) = 457 then playerData$(1, 7 + i) = "Bounty Exchange"
         If powerCores(i, 7) = 458 then playerData$(1, 7 + i) = "Nova Shielding"
         If powerCores(i, 7) = 459 then playerData$(1, 7 + i) = "Diffraction Cannon"
         If powerCores(i, 7) = 460 then playerData$(1, 7 + i) = "Terravolt Bomb"
         If powerCores(i, 7) = 461 then playerData$(1, 7 + i) = "Evasion Cloak"
         If powerCores(i, 7) = 462 then playerData$(1, 7 + i) = "Black Hole Blast"
      Next i

   EndIf
   powerCores(5, 7) = 439

   `Resets enemy array.
   GoSub EnemyFormationReset

   `Resets boss array.
   For i = 1 to 5
      bossData(i, 1) = 0
      bossData(i, 2) = 0
      bossData(i, 3) = 0
      bossData(i, 4) = 0
      bossData(i, 5) = 0
      bossData(i, 6) = 0
      bossData(i, 7) = 0
      bossData(i, 8) = 0
      bossData(i, 9) = 100 + i
      bossData(i, 10) = 0
      bossData(i, 11) = 0
      bossData(i, 12) = 0
   Next i

   `Reset enemy projectile array.
   For i = 1 to 20
      enemyProjectiles(i, 1) = 0
      enemyProjectiles(i, 2) = 0
      enemyProjectiles(i, 3) = 768
      enemyProjectiles(i, 4) = 0
      enemyProjectiles(i, 5) = 0
   Next i

   `Moving all sprites off the screen.
   GoSub RemoveAllSprites

Return

ResetCooperateGame:
`Used to reset all the variables used in the cooperative game.

   `Removes mouse from the screen.
   mouse = 0

   `Resets other game variables.
   gameMode$ = "Multi"
   gameStopped = 0
   gamePaused = 0
   invincibility = 0
   soundPlayed = 0
   laserNumber = 1
   laserStop = 0
   endGame = 0
   playerSpeedModifier = 1
   pLaserSpeedModifier = 1
   enemySpeedModifier = 1
   eLaserSpeedModifier = 1
   pointModifier = 1
   powerChance = 0
   powerCoreActive$ = ""
   enemyGroup# = 1
   enemyFormation = 0
   autoFire = 0
   disappear = 0
   disappear2 = 0
   endlessDifficulty# = 1.00
   If victoryCondition$ = "Easy"
      missionDifficulty# = 0.50
   Else
      If victoryCondition$ = "Normal"
         missionDifficulty# = 1.00
      Else
         missionDifficulty# = 2.00
      EndIf
   EndIf
   powerTimeCurrent = 0
   powerTimeMax = 1
   missionEnd = 0
   bossForm = 0
   bossTimer = 0
   bossProjectile = 1
   bossLaserRecharge = 0
   bossesKilled = 0
   bossMusic = 0
   coopLives = 2
   player1life = 1
   player2life = 1
   player1Deaths = 0
   player2Deaths = 0
   enemyKiller = 1
   newHighScore = 0

   `Sets background for specific missions.
   setBackground = missionNumber + 200

   `Resets power core array.
   For i = 1 to 5
      powerCores(i,1) = 0
      powerCores(i,2) = 0
      powerCores(i,3) = 0
      powerCores(i,4) = 0
      powerCores(i,5) = 0
      powerCores(i,6) = 0
      powerCores(i,7) = 0
   Next i

   `Reset player array.
   playerData$(1,1) = "200"
   playerData$(1,2) = "178"
   playerData$(2,1) = "200"
   playerData$(2,2) = "596"
   For i = 1 to 2
      playerData$(i,5) = "100"
      playerData$(i,8) = playerAccount$(11)
      playerData$(i,9) = playerAccount$(12)
      playerData$(i,10) = playerAccount$(13)
      playerData$(i,11) = playerAccount$(14)
      playerData$(i,12) = "0"
      playerData$(i,13) = "0"
      playerData$(i,14) = "0"
      playerData$(i,15) = "0"
      playerData$(i,18) = "1"
      playerData$(i,19) = "0"
      playerData$(i,20) = "0"
      playerData$(i,21) = "0"
      missionStage = 0
   Next i

   `Calculates the speeds and damages of the players' ships.
   For playerNumber = 1 to playerTotal
      GoSub AllocateShipEndless
   Next playerNumber

   `Resets all projectiles and their locations.
   For i = 1 to 32
      playerProjectiles(i, 1) = 0
      playerProjectiles(i, 2) = 1024
      playerProjectiles(i, 3) = 0
      playerProjectiles(i, 4) = 0
      playerProjectiles(i, 5) = 0
      playerProjectiles(i, 6) = 0
      playerProjectiles(i, 7) = 0
   Next i

   `Sets up the power core array.
   For i = 1 to 4
      If playerData$(1, 7 + i) = "Flight Kit" then powerCores(i, 7) = 451
      If playerData$(1, 7 + i) = "Power Pack" then powerCores(i, 7) = 452
      If playerData$(1, 7 + i) = "Ion Trigger" then powerCores(i, 7) = 453
      If playerData$(1, 7 + i) = "Boost Array" then powerCores(i, 7) = 454
      If playerData$(1, 7 + i) = "Underclocker Drive" then powerCores(i, 7) = 455
      If playerData$(1, 7 + i) = "Nuclear Pulse" then powerCores(i, 7) = 456
      If playerData$(1, 7 + i) = "Bounty Exchange" then powerCores(i, 7) = 457
      If playerData$(1, 7 + i) = "Nova Shielding" then powerCores(i, 7) = 458
      If playerData$(1, 7 + i) = "Diffraction Cannon" then powerCores(i, 7) = 459
      If playerData$(1, 7 + i) = "Terravolt Bomb" then powerCores(i, 7) = 460
      If playerData$(1, 7 + i) = "Evasion Cloak" then powerCores(i, 7) = 461
      If playerData$(1, 7 + i) = "Black Hole Blast" then powerCores(i, 7) = 462
   Next i

   `Checks power core array of empty slots.
   For i = 1 to 4
      If powerCores(i, 7) < 451 or powerCores(i, 7) > 462
         powerCores(i, 7) = 451
      EndIf
   Next i

   `Checks power core array for duplicates.
   For i = 1 to 4
      For l = 1 to 4
         If powerCores(i, 7) = powerCores(l, 7) and i <> l
            powerCores(l, 7) = powerCores(l, 7) + 1
            If powerCores(l, 7) > 462 then powerCores(l, 7) = 451
         EndIf
      Next l
   Next i

   `Re-sets up the power core array after the duplicate check.
   For i = 1 to 4
      If powerCores(i, 7) = 451 then playerData$(1, 7 + i) = "Flight Kit"
      If powerCores(i, 7) = 452 then playerData$(1, 7 + i) = "Power Pack"
      If powerCores(i, 7) = 453 then playerData$(1, 7 + i) = "Ion Trigger"
      If powerCores(i, 7) = 454 then playerData$(1, 7 + i) = "Boost Array"
      If powerCores(i, 7) = 455 then playerData$(1, 7 + i) = "Underclocker Drive"
      If powerCores(i, 7) = 456 then playerData$(1, 7 + i) = "Nuclear Pulse"
      If powerCores(i, 7) = 457 then playerData$(1, 7 + i) = "Bounty Exchange"
      If powerCores(i, 7) = 458 then playerData$(1, 7 + i) = "Nova Shielding"
      If powerCores(i, 7) = 459 then playerData$(1, 7 + i) = "Diffraction Cannon"
      If powerCores(i, 7) = 460 then playerData$(1, 7 + i) = "Terravolt Bomb"
      If powerCores(i, 7) = 461 then playerData$(1, 7 + i) = "Evasion Cloak"
      If powerCores(i, 7) = 462 then playerData$(1, 7 + i) = "Black Hole Blast"
   Next i

   powerCores(5, 7) = 439

   `Resets enemy array.
   GoSub EnemyFormationReset

   `Resets boss array.
   For i = 1 to 5
      bossData(i, 1) = 0
      bossData(i, 2) = 0
      bossData(i, 3) = 0
      bossData(i, 4) = 0
      bossData(i, 5) = 0
      bossData(i, 6) = 0
      bossData(i, 7) = 0
      bossData(i, 8) = 0
      bossData(i, 9) = 100 + i
      bossData(i, 10) = 0
      bossData(i, 11) = 0
      bossData(i, 12) = 0
   Next i

   `Reset enemy projectile array.
   For i = 1 to 20
      enemyProjectiles(i, 1) = 0
      enemyProjectiles(i, 2) = 0
      enemyProjectiles(i, 3) = 768
      enemyProjectiles(i, 4) = 0
      enemyProjectiles(i, 5) = 0
   Next i

   `Moving all sprites off the screen.
   GoSub RemoveAllSprites

   `Unmirrors corresponing player and laser sprites for player 2.
   If sprite mirrored(2) = 1 then Mirror Sprite 2

   For i = 19 to 26
      If sprite mirrored(i) = 1 then Mirror Sprite i
   Next i

Return

ResetCompeteGame:
`Used to reset all the variables used by the competitive game.

   `Removes mouse from the screen.
   mouse = 0

   `Resets other game variables.
   gameMode$ = "Multi"
   gameStopped = 0
   gamePaused = 0
   invincibility = 0
   soundPlayed = 0
   endGame = 0
   missionEnd = 0

   `Sets a random background.
   setBackground = rnd(19) + 201

   `Reset data in the player array, such as health, coordinates, etc.
   playerData$(1,1) = "200"
   playerData$(1,2) = "178"
   playerData$(2,1) = "728"
   playerData$(2,2) = "178"
   playerData$(3,1) = "200"
   playerData$(3,2) = "596"
   playerData$(4,1) = "728"
   playerData$(4,2) = "596"

   For i = 1 to 4
      playerData$(i,5) = "100"
      playerData$(i,10) = "1"
      playerData$(i,11) = "0"
      playerData$(i,12) = "0"
      playerData$(i,13) = "0"
      playerData$(i,14) = "0"
      playerData$(i,15) = "0"
      playerData$(i,18) = "1"
      playerData$(i,19) = "0"
      playerData$(i,20) = "0"
      playerData$(i,21) = "0"
   Next i

   For playerNumber = 1 to playerTotal
      GoSub AllocateShipEndless
   Next playerNumber

   `Resets all projectiles and their locations.
   For i = 1 to 32
      playerProjectiles(i, 1) = 0
      playerProjectiles(i, 2) = 1024
      playerProjectiles(i, 3) = 0
      playerProjectiles(i, 4) = 0
      playerProjectiles(i, 5) = 0
      playerProjectiles(i, 6) = 0
      playerProjectiles(i, 7) = 0
   Next i

   `Moving all sprites off the screen.
   GoSub RemoveAllSprites

   `Mirrors corresponing player and laser sprites for Team 2.
   If sprite mirrored(2) = 0 then Mirror Sprite 2
   If sprite mirrored(4) = 0 then Mirror Sprite 4

   For i = 19 to 26
      If sprite mirrored(i) = 0 then Mirror Sprite i
   Next i

   For i = 35 to 42
      If sprite mirrored(i) = 0 then Mirror Sprite i
   Next i

   `Sets up the victory condition for the game.
   If victoryCondition$ = "Kills"
      team1Score = 0
      team2Score = 0
   Else
      team1Score = victoryNumber
      team2Score = victoryNumber
   EndIf

Return

DisplaySingleGUI:
`Displays all of the relevant player data and objects on the screen in endless and mission mode.

   `Displays score, background and health.
   Paste image setBackground, 0, 0
   Paste image 701, 0, 0
   ink RGB(0,0,0), RGB(0,0,0)
   Set text size 40
   If Val(playerData$(1,5)) >= 100
      Text 560, 10, playerData$(1,5)
   Else
      If Val(playerData$(1,5)) >= 10
         Text 590, 10, playerData$(1,5)
      Else
         Text 620, 10, playerData$(1,5)
      EndIf
   EndIf

   `Display player's lives.
   If missionNumber > 0
      Set text size 16
      Paste image 714, 300, 9
      Center text 340, 15, "Lives:"
      Center text 340, 42, playerSaves$(save, 3)
   EndIf

   `Range validation for score, kills and deaths.
   If Val(playerData$(1,13)) < 0 then playerData$(1,13) = "0"
   If Val(playerData$(1,14)) < 0 then playerData$(1,14) = "0"
   If enemyGroup# < 0 then enemyGroup# = 0
   If Val(playerData$(1,13)) > 99999999 then playerData$(1,13) = "99999999"
   If Val(playerData$(1,14)) > 9999 then playerData$(1,14) = "9999"
   If enemyGroup# > 1000 then enemyGroup# = 1000

   `Displays player's kills and score, and the enemy wave number.
   Set text size 12
   ink RGB(0,0,0), RGB(0,0,0)
   If missionNumber = 0
      Text 10, 8, "Score:"
      Text 70, 8, playerData$(1,13)
      Text 10, 33, "Kills:"
      Text 70, 33, playerData$(1,14)
      Text 10, 58, "Wave:"
      Text 70, 58, STR$(enemyGroup# - 1)
   Else
      Text 10, 8, "Score:"
      Text 70, 8, playerData$(1,13)
      Text 10, 33, "Kills:"
      Text 70, 33, playerData$(1,14)
      Text 10, 58, "Wave:"
      Text 70, 58, STR$(missionStage)
   EndIf

   `Displays the player's health meter.
   If Val(playerData$(1,5)) >= 91
      paste image 712, 649, 20
   Else
      If Val(playerData$(1,5)) >= 81
         paste image 711, 649, 20
      Else
         If Val(playerData$(1,5)) >= 71
            paste image 710, 649, 20
         Else
            If Val(playerData$(1,5)) >= 61
               paste image 709, 649, 20
            Else
               If Val(playerData$(1,5)) >= 51
                  paste image 708, 649, 20
               Else
                  If Val(playerData$(1,5)) >= 41
                     paste image 707, 649, 20
                  Else
                     If Val(playerData$(1,5)) >= 31
                        paste image 706, 649, 20
                     Else
                        If Val(playerData$(1,5)) >= 21
                           paste image 705, 649, 20
                        Else
                           If Val(playerData$(1,5)) >= 11
                              paste image 704, 649, 20
                           Else
                              If Val(playerData$(1,5)) >= 1
                                 paste image 703, 649, 20
                              Else
                                 paste image 702, 649, 20
                              EndIf
                           EndIf
                        EndIf
                     EndIf
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf
   EndIf

   `Marks the player as defeated if their health reaches zero.
   If Val(playerData$(1,5)) <= 0 then playerData$(1,15) = "1"

   `Used to display power core images and counts.
   Set text size 10
   For i = 1 to 4
      If powerCores(i, 1) >= 5
         powerCores(i, 1) = 5
         ink RGB(255,50,0), RGB(255,255,255)
      Else
         ink RGB(0,0,0), RGB(0,0,0)
      EndIf
      Paste image 717, 429 + (30 * (i - 1)), 9
      If powerCores(i, 2) > 0 then Paste image 716, 429 + (30 * (i - 1)), 9
      If powerCores(i, 3) > 0 then Paste image 715, 429 + (30 * (i - 1)), 9
      Paste image powerCores(i, 7) + 20, 430 + (30 * (i - 1)), 10, 1
      Text 435 + (30 * (i - 1)), 40, STR$(powerCores(i, 1))
   Next i

   `Displays power core usage timer bar.
   ink RGB(0,200,0), RGB(0,200,0)
   If powerTimeMax <> 0 and powerTimeCurrent > 0 then BOX 429, 62, Int(429 + ((116 * powerTimeCurrent )/ powerTimeMax)), 72
   If powerTimeCurrent > 0 and gameStopped = 0 and gamePaused = 0 then DEC powerTimeCurrent

   `Displays boss health.
   If bossForm > 0
      Set text size 18
      ink RGB(255,255,255), RGB(0,0,0)
      bossHealthTotal = bossData(1,5) + bossData(2,5) + bossData(3,5) + bossData(4,5) + bossData(5,5)
      Text 10, 740, "Boss Health: " + STR$(bossHealthTotal)
   EndIf

Return

DisplayCoopGUI:
`Displays all of the relevant player data and objects on the screen in cooperative mode.

   `Displays score, background and health.
   Paste image setBackground, 0, 0
   Paste image 701, 0, 0
   Set text size 36
   ink RGB(0,0,255), RGB(0,0,0)
   If Val(playerData$(1, 5)) < 0 then playerData$(1, 5) = "0"
   Center Text 640, 5, playerData$(1, 5)
   ink RGB(255,0,0), RGB(0,0,0)
   If Val(playerData$(2, 5)) < 0 then playerData$(2, 5) = "0"
   Center Text 768, 5, playerData$(2, 5)

   `Display player's lives.
   Set text size 16
   Paste image 714, 300, 9
   ink RGB(0,0,0), RGB(0,0,0)
   Center text 340, 15, "Lives:"
   Center text 340, 42, STR$(coopLives)

   `Displays player's kills and score, and the enemy wave number.
   Set text size 12
   If Val(playerData$(1,13)) < 0 then playerData$(1,13) = "0"
   If Val(playerData$(2,13)) < 0 then playerData$(2,13) = "0"
   Text 10, 8, "Score:"
   Text 70, 8, STR$(Val(playerData$(1,13)) + Val(playerData$(2,13)))
   Text 10, 33, "Kills:"
   Text 70, 33, STR$(Val(playerData$(1,14)) + Val(playerData$(2,14)))
   Text 10, 58, "Wave:"
   Text 70, 58, STR$(missionStage)

   `Used to display power core images and counts.
   Set text size 10
   For i = 1 to 4
      If powerCores(i, 1) >= 5
         powerCores(i, 1) = 5
         ink RGB(255,50,0), RGB(255,255,255)
      Else
         ink RGB(0,0,0), RGB(0,0,0)
      EndIf
      Paste image 717, 429 + (30 * (i - 1)), 9
      If powerCores(i, 2) > 0 then Paste image 716, 429 + (30 * (i - 1)), 9
      If powerCores(i, 3) > 0 then Paste image 715, 429 + (30 * (i - 1)), 9
      Paste image powerCores(i, 7) + 20, 430 + (30 * (i - 1)), 10, 1
      Text 435 + (30 * (i - 1)), 40, STR$(powerCores(i, 1))
   Next i

   `Displays power core usage timer bar.
   ink RGB(0,200,0), RGB(0,200,0)
   If powerTimeMax <> 0 and powerTimeCurrent > 0 then BOX 429, 62, Int(429 + ((116 * powerTimeCurrent )/ powerTimeMax)), 72
   If powerTimeCurrent > 0 and gameStopped = 0 and gamePaused = 0 then DEC powerTimeCurrent

   `Displays boss health.
   If bossForm > 0
      Set text size 18
      ink RGB(255,255,255), RGB(0,0,0)
      bossHealthTotal = bossData(1,5) + bossData(2,5) + bossData(3,5) + bossData(4,5) + bossData(5,5)
      Text 10, 740, "Boss Health: " + STR$(bossHealthTotal)
   EndIf

Return

DisplayCompeteGUI:
`Displays all of the relevant player data and objects on the screen in endless mode.

   `Displays score, background and health.
   Paste image setBackground, 0, 0
   Paste image 718, 0, 0
   ink RGB(0,0,0), RGB(0,0,0)

   `Displays all active players' health.
   If playerData$(1, 15) = "0" and playerData$(1, 16) = "1"
      Set text size 12
      Center Text 128, 5, "Player 1"
      Set text size 36
      Center Text 128, 15, playerData$(1, 5)
   EndIf
   If playerData$(2, 15) = "0" and playerData$(2, 16) = "1"
      Set text size 12
      Center Text 768, 5, "Player 2"
      Set text size 36
      Center Text 768, 15, playerData$(2, 5)
   EndIf
   If playerData$(3, 15) = "0" and playerData$(3, 16) = "1"
      Set text size 12
      Center Text 256, 5, "Player 3"
      Set text size 36
      Center Text 256, 15, playerData$(3, 5)
   EndIf
   If playerData$(4, 15) = "0" and playerData$(4, 16) = "1"
      Set text size 12
      Center Text 896, 5, "Player 4"
      Set text size 36
      Center Text 896, 15, playerData$(4, 5)
   EndIf

   `Displays team kill/life counter.
   Set text size 36
   Center Text 384, 15, STR$(team1Score)
   Center Text 640, 15, STR$(team2Score)
   Set text size 12
   If victoryCondition$ = "Kills"
      Center Text 384, 5, "Team Kills"
      Center Text 640, 5, "Team Kills"
   Else
      Center Text 384, 5, "Team Lives"
      Center Text 640, 5, "Team Lives"
   EndIf

Return

MovementHandling:
`Used to handle the player's movement across all modes. Will look
`for different key presses from different keys depending on the player's chosen
`control scheme.

   positionChange = 0

   If playerData$(playerNumber, 17) = "WASD"

      If keystate(17) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) - positionChange)
      EndIf
      If keystate(31) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) + positionChange)
      EndIf
      If keystate(30) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - positionChange)
      EndIf
      If keystate(32) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + positionChange)
      EndIf
      playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - 1)
      If missionNumber = 0 and gameMode$ = "Multi" and (playerNumber = 2 or playerNumber = 4)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + 2)
      EndIf

   EndIf
   If playerData$(playerNumber, 17) = "Arrow Keys"

      If upkey() = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) - positionChange)
      EndIf
      If downkey() = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) + positionChange)
      EndIf
      If leftkey() = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - positionChange)
      EndIf
      If rightkey() = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + positionChange)
      EndIf
      playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - 1)
      If missionNumber = 0 and gameMode$ = "Multi" and (playerNumber = 2 or playerNumber = 4)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + 2)
      EndIf

   EndIf
   If playerData$(playerNumber, 17) = "IJKL"

      If keystate(23) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) - positionChange)
      EndIf
      If keystate(37) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) + positionChange)
      EndIf
      If keystate(36) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - positionChange)
      EndIf
      If keystate(38) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + positionChange)
      EndIf
      playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - 1)
      If missionNumber = 0 and gameMode$ = "Multi" and (playerNumber = 2 or playerNumber = 4)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + 2)
      EndIf

   EndIf
   If playerData$(playerNumber, 17) = "Numpad"

      If keystate(72) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) - positionChange)
      EndIf
      If keystate(76) = 1
         positionChange = (Val(playerData$(playerNumber,4)) * playerSpeedModifier)
         playerData$(playerNumber,2) = STR$(Val(playerData$(playerNumber,2)) + positionChange)
      EndIf
      If keystate(75) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - positionChange)
      EndIf
      If keystate(77) = 1
         positionChange = (Val(playerData$(playerNumber,3)) * playerSpeedModifier)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + positionChange)
      EndIf
      playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) - 1)
      If missionNumber = 0 and gameMode$ = "Multi" and (playerNumber = 2 or playerNumber = 4)
         playerData$(playerNumber,1) = STR$(Val(playerData$(playerNumber,1)) + 2)
      EndIf

   EndIf

Return

BoundaryHandlingSingleplayer:
`Used to limit the player to certain areas of the screen in singleplayer and cooperative.

   If Val(playerData$(playerNumber,2)) < 78 then playerData$(playerNumber,2) = STR$(78)
   If Val(playerData$(playerNumber,1)) > 928 then playerData$(playerNumber,1) = STR$(928)
   If Val(playerData$(playerNumber,1)) < 0 then playerData$(playerNumber,1) = STR$(0)
   If Val(playerData$(playerNumber,2)) > 696 then playerData$(playerNumber,2) = STR$(696)

Return

BoundaryHandlingCompete:
`Used to limit players to selected areas of the screen in competitive multiplayer.

   If playerNumber = 1 or playerNumber = 3
      If Val(playerData$(playerNumber,2)) < 78 then playerData$(playerNumber,2) = STR$(78)
      If Val(playerData$(playerNumber,1)) > 416 then playerData$(playerNumber,1) = STR$(416)
      If Val(playerData$(playerNumber,1)) < 0 then playerData$(playerNumber,1) = STR$(0)
      If Val(playerData$(playerNumber,2)) > 696 then playerData$(playerNumber,2) = STR$(696)
   Else
      If Val(playerData$(playerNumber,2)) < 78 then playerData$(playerNumber,2) = STR$(78)
      If Val(playerData$(playerNumber,1)) > 928 then playerData$(playerNumber,1) = STR$(928)
      If Val(playerData$(playerNumber,1)) < 512 then playerData$(playerNumber,1) = STR$(512)
      If Val(playerData$(playerNumber,2)) > 696 then playerData$(playerNumber,2) = STR$(696)
   EndIf

Return

ShipPlacementSingleplayer:
`Places the player in the correct place in singleplayer.

   `Determines player image number and additional shielding based on damage taken and
   `power cores used.
   If disappear = 0

      `Determies if the shield shoudl be displayed over the ship.
      If powerCoreActive$ = "Evasion Cloak" or powerCoreActive$ = "Nova Shielding"
         `Displays grey shiled while the Evasion Cloak is active.
         If powerCoreActive$ = "Evasion Cloak"
            Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 438
         `Displays red shield while the Nova Shielding is active.
         Else
            Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 437
         EndIf
      `Moves shield off-screen if it is not in use.
      Else
         Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361
      EndIf

      `Displays the player's ship
      spriteX = Val(playerData$(playerNumber,1))
      spriteY = Val(playerData$(playerNumber,2))
      Sprite SPRITEPLAYER + playerNumber - 1, spriteX, spriteY, Val(playerData$(playerNumber,12))

   Else

      `Moves the shield and player offscreen if disappear = 1.
      Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361
      Sprite SPRITEPLAYER + playerNumber - 1, 0, 0, 361

   EndIf

Return

ShipPlacementCompete:
`Places each player in the correct position in the competitive mode.

   If playerData$(playerNumber, 8) = "0" and playerData$(playerNumber,16) = "1" and playerData$(playerNumber,15) = "0"
      `Displays the player onscreen at their assigned coordinates.
      spriteX = Val(playerData$(playerNumber,1))
      spriteY = Val(playerData$(playerNumber,2))
      Sprite SPRITEPLAYER + playerNumber - 1, spriteX, spriteY, Val(playerData$(playerNumber,12))
   Else
      `Moves the player offscreen if the player is told to disappear by the invincibility routine.
      spriteX = Val(playerData$(playerNumber,1))
      spriteY = Val(playerData$(playerNumber,2))
      Sprite SPRITEPLAYER + playerNumber - 1, spriteX, spriteY, 361
   EndIf

Return

ShipPlacementCoop:
`Places the player in the correct place in the cooperative mode.

   `Runs code for player 1.
   If playerNumber = 1

      If disappear = 0

         `Determines if a shield needs to be displayed over the player.
         If powerCoreActive$ = "Evasion Cloak" or powerCoreActive$ = "Nova Shielding"
            If powerCoreActive$ = "Evasion Cloak"
               Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 438
            Else
               Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 437
            EndIf
         Else
            Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361
         EndIf

         `Display's the player's ship.
         spriteX = Val(playerData$(playerNumber,1))
         spriteY = Val(playerData$(playerNumber,2))
         Sprite SPRITEPLAYER + playerNumber - 1, spriteX, spriteY, Val(playerData$(playerNumber,12))

      Else

         `Hides the player and their shield off screen.
         Sprite SPRITEPLAYER + playerNumber - 1, 0, 0, 361
         Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361

      EndIf
   EndIf

   `Runs code for player 2.
   If playerNumber = 2
      If disappear2 = 0

         `Determines if a shield needs to be displayed over the player.
         If powerCoreActive$ = "Evasion Cloak" or powerCoreActive$ = "Nova Shielding"
            If powerCoreActive$ = "Evasion Cloak"
               Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 438
            Else
               Sprite SPRITESHIELD + playerNumber - 1, Val(playerData$(playerNumber,1)), Val(playerData$(playerNumber,2)), 437
            EndIf
         Else
            Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361
         EndIf

         `Display's the player's ship.
         spriteX = Val(playerData$(playerNumber,1))
         spriteY = Val(playerData$(playerNumber,2))
         Sprite SPRITEPLAYER + playerNumber - 1, spriteX, spriteY, Val(playerData$(playerNumber,12))

      Else

         `Hides the player and their shield off screen.
         Sprite SPRITEPLAYER + playerNumber - 1, 0, 0, 361
         Sprite SPRITESHIELD + playerNumber - 1, 0, 0, 361

      EndIf
   EndIf

   `Moves the player's sprite offscreen if the player is dead.
   If playerData$(playerNumber, 15) = "1" then Sprite SPRITEPLAYER + playerNumber - 1, 0, 0, 361

Return

RemoveHealthEndless:
`Removes player health if they collide with a damaging object in endless mode. Collisions are
`detected in other procedures, but the playerDamage variable is passed on to signify that
`the player should take damage.

   `Deals damage to the player if the conditions are met.
   If (playerDamage > 0) and (invincibility = 0) and (Val(playerData$(playerNumber, 5)) > 0) and (debugInfiniteHealth <> 1)
      playerData$(playerNumber,5) = STR$(Val(playerData$(playerNumber,5)) - 10 * playerDamage)
      invincibility = INVINCIBILITYTIME
   EndIf

   `Resets variable that says the player has been damaged.
   playerDamage = 0

   `DEBUG: Used to kill players when debug feature is active.
   If keystate(54) = 1 and debugAllowDeath = 1
      For l = 1 to playerTotal
         playerData$(l,5) = "0"
      Next l
   EndIf

Return

RemoveHealthMission:
`Removes player health if they collide with a damaging object in mission mode. Collisions are
`detected in other procedures, but the playerDamage variable is passed on to signify that
`the player should take damage. Damage is also multiplied by the difficulty in this mode,
`so less damage on Easy, more damage on Hard.

   `Deals damage to the player if the conditions are met.
   If (playerDamage > 0) and (invincibility = 0) and (Val(playerData$(playerNumber, 5)) > 0) and (debugInfiniteHealth <> 1)
      playerData$(playerNumber,5) = STR$(Val(playerData$(playerNumber,5)) - 10 * missionDifficulty#)
      If missionDifficulty# > 1.00
         invincibility = Int(INVINCIBILITYTIME / missionDifficulty#)
      Else
         invincibility = INVINCIBILITYTIME
      EndIf
   EndIf

   `Resets variable that says the player has been damaged.
   playerDamage = 0

   `DEBUG: Used to kill p0layer when debug feature is active.
   If keystate(54) = 1 and debugAllowDeath = 1 and gameMode$ = "Single" then playerData$(1,5) = "0"

Return

RemoveHealthCompete:
`Removes player health if they collide with a damaging object in competitive mode. The only damaging objects in
`competitive are the opposing player's projectiles, and the playerDamage variable is not used. Instead, the
`value for damage is stored in the player array.

   `Deals damage to the player if the conditions are met.
   If Val(playerData$(playerNumber, 21)) > 0 and Val(playerData$(playerNumber, 20)) = 0
      If Val(playerData$(playerNumber, 5)) > 0 and debugInfiniteHealth <> 1
         playerData$(playerNumber,5) = STR$(Val(playerData$(playerNumber,5)) - 10 * Val(playerData$(playerNumber, 21)))
         playerData$(playerNumber, 20) = STR$(INVINCIBILITYTIME)
      EndIf
   EndIf

   `Resets variable that says the player has been damaged.
   playerData$(playerNumber, 21) = "0"

   `If the player's health reaches zero, then the player is marked as dead.
   If Val(playerData$(playerNumber,5)) <= 0 then playerData$(playerNumber,15) = "1"

Return

RemoveHealthCoop:
`Removes player health if they collide with a damaging object in cooperative mode. The damage
`value is passed in via the array, and it's damage is multiplied by the difficulty in this
`mode as well.

   `Deals damage to the player if the conditions are met.
   If Val(playerData$(playerNumber, 21)) > 0 and Val(playerData$(playerNumber, 20)) = 0
      If Val(playerData$(playerNumber, 5)) > 0 and debugInfiniteHealth <> 1
         healthChange = (10 * Val(playerData$(playerNumber, 21)) * missionDifficulty#)
         playerData$(playerNumber,5) = STR$(Val(playerData$(playerNumber,5)) - healthChange)
         If missionDifficulty# > 1.00
            playerData$(playerNumber, 20) = STR$(Int(INVINCIBILITYTIME / missionDifficulty#))
         Else
            playerData$(playerNumber, 20) = STR$(INVINCIBILITYTIME)
         EndIf
      EndIf
   EndIf

   `Resets variable that says the player has been damaged.
   playerData$(playerNumber, 21) = "0"

Return

RunInvincibilitySingleplayer:
`Manages the period of time for which the player is immune to damage.

   If invincibility > 0
      invincibility = invincibility - 1
      disappear = 1 - disappear
   Else
      disappear = 0
   EndIf

Return

RunInvincibilityCompete:
`Activates the invincibility mode in competitive mode. Because of multiple
`players, the code had to be changed from the Singleplayer variant to accommodate
`up to 4 players.

   If Val(playerData$(playerNumber, 20)) > 0 and playerData$(playerNumber, 15) = "0"
      playerData$(playerNumber, 20) = STR$(Val(playerData$(playerNumber, 20)) - 1)
      If playerData$(playerNumber, 8) = "1"
         playerData$(playerNumber, 8) = "0"
      Else
         playerData$(playerNumber, 8) = "1"
      EndIf
   Else
      playerData$(playerNumber, 8) = "0"
   EndIf

Return

RunInvincibilityCoop:
`Activates the invincibility mode in cooperative mode. Because of multiple
`players, the code had to be changed from the Singleplayer variant to accommodate
`the two players. However, it also had to be changed from the Compete version,
`since part of the array that is used for competitive has a different use in
`cooperative.

   If Val(playerData$(playerNumber, 20)) > 0 and playerData$(playerNumber, 15) = "0"
      playerData$(playerNumber, 20) = STR$(Val(playerData$(playerNumber, 20)) - 1)
      If playerNumber = 1
         If disappear = 1
            disappear = 0
         Else
            disappear = 1
         EndIf
      Else
         If disappear2 = 1
            disappear2 = 0
         Else
            disappear2 = 1
         EndIf
      EndIf
   Else
      If playerNumber = 1 then disappear = 0
      If playerNumber = 2 then disappear2 = 0
   EndIf

Return

PlayerProjectilesSingleplayer:
`Used to create and update player projectiles. Projectiles are created
`when the corresponding key is pressed, and vary is speed, power and
`penetration value depending on the ship and power core in use.

   currentLaser = laserNumber + ((playerNumber - 1) * 8)

   `Laser creation and projection.
   If ProjectileConfirm(playerData$(playerNumber, 17), autoFire) = 1 and laserStop = 0
      If playerProjectiles(laserNumber, 1) = 0 and invincibility <= 10 and powerCoreActive$ <> "Nova Shielding"
         playerProjectiles(laserNumber, 1) = 1
         playerProjectiles(laserNumber, 2) = Val(playerData$(1,1))
         playerProjectiles(laserNumber, 3) = Val(playerData$(1,2))
         playerLaserFired = 1

         `Assigns player shooting speed, power, penetration value and the
         `image to be used for the projectile.
         GoSub ShootingModifiers

         `Sets delay timer between lasers.
         If powerCoreActive$ = "Ion Trigger"
            laserStop = 9
         Else
            laserStop = 16
         EndIf

         `Change laserNumber for next number.
         INC laserNumber
         If laserNumber > 8 then laserNumber = 1

         `Plays laser sound effect.
         Play sound 52
      EndIf
   EndIf

   `Decrease laser delay timer.
   If laserStop > 0 then DEC laserStop

   `Loop used to update laser positions and terminate projectiles.
   For i = 1 to 8

      `Removes projectiles if they leave the screen.
      If playerProjectiles(i, 2) > 1072 then playerProjectiles(i, 1) = 0
      If playerProjectiles(i, 6) <= 0 then playerProjectiles(i, 1) = 0

      `Places projectiles on screen if they are active.
      If playerProjectiles(i, 1) = 1
         Sprite 10 + i, playerProjectiles(i, 2), playerProjectiles(i, 3), playerProjectiles(i, 7)
         playerProjectiles(i, 2) = playerProjectiles(i, 2) + (playerProjectiles(i, 4) * pLaserSpeedModifier)
         `Places projectiles for the Black Hole Blast power core.
         If playerProjectiles(i, 7) = 436
            spriteX = playerProjectiles(i, 2) + (rnd(5) * (rnd(2) - 1))
            spriteY = playerProjectiles(i, 3) + (rnd(5) * (rnd(2) - 1))
            Sprite 10 + i, spriteX, spriteY, playerProjectiles(i, 7)
         EndIf
      `Moves projectiles off-screen if they are not active.
      Else
         Sprite 10 + i, 0, 0, 361
      EndIf

   Next i

Return

PlayerProjectilesCompete:
`Used to create and update player projectiles in the competitive mode.

   currentLaser = Val(playerData$(playerNumber,18)) + ((playerNumber - 1) * 8)

   `If the projectile is available, and the player has pressed the button to
   `fire, then the game creates a projectile.
   If playerData$(playerNumber, 19) = "0" and playerProjectiles(currentLaser, 1) = 0
      If ProjectileConfirm(playerData$(playerNumber, 17), autoFire) = 1
         If playerData$(playerNumber, 20) = "0" and playerData$(playerNumber, 15) = "0"
            playerProjectiles(currentLaser, 1) = 1
            playerProjectiles(currentLaser, 2) = Val(playerData$(playerNumber,1))
            playerProjectiles(currentLaser, 3) = Val(playerData$(playerNumber,2))
            playerProjectiles(currentLaser, 4) = 8
            playerProjectiles(currentLaser, 5) = 1
            playerProjectiles(currentLaser, 6) = 1
            If playerData$(playerNumber, 6) = "Space Fighter" then playerProjectiles(currentLaser, 7) = 401
            If playerData$(playerNumber, 6) = "Nebula Baron" then playerProjectiles(currentLaser, 7) = 405
            If playerData$(playerNumber, 6) = "Orbital Freighter" then playerProjectiles(currentLaser, 7) = 421
            If playerData$(playerNumber, 6) = "Binary Duo" then playerProjectiles(currentLaser, 7) = 409
            If playerData$(playerNumber, 6) = "Magneteer" then playerProjectiles(currentLaser, 7) = 413
            If playerData$(playerNumber, 6) = "Geocentral Star" then playerProjectiles(currentLaser, 7) = 429
            If playerData$(playerNumber, 6) = "Dwarf Shuttle" then playerProjectiles(currentLaser, 7) = 425
            If playerData$(playerNumber, 6) = "Bot Morpher" then playerProjectiles(currentLaser, 7) = 417

            playerData$(playerNumber, 19) = "16"

            `Change laserNumber for next laser.
            playerData$(playerNumber, 18) = STR$(Val(playerData$(playerNumber, 18)) + 1)
            If Val(playerData$(playerNumber, 18)) > 8 or Val(playerData$(playerNumber, 18)) < 1
               playerData$(playerNumber, 18) = "1"
            EndIf

            `Plays laser sound effect.
            Play sound 52

         EndIf
      EndIf
   EndIf

   `Decrease laser delay timer.
   If Val(playerData$(playerNumber, 19)) > 0
      playerData$(playerNumber, 19) = STR$(Val(playerData$(playerNumber, 19)) - 1)
   EndIf

   `Loop used to update laser positions and terminate projectiles.
   For i = 1 to 8

      currentLaser = i + ((playerNumber - 1) * 8)

      If playerProjectiles(currentLaser, 2) > 1024 then playerProjectiles(currentLaser, 1) = 0
      If playerProjectiles(currentLaser, 2) < -96 then playerProjectiles(currentLaser, 1) = 0
      If playerProjectiles(currentLaser, 6) <= 0 then playerProjectiles(currentLaser, 1) = 0

      If playerProjectiles(currentLaser, 1) = 1
         spriteX = playerProjectiles(currentLaser, 2)
         spriteY = playerProjectiles(currentLaser, 3)
         Sprite 10 + currentLaser, spriteX, spriteY, playerProjectiles(currentLaser, 7)
         If playerNumber = 1 or playerNumber = 3
            positionChange = (playerProjectiles(currentLaser, 4) * pLaserSpeedModifier)
            playerProjectiles(currentLaser, 2) = playerProjectiles(currentLaser, 2) + positionChange
         Else
            positionChange = (playerProjectiles(currentLaser, 4) * pLaserSpeedModifier)
            playerProjectiles(currentLaser, 2) = playerProjectiles(currentLaser, 2) - positionChange
         EndIf
      Else
         Sprite 10 + currentLaser, 0, 0, 361
      EndIf

   Next i

   `Detects collisions for player lasers.
   If playerNumber = 1 or playerNumber = 3
      For i = 1 to 8
         If sprite collision(SPRITEPLAYER + playerNumber - 1, 18 + i) = 1
            playerData$(playerNumber, 21) = "1"
            playerProjectiles(18 + i, 6) = 0
            playerData$(playerNumber, 11) = "2"
         EndIf
         If sprite collision(SPRITEPLAYER + playerNumber - 1, 34 + i) = 1
            playerData$(playerNumber, 21) = "1"
            playerProjectiles(34 + i, 6) = 0
            playerData$(playerNumber, 11) = "4"
         EndIf
      Next i
   Else
      For i = 1 to 8
         If sprite collision(SPRITEPLAYER + playerNumber - 1, 10 + i) = 1
            playerData$(playerNumber, 21) = "1"
            playerProjectiles(10 + i, 6) = 0
            playerData$(playerNumber, 11) = "1"
         EndIf
         If sprite collision(SPRITEPLAYER + playerNumber - 1, 26 + i) = 1
            playerData$(playerNumber, 21) = "1"
            playerProjectiles(26 + i, 6) = 0
            playerData$(playerNumber, 11) = "3"
         EndIf
      Next i
   EndIf

Return

PlayerProjectilesCoop:
`Used to create and update player projectiles in cooperative mode.

   currentLaser = Val(playerData$(playerNumber, 18)) + ((playerNumber - 1) * 8)

   `Laser creation and projection.
   If ProjectileConfirm(playerData$(playerNumber, 17), autoFire) = 1
      If playerData$(playerNumber, 19) = "0" and playerProjectiles(currentLaser, 1) = 0
         If playerData$(playerNumber, 20) = "0" and powerCoreActive$ <> "Nova Shielding"
            If playerData$(playerNumber, 15) = "0"
               playerProjectiles(currentLaser, 1) = 1
               playerProjectiles(currentLaser, 2) = Val(playerData$(playerNumber,1))
               playerProjectiles(currentLaser, 3) = Val(playerData$(playerNumber,2))
               playerLaserFired = 1

               GoSub ShootingModifiers

               `Sets delay timer between lasers.
               If powerCoreActive$ = "Ion Trigger"
                  playerData$(playerNumber, 19) = "9"
               Else
                  playerData$(playerNumber, 19) = "16"
               EndIf

               `Change laserNumber for next number.
               playerData$(playerNumber, 18) = STR$(Val(playerData$(playerNumber, 18)) + 1)
               If Val(playerData$(playerNumber, 18)) > 8 or Val(playerData$(playerNumber, 18)) < 1
                  playerData$(playerNumber, 18) = "1"
               EndIf

               `Plays laser sound effect.
               Play sound 52

            EndIf
         EndIf
      EndIf
   EndIf

   `Decrease laser delay timer.
   If Val(playerData$(playerNumber, 19)) > 0
      playerData$(playerNumber, 19) = STR$(Val(playerData$(playerNumber, 19)) - 1)
   EndIf

   `Loop used to update laser positions and terminate projectiles.
   For i = 1 + ((playerNumber - 1) * 8) to 8 + ((playerNumber - 1) * 8)

      `Terminates lasers if they leave the screen.
      If playerProjectiles(i, 2) > 1072 then playerProjectiles(i, 1) = 0
      If playerProjectiles(i, 6) <= 0 then playerProjectiles(i, 1) = 0

      `Pleaces lasers on the screen if they are active.
      If playerProjectiles(i, 1) = 1
         Sprite 10 + i, playerProjectiles(i, 2), playerProjectiles(i, 3), playerProjectiles(i, 7)
         playerProjectiles(i, 2) = playerProjectiles(i, 2) + (playerProjectiles(i, 4) * pLaserSpeedModifier)
         If playerProjectiles(i, 7) = 436
            spriteX = playerProjectiles(i, 2) + (rnd(5) * (rnd(2) - 1))
            spriteY = playerProjectiles(i, 3) + (rnd(5) * (rnd(2) - 1))
            Sprite 10 + i, spriteX, spriteY, playerProjectiles(i, 7)
         EndIf
      `Moves lasers off-screen if they are not active.
      Else
         Sprite 10 + i, 0, 0, 361
      EndIf

   Next i

Return

EnemyProjectiles:
`Used to fire and update enemy projectiles. Also detects collisions with the projectiles
` and terminates projectiles.

   For i = 1 to 20

      `Used to move enemy projectiles across the screen.
      If enemyProjectiles(i, 1) = 1
         Sprite 80 + i, enemyProjectiles(i, 2), enemyProjectiles(i, 3), 433
         If missionNumber = 0
            positionChange = (enemyProjectiles(i, 4) * eLaserSpeedModifier * endlessDifficulty#)
            enemyProjectiles(i, 2) = enemyProjectiles(i, 2) + positionChange
         Else
            If missionDifficulty# > 1.00
               positionChange = (enemyProjectiles(i, 4) * eLaserSpeedModifier * missionDifficulty#)
               enemyProjectiles(i, 2) = enemyProjectiles(i, 2) + positionChange
            Else
               positionChange = (enemyProjectiles(i, 4) * eLaserSpeedModifier)
               enemyProjectiles(i, 2) = enemyProjectiles(i, 2) + positionChange

            EndIf
         EndIf
      Else
         Sprite 80 + i, 0, 768, 361
      EndIf

      `Removes laser if it reaches the end of the screen.
      If (enemyProjectiles(i, 2) < -24 or enemyProjectiles(i, 2) > 1048) then enemyProjectiles(i, 1) = 0

      `Shoots new enemy lasers if the random number generator generates the maximum value it can.
      enemyLaserChance = rnd(ENEMYSHOOTCHANCE)
      If enemyData(i, 1) = 1 and enemyData(i, 12) <> 1 and enemyData(i, 12) <> 2 and enemyData(i, 5) < 928
         If enemyProjectiles(i, 1) = 0 and enemyLaserChance = ENEMYSHOOTCHANCE
            If powerCoreActive$ <> "Evasion Cloak" and bossForm = 0
               enemyProjectiles(i, 1) = 1
               enemyProjectiles(i, 2) = enemyData(i, 4)
               enemyProjectiles(i, 3) = enemyData(i, 5) + 12
               enemyProjectiles(i, 4) = enemyData(i, 7) - 2
               If enemyProjectiles(i, 4) > -4 then enemyProjectiles(i, 4) = -4
               enemyProjectiles(i, 5) = 1
               Play sound 62
            EndIf
         EndIf
      EndIf

      `Processes collisions between player and lasers.
      If gameMode$ = "Single"
         If sprite collision(SPRITEPLAYER, 80 + i) = 1 and invincibility <= 0 and powerCoreActive$ <> "Evasion Cloak"
            If powerCoreActive$ <> "Nova Shielding" then playerDamage = enemyProjectiles(i, 5): Play sound 59
            enemyProjectiles(i, 1) = 0
         EndIf
      Else
         For j = 1 to 2
            If sprite collision(j, 80 + i) = 1 and playerData$(j,20) = "0" and powerCoreActive$ <> "Evasion Cloak"
               If powerCoreActive$ <> "Nova Shielding" then playerData$(j,21) = STR$(enemyProjectiles(i, 5)): Play sound 59
               enemyProjectiles(i, 1) = 0
            EndIf
         Next j
      EndIf

   Next i

Return

PowerCoreHandling:
`Procedure that handles all power core related code, such as activation, timers, cool downs,
`special projectiles, score multipliers, and more.

   `Periodically generates power cores.
   If powerCores(1,4) = 0 and powerCores(2,4) = 0 and powerCores(3,4) = 0 and powerCores(4,4) = 0 and powerCores(5,4) = 0
      powerChance = rnd(POWERMAX)
      If powerChance = POWERMAX
         If missionNumber = 0
            powerSelect = rnd(3) + 1
            powerCores(powerSelect, 4) = 1
            powerCores(powerSelect, 5) = 1024
            powerCores(powerSelect, 6) = rnd(642) + 78
         Else
            If missionNumber > 0 and Val(playerSaves$(save, 2)) = missionNumber
               powerSelect = rnd(4) + 1
               powerCores(powerSelect, 4) = 1
               powerCores(powerSelect, 5) = 1024
               powerCores(powerSelect, 6) = rnd(642) + 78
            Else
               powerSelect = rnd(3) + 1
               powerCores(powerSelect, 4) = 1
               powerCores(powerSelect, 5) = 1024
               powerCores(powerSelect, 6) = rnd(642) + 78
            EndIf
         EndIf
      EndIf
   EndIf

   For i = 1 to 5

      `Places the power cores on screen and moves them.
      If powerCores(i, 4) = 1
         Sprite 50 + i, powerCores(i, 5), powerCores(i, 6), powerCores(i, 7)
         powerCores(i, 5) = powerCores(i, 5) - 5 * enemySpeedModifier
      Else
         Sprite 50 + i, 1024, 0, 361
      EndIf

      `Removes power cores once they leave the screen.
      If powerCores(i, 5) < -48
         powerCores(i, 4) = 0
      EndIf

      `Handles pickup of powerups.
      If gameMode$ = "Single"
         If sprite collision(SPRITEPLAYER, 50 + i) = 1
            If i = 5
               playerSaves$(save, 3) = STR$(Val(playerSaves$(save, 3)) + 1)
               Play sound 63
            Else
               powerCores(i, 1) = powerCores(i, 1) + 1
               Play sound 53
            EndIf
            powerCores(i, 4) = 0
         EndIf
      Else
         For j = 1 to 2
            If sprite collision(j, 50 + i) = 1
               If i = 5
                  INC coopLives
                  Play sound 63
               Else
                  powerCores(i, 1) = powerCores(i, 1) + 1
                  Play sound 53
               EndIf
               powerCores(i, 4) = 0
            EndIf
         Next j
      EndIf

   Next i

   `Initialises the variable that tells the game if there is a power
   `core being used.
   powerCoreUse = 0

   `Checks the array to see if any power cores are being used.
   For i = 1 to 4
      If powerCores(i,2) > 0 then powerCores(i,2) = powerCores(i,2) - 1
      If powerCores(i,3) > 0 then powerCores(i,3) = powerCores(i,3) - 1
      If powerCores(i,3) > 0 then powerCoreUse = 1
   Next i

   `Checks for button presses that activate the power cores in the Endless and Mission modes.
   If gameMode$ = "Single"
      For i = 1 to 4
         If PowerCoreConfirm(playerData$(1, 17), i) = 1
            If powerCores(i,1) > 0 and powerCores(i,2) = 0 and powerCoreUse = 0
               powerCoreActive$ = playerData$(1, i + 7)
               Play sound 53
               `Runs the code to activate the power core, and sets the cooldown and recharge timers.
               GoSub PowerCoreActivate

               `Stores timers in variables that handle the green bar in the UI that shows how long the player has until
               `the power core runs out.
               powerTimeMax = powerCores(i, 3)
               powerTimeCurrent = powerCores(i, 3)
            EndIf
         EndIf

         `Determines when timer has run out for power cores.
         GoSub PowerCoreTimeout

      Next i
   EndIf

   `Checks for button presses that activate the power cores in the Cooperative mode.
   If gameMode$ = "Multi"
      `Checks for each player's button press.
      For l = 1 to 2
         `Checks for each of the 4 possible power cores.
         For i = 1 to 4
            If PowerCoreConfirm(playerData$(l, 17), i) = 1
               If powerCores(i,1) > 0 and powerCores(i,2) = 0 and powerCoreUse = 0
                  powerCoreActive$ = playerData$(1, i + 7)
                  Play sound 53
                  `Runs the code to activate the power core, and sets the cooldown and recharge timers.
                  GoSub PowerCoreActivate

                  `Stores timers in variables that handle the green bar in the UI that shows how long the player has until
                  `the power core runs out.
                  powerTimeMax = powerCores(i, 3)
                  powerTimeCurrent = powerCores(i, 3)
               EndIf
            EndIf

            `Determines when timer has run out for power cores.
            GoSub PowerCoreTimeout

         Next i
      Next l

   EndIf

Return

PowerCoreActivate:
`Handles the initialisation of the cooldown and usage timers plus any additional
`effects needed to activate the different power cores.

   If powerCoreActive$ = "Flight Kit"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 2000
      powerCores(i, 3) = 1
      If Val(playerData$(1,5)) <= 90
         playerData$(1,5) = STR$(Val(playerData$(1,5)) + 10)
      Else
         playerData$(1,5) = "100"
      EndIf
      If gameMode$ = "Multi"
         If Val(playerData$(2,5)) <= 90
            playerData$(2,5) = STR$(Val(playerData$(2,5)) + 10)
         Else
            playerData$(2,5) = "100"
         EndIf
      EndIf
   EndIf
   If powerCoreActive$ = "Power Pack"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1600
      powerCores(i, 3) = 1200
   EndIf
   If powerCoreActive$ = "Ion Trigger"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1600
      powerCores(i, 3) = 1200
   EndIf
   If powerCoreActive$ = "Boost Array"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1300
      powerCores(i, 3) = 1200
      playerSpeedModifier = 2
   EndIf
   If powerCoreActive$ = "Underclocker Drive"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1600
      powerCores(i, 3) = 350
      enemySpeedModifier = 0
   EndIf
   If powerCoreActive$ = "Nuclear Pulse"
      If gameMode$ = "Single"
         powerCores(i, 1) = powerCores(i, 1) - 1
         powerCores(i, 2) = 1500
         powerCores(i, 3) = 250
         playerProjectiles(laserNumber, 1) = 1
         playerProjectiles(laserNumber, 2) = Val(playerData$(1,1)) + 50
         playerProjectiles(laserNumber, 3) = Val(playerData$(1,2)) - 124
         If playerProjectiles(laserNumber, 3) < 80 then playerProjectiles(laserNumber, 3) = 80
         If playerProjectiles(laserNumber, 3) > 446 then playerProjectiles(laserNumber, 3) = 446
         playerProjectiles(laserNumber, 4) = 3
         playerProjectiles(laserNumber, 5) = 10
         playerProjectiles(laserNumber, 6) = 100
         playerProjectiles(laserNumber, 7) = 434
         INC laserNumber
         If laserNumber > 8 then laserNumber = 1
         playerData$(1,5) = STR$(Val(playerData$(1,5)) - 5)
         Stop sound 53
         Play sound 61
      Else
      powerCores(i, 1) = powerCores(i, 1) - 1
         For j = 1 to 2
            powerCores(i, 2) = 1500
            powerCores(i, 3) = 250
            playerProjectiles(Val(playerData$(j,18)), 1) = 1
            playerProjectiles(Val(playerData$(j,18)), 2) = Val(playerData$(j,1)) + 50
            playerProjectiles(Val(playerData$(j,18)), 3) = Val(playerData$(j,2)) - 124
            If playerProjectiles(Val(playerData$(j,18)), 3) < 80
               playerProjectiles(Val(playerData$(j,18)), 3) = 80
            EndIf
            If playerProjectiles(Val(playerData$(j,18)), 3) > 446
               playerProjectiles(Val(playerData$(j,18)), 3) = 446
            EndIf
            playerProjectiles(Val(playerData$(j,18)), 4) = 3
            playerProjectiles(Val(playerData$(j,18)), 5) = 10
            playerProjectiles(Val(playerData$(j,18)), 6) = 100
            playerProjectiles(Val(playerData$(j,18)), 7) = 434
            playerData$(j,18) = STR$(Val(playerData$(j,18)) + 1)
            If Val(playerData$(j,18)) > 8 then playerData$(j,18) = "1"
            playerData$(j,5) = STR$(Val(playerData$(j,5)) - 5)
            Stop sound 53
            Play sound 61
         Next j
      EndIf
   EndIf
   If powerCoreActive$ = "Bounty Exchange"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1500
      powerCores(i, 3) = 1200
      pointModifier = 2
   EndIf
   If powerCoreActive$ = "Nova Shielding"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 2000
      powerCores(i, 3) = 400
   EndIf
   If powerCoreActive$ = "Diffraction Cannon"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 1600
      powerCores(i, 3) = 1200
   EndIf
   If powerCoreActive$ = "Terravolt Bomb"
      If gameMode$ = "Single"
         powerCores(i, 1) = powerCores(i, 1) - 1
         powerCores(i, 2) = 1750
         powerCores(i, 3) = 200
         playerProjectiles(laserNumber, 1) = 1
         playerProjectiles(laserNumber, 2) = Val(playerData$(1,1)) + 32
         playerProjectiles(laserNumber, 3) = Val(playerData$(1,2))
         playerProjectiles(laserNumber, 4) = 5
         playerProjectiles(laserNumber, 5) = 3
         playerProjectiles(laserNumber, 6) = 1
         playerProjectiles(laserNumber, 7) = 435
         INC laserNumber
         If laserNumber > 8 then laserNumber = 1
      Else
         powerCores(i, 1) = powerCores(i, 1) - 1
         For j = 1 to 2
            powerCores(i, 2) = 1750
            powerCores(i, 3) = 200
            playerProjectiles(Val(playerData$(j,18)), 1) = 1
            playerProjectiles(Val(playerData$(j,18)), 2) = Val(playerData$(1,1)) + 32
            playerProjectiles(Val(playerData$(j,18)), 3) = Val(playerData$(1,2))
            playerProjectiles(Val(playerData$(j,18)), 4) = 5
            playerProjectiles(Val(playerData$(j,18)), 5) = 3
            playerProjectiles(Val(playerData$(j,18)), 6) = 1
            playerProjectiles(Val(playerData$(j,18)), 7) = 435
            playerData$(j,18) = STR$(Val(playerData$(j,18)) + 1)
            If Val(playerData$(j,18)) > 8 then playerData$(j,18) = "1"
         Next j
      EndIf
   EndIf
   If powerCoreActive$ = "Evasion Cloak"
      powerCores(i, 1) = powerCores(i, 1) - 1
      powerCores(i, 2) = 2000
      powerCores(i, 3) = 400
   EndIf
   If powerCoreActive$ = "Black Hole Blast"
      If gameMode$ = "Single"
         powerCores(i, 1) = powerCores(i, 1) - 1
         powerCores(i, 2) = 2500
         powerCores(i, 3) = 120
         playerProjectiles(laserNumber, 1) = 1
         playerProjectiles(laserNumber, 2) = Val(playerData$(1,1)) + 100
         playerProjectiles(laserNumber, 3) = 99
         playerProjectiles(laserNumber, 4) = 0
         playerProjectiles(laserNumber, 5) = 5
         playerProjectiles(laserNumber, 6) = 1000
         playerProjectiles(laserNumber, 7) = 436
         INC laserNumber
         If laserNumber > 8 then laserNumber = 1
         Stop sound 53
         Play sound 61
      Else
         powerCores(i, 1) = powerCores(i, 1) - 1
         powerCores(i, 2) = 2500
         powerCores(i, 3) = 120
         playerProjectiles(Val(playerData$(1,18)), 1) = 1
         playerProjectiles(Val(playerData$(1,18)), 2) = Val(playerData$(1,1)) + 100
         playerProjectiles(Val(playerData$(1,18)), 3) = 99
         playerProjectiles(Val(playerData$(1,18)), 4) = 0
         playerProjectiles(Val(playerData$(1,18)), 5) = 5
         playerProjectiles(Val(playerData$(1,18)), 6) = 1000
         playerProjectiles(Val(playerData$(1,18)), 7) = 436
         playerData$(1,18) = STR$(Val(playerData$(1,18)) + 1)
         If Val(playerData$(1,18)) > 8 then playerData$(1,18) = "1"
         Stop sound 53
         Play sound 61
      EndIf
   EndIf

Return

PowerCoreTimeout:
`Code that detects when a power core's effect should be stopped, and changes the values
`in the array appropriately.

   `Checks if the time has run out.
   If powerCores(i,3) = 0 and powerCoreActive$ = playerData$(1, 7 + i)
      `Resets modifying variables.
      playerSpeedModifier = 1
      pLaserSpeedModifier = 1
      enemySpeedModifier = 1
      eLaserSpeedModifier = 1
      pointModifier = 1
      `Changes different values depending on what power core is active.
      If powerCoreActive$ = "Nuclear Pulse"
         For i = 1 to 8
            If playerProjectiles(i, 7) = 434
               playerProjectiles(i, 1) = 0
               playerProjectiles(i, 7) = 0
            EndIf
         Next i
      EndIf
      If powerCoreActive$ = "Terravolt Bomb"
         For i = 1 to 8
            If playerProjectiles(i, 7) = 435
               playerProjectiles(i, 1) = 0
               playerProjectiles(i, 7) = 0
            EndIf
         Next i
      EndIf
      If powerCoreActive$ = "Black Hole Blast"
         For i = 1 to 8
            If playerProjectiles(i, 7) = 436
               playerProjectiles(i, 1) = 0
               playerProjectiles(i, 7) = 0
            EndIf
         Next i
      EndIf
      powerCoreActive$ = ""
   EndIf

Return

EnemyHandlingSingleplayer:
`Used to spawn enemies in endless and mission mode, and move them across the screen,
` detect collisions, award score, and terminate enemies.

   `Handles increasing difficulty.
   If missionNumber = 0
      endlessDifficulty# = (enemyGroup# - 1)/50
      INC endlessDifficulty#
      If endlessDifficulty# > DIFFICULTYMAX# then endlessDifficulty# = DIFFICULTYMAX#
   EndIf

   `Detects if any enemies are on screen.
   EnemyPresence()

   `Sets the enemy formation to be spawned when the screen is clear of enemies.
   If EnemyPresence() = 0 and debugStopEnemies = 0
      If missionNumber = 0
         If BossModulus(enemyGroup#) = 0
            bossForm = rnd(19) + 1
            GoSub BossFormations
         Else
            enemyFormation = rnd((FORMATIONS - 1)) + 1
            GoSub EnemyFormationReset
            GoSub EnemyFormations
            bossForm = 0
         EndIf
      Else
         INC missionStage
         GoSub EnemyFormationReset
         GoSub EnemyScripts
      EndIf
      INC enemyGroup#
   EndIf

   For i = 1 to 20

      `Handles the movement and placing of enemy sprites.
      Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), enemyData(i, 10)
      If missionNumber = 0
         enemyData(i, 4) = enemyData(i, 4) + Int(enemyData(i, 7) * enemySpeedModifier * endlessDifficulty#)
      Else
         If missionDifficulty# > 1.00
            enemyData(i, 4) = enemyData(i, 4) + Int(enemyData(i, 7) * enemySpeedModifier * missionDifficulty#)
         Else
            enemyData(i, 4) = enemyData(i, 4) + Int(enemyData(i, 7) * enemySpeedModifier)
         EndIf
      EndIf
      enemyData(i, 5) = enemyData(i, 5) + (enemyData(i, 8) * enemySpeedModifier)

      `Handles enemies leaving the screen.
      If enemyData(i, 4) <= 0 - (sprite width(enemyData(i, 9))) and enemyData(i, 1) = 1
         enemyData(i, 1) = 0
         If enemyData(i, 12) = 0
            enemyData(i, 11) = -1
         EndIf
      EndIf

   Next i

   `Evaluates if player projectiles are in contact with enemy ships.
   For i = 1 to 20
      For j = 1 to 8
         If sprite collision(SPRITEENEMY + i - 1, j + 10) = 1
            If playerProjectiles(j, 7) = 435
               For k = 1 to 20
                  enemyData(k, 6) = enemyData(k, 6) - playerProjectiles(j, 5)
                  enemyData(k, 14) = j
               Next k
               playerProjectiles(j, 6) = playerProjectiles(j, 6) - 1
               Play sound 61
            EndIf
            If enemyData(i, 14) <> j and enemyData(i, 12) <> 1
               enemyData(i, 6) = enemyData(i, 6) - playerProjectiles(j, 5)
               enemyData(i, 14) = j
               playerProjectiles(j, 6) = playerProjectiles(j, 6) - 1
               Sprite i + 60, 0, 768, 361
               Play sound 59
            EndIf
         EndIf
      Next j

      `Checks enemy health levels, and destroys enemies if health is less than zero.
      If enemyData(i, 6) <= 0 and enemyData(i, 1) = 1
         enemyData(i, 1) = 0
         enemyData(i, 7) = 0
         enemyData(i, 8) = 0
         enemyData(i, 10) = 361
         enemyData(i, 11) = 1
         enemyData(i, 15) = 20
         Stop sound 59
         Play sound 58
      EndIf

      `Displays score where the enemy died.
      If enemyData(i, 15) > 0 then enemyData(i, 15) = enemyData(i, 15) - 1

      `System used to display the score earned for each kill by the player.
      If enemyData(i, 15) > 0 and bossForm = 0
         Set text size 10
         `Changes the colour of the text depending on if a multiplier is in effect,
         `or if the score is negative.
         If pointModifier > 1
            ink RGB(0,200,0), RGB(0,200,0)
         Else
            If enemyData(i, 13) => 0
               ink RGB(255,255,255), RGB(255,255,255)
            Else
               ink RGB(255,0,0), RGB(255,0,0)
            EndIf
         EndIf
         `Displys the score earned.
         Center Text (enemyData(i, 4) + 24), (enemyData(i, 5) + 20), STR$(enemyData(i, 13) * pointModifier * missionDifficulty#)
      Else
         `Does not award score if there is a boss present, since it will spawn
         `infinite enemies, which would allow the player to earn as many points as
         `they wanted. Therefore, score is not earned for enemy kills when
         `a boss is present.
         If enemyData(i, 1) = 0
            enemyData(i, 4) = 0
            enemyData(i, 5) = 768
         EndIf
      EndIf

      `Process score updates based on whether the enemy was killed or if it escaped.
      If enemyData(i, 11) = -1 and bossForm = 0
         playerData$(1, 13) = STR$(Val(playerData$(1, 13)) - (10 * pointModifier * missionDifficulty#))
         enemyData(i, 11) = 0
      EndIf
      If enemyData(i, 11) = 1 and bossForm = 0
         playerData$(1, 13) = STR$(Val(playerData$(1, 13)) + (enemyData(i, 13) * pointModifier * missionDifficulty#))
         playerData$(1, 14) = STR$(Val(playerData$(1, 14)) + 1)
         enemyData(i, 11) = 0
      EndIf

      `Checks for enemy collisions with the player.
      If sprite collision(SPRITEPLAYER, SPRITEENEMY + i - 1) = 1 and invincibility <= 0
         If powerCoreActive$ <> "Nova Shielding" then playerDamage = 1
         enemyData(i, 6) = enemyData(i, 6) - 1
         Play sound 59
      EndIf

   Next i

Return

EnemyHandlingCoop:
`Used to spawn enemies in cooperative mode, and move them across the screen,
` detect collisions, award score, and terminate enemies.

   `Sets the enemy formation to be spawned when the screen is clear of enemies.
   If EnemyPresence() = 0 and debugStopEnemies = 0
      INC missionStage
      GoSub EnemyFormationReset
      GoSub EnemyScripts
      INC enemyGroup#
   EndIf

   For i = 1 to 20

      `Handles the movement and placing of enemy sprites.
      Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), enemyData(i, 10)
      If missionDifficulty# > 1.00
         enemyData(i, 4) = enemyData(i, 4) + Int(enemyData(i, 7) * enemySpeedModifier * missionDifficulty#)
      Else
         enemyData(i, 4) = enemyData(i, 4) + Int(enemyData(i, 7) * enemySpeedModifier)
      EndIf
      enemyData(i, 5) = enemyData(i, 5) + (enemyData(i, 8) * enemySpeedModifier)

      `Handles enemies leaving the screen.
      If enemyData(i, 4) <= 0 - (sprite width(enemyData(i, 9))) and enemyData(i, 1) = 1
         enemyData(i, 1) = 0
         If enemyData(i, 12) = 0
            enemyData(i, 11) = -1
         EndIf
      EndIf

   Next i

   `Evaluates if player projectiles are in contact with enemy ships.
   For i = 1 to 20
      For j = 1 to 16
         If sprite collision(SPRITEENEMY + i - 1, j + 10) = 1
            If playerProjectiles(j, 7) = 435
               For k = 1 to 20
                  enemyData(k, 6) = enemyData(k, 6) - playerProjectiles(j, 5)
                  enemyData(k, 14) = j
               Next k
               playerProjectiles(j, 6) = playerProjectiles(j, 6) - 1
               Play sound 61
            EndIf
            If enemyData(i, 14) <> j and enemyData(i, 12) <> 1
               enemyData(i, 6) = enemyData(i, 6) - playerProjectiles(j, 5)
               enemyData(i, 14) = j
               playerProjectiles(j, 6) = playerProjectiles(j, 6) - 1
               Play sound 59
            EndIf
         EndIf
      Next j

      `Checks enemy health levels, and destroys enemies if health is less than zero.
      If enemyData(i, 6) <= 0 and enemyData(i, 1) = 1
         enemyData(i, 1) = 0
         enemyData(i, 7) = 0
         enemyData(i, 8) = 0
         enemyData(i, 10) = 361
         enemyData(i, 11) = 1
         enemyData(i, 15) = 20
         If enemyData(i, 14) >= 9 and enemyData(i, 14) <= 16
            enemyKiller = 2
         Else
            enemyKiller = 1
         EndIf
         Stop sound 59
         Play sound 58
      EndIf

      `Displays score where the enemy died.
      If enemyData(i, 15) > 0 then enemyData(i, 15) = enemyData(i, 15) - 1

      If enemyData(i, 15) > 0 and bossForm = 0
         Set text size 10
         If pointModifier > 1
            ink RGB(0,200,0), RGB(0,200,0)
         Else
            If enemyData(i, 13) => 0
               ink RGB(255,255,255), RGB(255,255,255)
            Else
               ink RGB(255,0,0), RGB(255,0,0)
            EndIf
         EndIf
         Center Text (enemyData(i, 4) + 24), (enemyData(i, 5) + 20), STR$(enemyData(i, 13) * pointModifier * missionDifficulty#)
      Else
         If enemyData(i, 1) = 0
            enemyData(i, 4) = 0
            enemyData(i, 5) = 768
         EndIf
      EndIf

      `Process score updates based on whether the enemy was killed or if it escaped.
      If enemyData(i, 11) = -1 and bossForm = 0
         playerData$(1, 13) = STR$(Val(playerData$(1, 13)) - (10 * pointModifier * missionDifficulty#))
         playerData$(2, 13) = STR$(Val(playerData$(2, 13)) - (10 * pointModifier * missionDifficulty#))
         enemyData(i, 11) = 0
      EndIf
      If enemyData(i, 11) = 1 and bossForm = 0
         positionChange = (enemyData(i, 13) * pointModifier * missionDifficulty#)
         playerData$(enemyKiller, 13) = STR$(Val(playerData$(enemyKiller, 13)) + positionChange)
         playerData$(enemyKiller, 14) = STR$(Val(playerData$(enemyKiller, 14)) + 1)
         enemyData(i, 11) = 0
      EndIf

      For j = 1 to 2
         `Checks for enemy collisions with the player and their shields.
         If sprite collision(j, i + 60) = 1 and Val(playerData$(j, 20)) <= 0 and powerCoreActive$ <> "Nova Shielding"
            playerData$(j, 21) = "1"
            enemyData(i, 6) = enemyData(i, 6) - 1
            Play sound 59
         EndIf

         If sprite collision(j + 8, i + 60) = 1 and Val(playerData$(j, 20)) <= 0
            If powerCoreActive$ = "Nova Shielding"
               `Decrease remaining shield/cloak time if hit while shield/cloak
               `is activated.
               For k = 1 to 4
                  If powerCores(k, 3) > 9
                     powerCores(k, 3) = powerCores(k, 3) - 10
                     powerTimeCurrent = powerTimeCurrent - 10
                  EndIf
               Next k
               enemyData(i, 6) = enemyData(i, 6) - 1
               Play sound 59
            Else
               `If the player has no shields, they will take damage.
               playerData$(j, 21) = "1"
               enemyData(i, 6) = enemyData(i, 6) - 1
               Play sound 59
            EndIf
         EndIf
      Next j

   Next i

Return

EnemyHandlingSpecial:
`Handles enemy AI routines, pathing and image changes while in game.

   `DEBUG: Tool used to kill enemies.
   If mouseclick() = 2 and debugTimer = 0 and debugKillEnemies = 1
      For i = 1 to 20
         enemyData(i, 6) = 0
      Next i
      debugTimer = TIMER
   EndIf

   `Used to animate enemies that have different animations frames.
   If animationStage > 0 then animationStage = animationStage - 1

   `Handles direction changes.
   For i = 1 to 20

      `Direction changng for formation 7.
      If enemyData(i, 3) = 7 and enemyData(i, 1) = 1
         If enemyData(i, 12) = 3 and enemyData(i, 4) <= 600 and enemyData(i, 5) = 100
            enemyData(i, 7) = 0
            If missionNumber > 0
               enemyData(i, 8) = 10 * missionDifficulty#
            Else
               enemyData(i, 8) = 10 * endlessDifficulty#
            EndIf
            enemyData(i, 4) = 599
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 4) <= 600 and enemyData(i, 5) = 698
            enemyData(i, 7) = 0
            If missionNumber > 0
               enemyData(i, 8) = -10 * missionDifficulty#
            Else
               enemyData(i, 8) = -10 * endlessDifficulty#
            EndIf
            enemyData(i, 4) = 599
         EndIf
         If enemyData(i, 12) = 3 and enemyData(i, 4) <= 600 and enemyData(i, 5) >= 600
            enemyData(i, 7) = -7
            enemyData(i, 8) = 0
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 4) <= 600 and enemyData(i, 5) <= 198
            enemyData(i, 7) = -7
            enemyData(i, 8) = 0
         EndIf
      EndIf

      `Direction changing for formation 8 to 10.
      If enemyData(i, 3) => 8 and enemyData(i, 3) <= 10 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 25
      If enemyData(i, 3) = 25 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 28
      If enemyData(i, 3) = 28 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 34
      If enemyData(i, 3) = 34 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 40
      If enemyData(i, 3) = 40 and i <= 10 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 650 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 650
      EndIf

      `Direction changing for formation 44
      If enemyData(i, 3) = 44 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 45
      If enemyData(i, 3) = 45 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 46
      If enemyData(i, 3) = 46 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 650 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 649
      EndIf

      `Direction changing for formation 50
      If enemyData(i, 3) = 50 and enemyData(i, 1) = 1
         If enemyData(i, 12) = 3 and enemyData(i, 4) <= 600 and enemyData(i, 5) = 100
            enemyData(i, 8) = 5
            enemyData(i, 4) = 599
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 4) <= 600 and enemyData(i, 5) = 682
            enemyData(i, 8) = -5
            enemyData(i, 4) = 599
         EndIf
         If enemyData(i, 12) = 3 and enemyData(i, 4) <= 600 and enemyData(i, 5) >= 584
            enemyData(i, 8) = 0
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 4) <= 600 and enemyData(i, 5) <= 198
            enemyData(i, 8) = 0
         EndIf
      EndIf

      `Direction changing for formation 56
      If enemyData(i, 3) = 56 and enemyData(i, 1) = 1
         `Changes enemy speeds when the enemy reaches a specific X-coordinate to move up or down.
         If enemyData(i, 12) = 3 and enemyData(i, 4) <= 800 and enemyData(i, 5) = 125
            enemyData(i, 7) = 0
            enemyData(i, 8) = 5
            enemyData(i, 4) = 801
            enemyData(i, 5) = 126
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 4) <= 800 and enemyData(i, 5) = 595
            enemyData(i, 7) = 0
            enemyData(i, 8) = -5
            enemyData(i, 4) = 801
            enemyData(i, 5) = 594
         EndIf
         `Changes enemy speeds when the enemy reaches a specific Y-coordinate to move left.
         If enemyData(i, 12) = 3 and enemyData(i, 5) > 595
            enemyData(i, 7) = -5
            enemyData(i, 8) = 0
            enemyData(i, 12) = 5
         EndIf
         If enemyData(i, 12) = 4 and enemyData(i, 5) < 125
            enemyData(i, 7) = -5
            enemyData(i, 8) = 0
            enemyData(i, 12) = 5
         EndIf
      EndIf

      `Direction changing for formation 61
      If enemyData(i, 3) = 61 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Speed changing for formation 62
      If enemyData(i, 3) = 62 and enemyData(i, 1) = 1
         If enemyData(i, 4) > 724 and enemyData(i, 4) <= 1024 then enemyData(i, 7) = -8
         If enemyData(i, 4) > 674 and enemyData(i, 4) <= 724 then enemyData(i, 7) = -2
         If enemyData(i, 4) > 374 and enemyData(i, 4) <= 674 then enemyData(i, 7) = -8
         If enemyData(i, 4) > 324 and enemyData(i, 4) <= 374 then enemyData(i, 7) = -2
         If enemyData(i, 4) > 24 and enemyData(i, 4) <= 324 then enemyData(i, 7) = -8
         If enemyData(i, 4) <= 24 then enemyData(i, 7) = -4
      EndIf

      `Direction changing for formation 64
      If enemyData(i, 3) = 64 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Invisibility for formation 65
      If enemyData(i, 3) = 65 and enemyData(i, 1) = 1 and enemyData(i, 10) = 612
         If enemyData(i, 4) => 650 and enemyData(i, 4) <= 820 then Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         If enemyData(i, 4) => 250 and enemyData(i, 4) <= 420 then Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
      EndIf

      `Direction changing for formation 66
      If enemyData(i, 3) = 66 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Invisibility for formation 66
      If enemyData(i, 3) = 66 and enemyData(i, 1) = 1 and enemyData(i, 10) = 612
         If enemyData(i, 4) => 850 and enemyData(i, 4) <= 1024
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 500 and enemyData(i, 4) <= 650
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 150 and enemyData(i, 4) <= 300
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
      EndIf

      `Direction changing for formation 67
      If enemyData(i, 3) = 67 and enemyData(i, 1) = 1
         If enemyData(i, 4) => 550 and enemyData(i, 4) <= 565
            If enemyData(i, 5) > 399
               enemyData(i, 8) = 7
               enemyData(i, 7) = 0
            Else
               If enemyData(i, 5) < 399
                  enemyData(i, 8) = -7
                  enemyData(i, 7) = 0
               EndIf
            EndIf
            enemyData(i, 4) = 549
         EndIf
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024
            enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 7) = -6: enemyData(i, 5) = 101
         EndIf
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024
            enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 7) = -6: enemyData(i, 5) = 697
         EndIf
      EndIf

      `Invisibility for formation 67
      If enemyData(i, 3) = 67 and enemyData(i, 1) = 1 and enemyData(i, 10) = 612
         If enemyData(i, 4) => 400 and enemyData(i, 4) <= 700 then Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
      EndIf

      `Invisibility for formation 68
      If enemyData(i, 3) = 68 and enemyData(i, 1) = 1 and enemyData(i, 10) = 612
         If enemyData(i, 4) => 924 and enemyData(i, 4) <= 1024
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 724 and enemyData(i, 4) <= 824
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 524 and enemyData(i, 4) <= 624
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 324 and enemyData(i, 4) <= 424
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 124 and enemyData(i, 4) <= 224
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
      EndIf

      `Direction changing for formation 69
      If enemyData(i, 3) = 69 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Invisibility for formation 69
      If enemyData(i, 3) = 69 and enemyData(i, 1) = 1 and enemyData(i, 10) = 612
         If enemyData(i, 4) => 850 and enemyData(i, 4) <= 1024
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 500 and enemyData(i, 4) <= 650
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
         If enemyData(i, 4) => 150 and enemyData(i, 4) <= 300
            Sprite enemyData(i, 9), enemyData(i, 4), enemyData(i, 5), 618
         EndIf
      EndIf

      `Direction changing for formation 70
      If enemyData(i, 3) = 70 and enemyData(i, 1) = 1
         If enemyData(i, 12) = 3
            If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024
               enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
            EndIf
            If enemyData(i, 5) >= 420 and enemyData(i, 4) <= 1024
               enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 419
            EndIf
         Else
            If enemyData(i, 5) <= 426 and enemyData(i, 4) <= 1024
               enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 427
            EndIf
            If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024
               enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
            EndIf
         EndIf
      EndIf

      `Direction changing for formation 74
      If enemyData(i, 3) = 74 and enemyData(i, 1) = 1
         If enemyData(i, 4) => 450 and enemyData(i, 4) <= 465
            If enemyData(i, 12) = 3: enemyData(i, 8) = 7
            Else: enemyData(i, 8) = -7: EndIf
            enemyData(i, 7) = 0
            enemyData(i, 4) = 449
         EndIf
         If enemyData(i, 5) <= 200 and enemyData(i, 4) <= 1024
            enemyData(i, 8) = 2: enemyData(i, 7) = -6: enemyData(i, 5) = 201
         EndIf
         If enemyData(i, 5) >= 598 and enemyData(i, 4) <= 1024
            enemyData(i, 8) = -2: enemyData(i, 7) = -6: enemyData(i, 5) = 597
         EndIf
      EndIf

      `Direction changing for formation 76
      If enemyData(i, 3) = 76 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 200 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 201
         If enemyData(i, 5) >= 598 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 597
      EndIf

      `Direction changing for formation 77
      If enemyData(i, 3) = 77 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 79
      If enemyData(i, 3) = 79 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Direction changing for formation 81
      If enemyData(i, 3) = 81 and enemyData(i, 1) = 1
         If enemyData(i, 5) <= 100 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 101
         If enemyData(i, 5) >= 698 and enemyData(i, 4) <= 1024 then enemyData(i, 8) = 0 - enemyData(i, 8): enemyData(i, 5) = 697
      EndIf

      `Homing in for squid enemies
      If enemyData(i, 10) = 609 and enemyData(i, 1) = 1 and enemyData(i, 12) = 5
         If gameMode$ = "Single"
            If enemyData(i, 4) > Val(playerData$(1, 1)) and enemyData(i, 4) < Val(playerData$(1, 1)) + 400
               If enemyData(i, 5) + 16 > Val(playerData$(1, 2)) + 36
                  enemyData(i, 8) = -2 * missionDifficulty#
               Else
                  enemyData(i, 8) = 2 * missionDifficulty#
               EndIf
            Else
               enemyData(i, 8) = 0
            EndIf
         Else
            If Val(playerData$(1, 5)) > 0
               If enemyData(i, 4) > Val(playerData$(1, 1)) and enemyData(i, 4) < Val(playerData$(1, 1)) + 400
                  If enemyData(i, 5) + 16 > Val(playerData$(1, 2)) + 36
                     enemyData(i, 8) = -2 * missionDifficulty#
                  Else
                     enemyData(i, 8) = 2 * missionDifficulty#
                  EndIf
               Else
                  enemyData(i, 8) = 0
               EndIf
            Else
               If enemyData(i, 4) > Val(playerData$(2, 1)) and enemyData(i, 4) < Val(playerData$(2, 1)) + 400
                  If enemyData(i, 5) + 16 > Val(playerData$(2, 2)) + 36
                     enemyData(i, 8) = -2 * missionDifficulty#
                  Else
                     enemyData(i, 8) = 2 * missionDifficulty#
                  EndIf
               Else
                  enemyData(i, 8) = 0
               EndIf
            EndIf
         EndIf
      EndIf

      `Image changing for box enemies
      If (enemyData(i, 10) = 605 or enemyData(i, 10) = 606) and imageTimer = 0
         If enemyData(i, 10) = 605
            enemyData(i, 10) = 606
         Else
            enemyData(i, 10) = 605
         EndIf
      EndIf

   Next i

   If imageTimer = 0 then imageTimer = 36
   If imageTimer > 0 then DEC imageTimer

Return

EnemyFormations:
`Sets enemy array data to spawn in new wave of enemies.

   `Each enemy formation is created by filling the enemy array with different
   `values of data. Each enemy will have a different set of AI commands to
   `follow, depending on the enemyFormation variable. The AI can be found in
   `EnemyHandlingSpecial. Each block of code is one wave of enemies. This is
   `a long section of code.

   `Wave 1: Grey Middle lane
   If enemyFormation = 1

      distanceAdderX = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -7
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 54

      Next i

   EndIf

   `Wave 2: Grey Bottom Wall
   If enemyFormation = 2

      distanceAdderY = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 720 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -7
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderY = distanceAdderY - 50
      Next i

   EndIf

   `Wave 3: Grey Top Wall
   If enemyFormation = 3

      distanceAdderY = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 80 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -7
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderY = distanceAdderY + 50
      Next i

   EndIf

   `Wave 4: Yellow 2 lane
   If enemyFormation = 4

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
         EndIf
      Next i

   EndIf

   `Wave 5: Yellow X-shape
   If enemyFormation = 5

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
         If enemyVariation = 0
            enemyData(i, 5) = 145 - distanceAdderY
            enemyData(i, 8) = 1
            enemyVariation = 1
         Else
            enemyData(i, 5) = 575 + distanceAdderY
            enemyData(i, 8) = -1
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
            distanceAdderY = distanceAdderY + 10
         EndIf
      Next i

   EndIf

   `Wave 6: Yellow wall
   If enemyFormation = 6

      distanceAdderY = -300
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -8
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderY = distanceAdderY + 60
      Next i

   EndIf

   `Wave 7: Fast crossover
   If enemyFormation = 7

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -9
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50

         If enemyVariation = 0
            enemyData(i, 5) = 100
            enemyData(i, 12) = 3
         Else
            enemyData(i, 5) = 698
            enemyData(i, 12) = 4
         EndIf

         If i = 6
            enemyVariation = 1
            distanceAdderX = 0
         EndIf

      Next i

   EndIf

   `Wave 8: Fast 1 lane zigzag
   If enemyFormation = 8

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 6
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY - 30

      Next i

   EndIf

   `Wave 9: Fast 3 lane zigzag
   If enemyFormation = 9

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 6
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = -8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY + 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 7 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY - 50

      Next i

      distanceAdderX = 0
      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50

      Next i

   EndIf

   `Wave 10: Fast frenzy zigzag
   If enemyFormation = 10

      distanceAdderX = 0
      For i = 1 to 13
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = (6 * (rnd(2) - 1)) + (rnd(5) - 2)
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50

      Next i

   EndIf

   `Wave 11: Yellow double wall
   If enemyFormation = 11

      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + (130 * enemyVariation)
         enemyData(i, 5) = 625 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         If enemyVariation = 0
            enemyVariation = 1
         Else
            enemyVariation = 0
            distanceAdderY = distanceAdderY - 50
         EndIf

      Next i

   EndIf

   `Wave 12: Yellow and grey double wall
   If enemyFormation = 12

      distanceAdderY = 0
      enemyVariation = 1
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + (100 * enemyVariation)
         enemyData(i, 5) = 625 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4 - enemyVariation
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602 - enemyVariation
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         If enemyVariation = 0
            enemyData(i, 13) = 200
            enemyVariation = 1
         Else
            enemyData(i, 13) = 100
            enemyVariation = 0
            distanceAdderY = distanceAdderY - 50
         EndIf

      Next i

   EndIf

   `Wave 13: Sphere wall with gap
   If enemyFormation = 13

      distanceAdderY = 0
      enemyVariation = rnd(12)
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080
         If i = enemyVariation
            distanceAdderY = distanceAdderY + 80
         EndIf
         enemyData(i, 5) = 81 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 14: Sphere randoms
   If enemyFormation = 14

      For i = 1 to 15
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 15: Sphere double wall
   If enemyFormation = 15

      distanceAdderY = 0
      enemyVariation = rnd(10)
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080
         If i = enemyVariation
            distanceAdderY = distanceAdderY + 80
         EndIf
         enemyData(i, 5) = 136 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

      distanceAdderY = 0
      enemyVariation = rnd(10)
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1380
         If i = enemyVariation + 10
            distanceAdderY = distanceAdderY + 80
         EndIf
         enemyData(i, 5) = 136 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 16: Sphere and grey random
   If enemyFormation = 16

      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(300) + 1324
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 17: Sphere and yellow random
   If enemyFormation = 17

      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(300) + 1324
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -3 - (rnd(1))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 18: Sphere and fast random
   If enemyFormation = 18

      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(300) + 1324
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 19: Boxes 1
   If enemyFormation = 19

      enemyVariation = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 605 + enemyVariation
         enemyData(i, 12) = 2
         enemyData(i, 13) = -10
         enemyVariation = 1 - enemyVariation
      Next i

   EndIf

   `Wave 20: Boxes 2
   If enemyFormation = 20

      enemyVariation = 0
      For i = 1 to 15
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 605 + enemyVariation
         enemyData(i, 12) = 2
         enemyData(i, 13) = -10
         enemyVariation = 1 - enemyVariation
      Next i

   EndIf

   `Wave 21: Boxes random number
   If enemyFormation = 21

      enemyVariation = 0
      For i = 1 to rnd(19) + 1
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 605 + enemyVariation
         enemyData(i, 12) = 2
         enemyData(i, 13) = -10
         enemyVariation = 1 - enemyVariation
      Next i

   EndIf

   `Wave 22: Boxes and sphere column
   If enemyFormation = 22

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1100 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0

         If enemyVariation = 0
            enemyData(i, 5) = 120
         Else
            enemyData(i, 5) = 678
         EndIf

         enemyVariation = 1 - enemyVariation
         distanceAdderX = distanceAdderX + 150

      Next i

      enemyVariation = 0
      For i = 9 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(470) + 140
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 605 + enemyVariation
         enemyData(i, 12) = 2
         enemyData(i, 13) = -10
         enemyVariation = 1 - enemyVariation
      Next i

   EndIf

   `Wave 23: Boxes and sphere column 2
   If enemyFormation = 23

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1100 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0

         If enemyVariation = 0
            enemyData(i, 5) = 120
         Else
            enemyData(i, 5) = 678
         EndIf

         enemyVariation = 1 - enemyVariation
         distanceAdderX = distanceAdderX + 100

      Next i

      enemyVariation = 0
      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(470) + 140
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 605 + enemyVariation
         enemyData(i, 12) = 2
         enemyData(i, 13) = -10
         enemyVariation = 1 - enemyVariation
      Next i

   EndIf

   `Wave 24: Meteor random
   If enemyFormation = 24
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 3
         enemyData(i, 7) = -8 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 611
         enemyData(i, 12) = 2
         enemyData(i, 13) = 50
      Next i
   EndIf

   `Wave 25: Meteor bounce
   If enemyFormation = 25
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 3
         enemyData(i, 7) = -8 - (rnd(2))
         enemyData(i, 8) = (6 * (rnd(2) - 1)) + (rnd(5) - 2)
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 611
         enemyData(i, 12) = 2
         enemyData(i, 13) = 50
      Next i
   EndIf

   `Wave 26: Pirate boat arrow shape
   If enemyFormation = 26

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1200 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         If enemyVariation = 0
            enemyData(i, 5) = 330 - distanceAdderY
            enemyVariation = 0
         Else
            enemyData(i, 5) = 516 + distanceAdderY
            distanceAdderX = distanceAdderX + 60
            distanceAdderY = distanceAdderY + 36
            enemyVariation = 1
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 27: Pirate boat and sphere wall
   If enemyFormation = 27

      distanceAdderY = 0
      enemyVariation = rnd(12)
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080
         If i = enemyVariation
            distanceAdderY = distanceAdderY + 80
         EndIf
         enemyData(i, 5) = 81 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
      Next i

      distanceAdderY = rnd(242) + 78
      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1200
         enemyData(i, 5) = distanceAdderY + ((i-13) * 50)
         enemyData(i, 6) = 3
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120
      Next i

   EndIf

   `Wave 28: Pirate boat pulsing formation
   If enemyFormation = 28

      enemyVariation = 4
      For i = 1 to 18
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         If i <= 9 then enemyData(i, 4) = 1080
         If i > 9 then enemyData(i, 4) = 1240
         enemyData(i, 5) = 399
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = enemyVariation
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120
         DEC enemyVariation
         If enemyVariation < -4 then enemyVariation = 4
      Next i

   EndIf

   `Wave 29: Pirate boat double arrow
   If enemyFormation = 29

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1200 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         If enemyVariation = 0
            enemyData(i, 5) = 330 - distanceAdderY
         Else
            enemyData(i, 5) = 516 + distanceAdderY
            distanceAdderX = distanceAdderX + 70
            distanceAdderY = distanceAdderY + 36
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 11 to 19
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1200 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         If enemyVariation = 0
            enemyData(i, 5) = 423 - distanceAdderY
            INC distanceAdderX, 70
            INC distanceAdderY, 36
         Else
            enemyData(i, 5) = 423 + distanceAdderY
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 30: Pirate boat fast random
   If enemyFormation = 30

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(500) + 1024
         enemyData(i, 5) = rnd(652) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -7
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120
      Next i

   EndIf

   `Wave 31: Tiny random
   If enemyFormation = 31

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(500) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
      Next i

   EndIf

   `Wave 32: Tiny walls
   If enemyFormation = 32

      distanceAdderY = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080
         enemyData(i, 5) = 160 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
      Next i

      distanceAdderY = 0
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1380
         enemyData(i, 5) = 160 + distanceAdderY
         distanceAdderY = distanceAdderY + 50
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
      Next i

   EndIf

   `Wave 33: Tiny and grey rows
   If enemyFormation = 33

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 18
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         If i <= 8 then enemyData(i, 10) = 615
         If i > 8 then enemyData(i, 10) = 601
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
         EndIf
      Next i

   EndIf

   `Wave 34: Tiny 2 lane zigzag
   If enemyFormation = 34

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = -8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY + 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY - 50

      Next i

   EndIf

   `Wave 35: Battleships 1
   If enemyFormation = 35

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 5
         enemyData(i, 7) = -2
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 125
         EndIf
      Next i

   EndIf

   `Wave 36: Battleships 2
   If enemyFormation = 36

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 5
         enemyData(i, 7) = -2
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         If enemyVariation = 0
            enemyData(i, 5) = 120
            enemyVariation = 1
         Else
            If enemyVariation = 1
               enemyData(i, 5) = 360
               enemyVariation = 2
            Else
               enemyData(i, 5) = 600
               enemyVariation = 0
               distanceAdderX = distanceAdderX + 125
            EndIf
         EndIf
      Next i

   EndIf

   `Wave 37: Battleships 3
   If enemyFormation = 37

      distanceAdderX = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         distanceAdderX = distanceAdderX + 110

      Next i

   EndIf

   `Wave 38: Battleships Random
   If enemyFormation = 38

      distanceAdderX = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         distanceAdderX = distanceAdderX + 110

      Next i

   EndIf

   `Wave 39: Cruisers 1
   If enemyFormation = 39

      distanceAdderX = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 616
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200

         distanceAdderX = distanceAdderX + 80

      Next i

   EndIf

   `Wave 40: Cruisers Bounce +  Yellow X
   If enemyFormation = 40

      distanceAdderX = 0
      enemyVariation = 1
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 375
         enemyData(i, 6) = 5
         enemyData(i, 7) = -5
         enemyData(i, 8) = 4 * enemyVariation
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 616
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200

         distanceAdderX = distanceAdderX + 80
         enemyVariation = 0 - enemyVariation

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         If enemyVariation = 0
            enemyData(i, 5) = 145 - distanceAdderY
            enemyData(i, 8) = 1
            enemyVariation = 1
         Else
            enemyData(i, 5) = 575 + distanceAdderY
            enemyData(i, 8) = -1
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
            distanceAdderY = distanceAdderY + 10
         EndIf
      Next i

   EndIf

   `Wave 41: Tiny and battleship double wall
   If enemyFormation = 41

      distanceAdderY = 0
      enemyVariation = 1
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + (100 * enemyVariation)
         enemyData(i, 5) = 625 + distanceAdderY
         enemyData(i, 7) = -3 + enemyVariation
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200

         If enemyVariation = 0
            enemyData(i, 13) = 200
            enemyData(i, 6) = 5
            enemyData(i, 10) = 607
            enemyVariation = 1
         Else
            enemyData(i, 13) = 100
            enemyData(i, 6) = 1
            enemyData(i, 10) = 615
            enemyVariation = 0
            distanceAdderY = distanceAdderY - 50
         EndIf

      Next i

   EndIf

   `Wave 42: Sphere and battleship random
   If enemyFormation = 42

      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
      Next i

      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(300) + 1324
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -5 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 43: Sphere and tiny random
   If enemyFormation = 43

      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 11) = 0
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(300) + 1324
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
      Next i

   EndIf

   `Wave 44: Tiny and battleship 3 lane zigzag
   If enemyFormation = 44

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = -8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY + 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 9 to 16
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 50
         distanceAdderY = distanceAdderY - 50

      Next i

      distanceAdderX = 0
      For i = 17 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 5
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         distanceAdderX = distanceAdderX + 110

      Next i

   EndIf

   `Wave 45: Fast frenzy zigzag + Battleships
   If enemyFormation = 45

      distanceAdderX = 0
      For i = 1 to 13
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = (6 * (rnd(2) - 1)) + (rnd(5) - 2)
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150

         distanceAdderX = distanceAdderX + 50

      Next i

      distanceAdderX = 0
      For i = 14 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         distanceAdderX = distanceAdderX + 110

      Next i

   EndIf

   `Wave 46: Cruiser pulse
   If enemyFormation = 46

      enemyVariation = 4
      For i = 1 to 18
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         If i <= 9 then enemyData(i, 4) = 1080
         If i > 9 then enemyData(i, 4) = 1240
         enemyData(i, 5) = 375
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = enemyVariation
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 616
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         DEC enemyVariation
         If enemyVariation < -4 then enemyVariation = 4
      Next i

   EndIf

   `Wave 47: Sword 1
   If enemyFormation = 47

      distanceAdderY = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080
         enemyData(i, 5) = 181 + distanceAdderY
         enemyData(i, 6) = 4
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         INC distanceAdderY, 70
      Next i

      distanceAdderY = 0
      For i = 8 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1320
         enemyData(i, 5) = 181 + distanceAdderY
         enemyData(i, 6) = 4
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         INC distanceAdderY, 70
      Next i

   EndIf

   `Wave 48: Sword 2
   If enemyFormation = 48

      For i = 1 to (8 + (rnd(5)))
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1025 + (i * 60)
         enemyData(i, 5) = rnd(594) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
      Next i

   EndIf

   `Wave 49: Sword 3
   If enemyFormation = 49

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1600 - distanceAdderX
         enemyData(i, 6) = 4
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         If enemyVariation = 0
            enemyData(i, 5) = 349 - distanceAdderY
            enemyVariation = 0
         Else
            enemyData(i, 5) = 433 + distanceAdderY
            INC distanceAdderX, 70
            INC distanceAdderY, 36
            enemyVariation = 1
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 50: Sword cross
   If enemyFormation = 50

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 6) = 4
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderX, 100

         If enemyVariation = 0
            enemyData(i, 5) = 100
            enemyData(i, 12) = 3
         Else
            enemyData(i, 5) = 682
            enemyData(i, 12) = 4
         EndIf

         If i = 6
            enemyVariation = 1
            distanceAdderX = 0
         EndIf
      Next i

   EndIf

   `Wave 51: Sphere and cruiser random
   If enemyFormation = 51

      For i = 1 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
      Next i

      For i = 15 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(500) + 1124
         enemyData(i, 5) = rnd(594) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -5 - (rnd(2))
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 616
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
      Next i

   EndIf

   `Wave 52: Sphere and sword random
   If enemyFormation = 52

      For i = 1 to 15
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(1024) + 1024
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 604
         enemyData(i, 12) = 1
         enemyData(i, 13) = 0
      Next i

      For i = 16 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(400) + 1224
         enemyData(i, 5) = rnd(626) + 78
         enemyData(i, 6) = 4
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
      Next i

   EndIf

   `Wave 53: Battleships and sword random
   If enemyFormation = 53

      distanceAdderX = 0
      For i = 1 to 6
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(626) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -3
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         INC distanceAdderX, 180
      Next i

      For i = 7 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = enemyData(i-6, 4) + 80
         enemyData(i, 5) = enemyData(i-6, 5) + 8
         enemyData(i, 6) = 4
         enemyData(i, 7) = -3
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 607
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
      Next i

   EndIf

   `Wave 54: Cruisers and sword random
   If enemyFormation = 54

      distanceAdderX = 0
      For i = 1 to 6
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(626) + 78
         enemyData(i, 6) = 5
         enemyData(i, 7) = -3
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 617
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         INC distanceAdderX, 150
      Next i

      For i = 7 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = enemyData(i-6, 4) + 70
         enemyData(i, 5) = enemyData(i-6, 5) - 16
         enemyData(i, 6) = 5
         enemyData(i, 7) = -3
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 616
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
      Next i

   EndIf

   `Wave 55: Squid 1
   If enemyFormation = 55

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 16
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            INC distanceAdderX, 56
         EndIf
      Next i

   EndIf

   `Wave 56: Squid 2
   If enemyFormation = 56

      distanceAdderX = 0
      enemyVariation = rnd(1)
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 125 + (470 * enemyVariation)
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 3 + enemyVariation
         enemyData(i, 13) = 150
         INC distanceAdderX, 70
      Next i

   EndIf

   `Wave 57: Squid 3
   If enemyFormation = 57

      distanceAdderX = 0
      enemyVariation = rnd(1)
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = Rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150
         INC distanceAdderX, 60
      Next i

   EndIf

   `Wave 58: Squids and rowboats 1
   If enemyFormation = 58

      distanceAdderX = 0
      enemyVariation = rnd(1)
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = Rnd(642) + 78
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150
         INC distanceAdderX, 55
      Next i

      distanceAdderX = 0
      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1524 + distanceAdderX
         enemyData(i, 5) = Rnd(642) + 78
         enemyData(i, 6) = 2
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120
         INC distanceAdderX, 60
      Next i

   EndIf

   `Wave 59: Squids and rowboats 2
   If enemyFormation = 59

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1200 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -7
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150

         If enemyVariation = 0
            enemyData(i, 5) = 330 - distanceAdderY
         Else
            enemyData(i, 5) = 516 + distanceAdderY
            INC distanceAdderX, 70
            INC distanceAdderY, 36
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      enemyVariation = 0
      For i = 11 to 19
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1300 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 608
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         If enemyVariation = 0
            enemyData(i, 5) = 423 - distanceAdderY
            INC distanceAdderX, 70
            INC distanceAdderY, 36
         Else
            enemyData(i, 5) = 423 + distanceAdderY
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 60: Octopus 1
   If enemyFormation = 60

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 18
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            INC distanceAdderX, 56
         EndIf
      Next i

   EndIf

   `Wave 61: Octopus 2
   If enemyFormation = 61

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = -6
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         INC distanceAdderX, 50
         DEC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = 6
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         INC distanceAdderX, 50
         INC distanceAdderY, 50

      Next i

   EndIf

   `Wave 62: Octopus 3
   If enemyFormation = 62

      distanceAdderY = -300
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         distanceAdderY = distanceAdderY + 60
      Next i

      distanceAdderY = -300
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1424
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         distanceAdderY = distanceAdderY + 60
      Next i

   EndIf

   `Wave 63: Octopus and squid 1
   If enemyFormation = 63

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1100 + distanceAdderX
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         If enemyVariation = 0
            enemyData(i, 5) = 120
         Else
            enemyData(i, 5) = 678
         EndIf

         enemyVariation = 1 - enemyVariation
         INC distanceAdderX, 100

      Next i

      enemyVariation = 0
      For i = 9 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = rnd(750) + 1074
         enemyData(i, 5) = rnd(470) + 140
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150
      Next i

   EndIf

   `Wave 64: Octopus and squid 2
   If enemyFormation = 64

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = -6
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         INC distanceAdderX, 50
         DEC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 8 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 2
         enemyData(i, 7) = -4
         enemyData(i, 8) = 6
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 610
         enemyData(i, 12) = 0
         enemyData(i, 13) = 180

         INC distanceAdderX, 50
         INC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      For i = 15 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 609
         enemyData(i, 12) = 5
         enemyData(i, 13) = 150

         INC distanceAdderX, 110

      Next i

   EndIf

   `Wave 65: Cloaks 1
   If enemyFormation = 65

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 612
         enemyData(i, 12) = 0
         enemyData(i, 13) = 210
         If enemyVariation = 0
            enemyData(i, 5) = 225
            enemyVariation = 1
         Else
            enemyData(i, 5) = 495
            enemyVariation = 0
            INC distanceAdderX, 56
         EndIf
      Next i

   EndIf

   `Wave 66: Cloaks 2
   If enemyFormation = 66

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = -8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 612
         enemyData(i, 12) = 0
         enemyData(i, 13) = 210

         INC distanceAdderX, 50
         INC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 11 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 612
         enemyData(i, 12) = 0
         enemyData(i, 13) = 210

         INC distanceAdderX, 50
         DEC distanceAdderY, 50

      Next i

   EndIf

   `Wave 67: Cloaks 3
   If enemyFormation = 67

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 5
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 612
         enemyData(i, 12) = 0
         enemyData(i, 13) = 210
         If enemyVariation = 0
            enemyData(i, 5) = 159
            enemyVariation = 1
         Else
            If enemyVariation = 1
               enemyData(i, 5) = 399
               enemyVariation = 2
            Else
               enemyData(i, 5) = 639
               enemyVariation = 0
               distanceAdderX = distanceAdderX + 125
            EndIf
         EndIf
      Next i

   EndIf

   `Wave 68: Cloak and fast rows
   If enemyFormation = 68

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         If i <= 10 then enemyData(i, 10) = 603: enemyData(i, 7) = -7
         If i > 10 then enemyData(i, 10) = 612: enemyData(i, 7) = -4
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 200
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0
         If enemyVariation = 0
            enemyData(i, 5) = 125
            enemyVariation = 1
         Else
            enemyData(i, 5) = 595
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
         EndIf
      Next i

   EndIf

   `Wave 69: Cloak frenzy zigzag
   If enemyFormation = 69

      distanceAdderX = 0
      For i = 1 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -4
         enemyData(i, 8) = (5 * (rnd(2) - 1)) + (rnd(5) - 2)
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 612
         enemyData(i, 12) = 0
         enemyData(i, 13) = 210

         INC distanceAdderX, 50

      Next i

   EndIf

   `Wave 70: Crystal ships 1
   If enemyFormation = 70

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 349 + distanceAdderY
         enemyData(i, 6) = 3
         enemyData(i, 7) = -4
         enemyData(i, 8) = -4
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 3
         enemyData(i, 13) = 250

         INC distanceAdderX, 80
         DEC distanceAdderY, 200

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 8 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 449 + distanceAdderY
         enemyData(i, 6) = 3
         enemyData(i, 7) = -4
         enemyData(i, 8) = 4
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 4
         enemyData(i, 13) = 250

         INC distanceAdderX, 80
         INC distanceAdderY, 200

      Next i

   EndIf

   `Wave 71: Crystal ships 2
   If enemyFormation = 71

      distanceAdderX = 0
      For i = 1 to 9
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 11) = 0
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         enemyData(i, 14) = 0
         enemyData(i, 15) = 0

         INC distanceAdderX, 54

      Next i

   EndIf

   `Wave 72: Crystal ships 3
   If enemyFormation = 72

      distanceAdderY = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 720 + distanceAdderY
         enemyData(i, 6) = 3
         enemyData(i, 7) = -7
         enemyData(i, 8) = -1
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         DEC distanceAdderY, 50

      Next i

   EndIf

   `Wave 73: Crystal ships 4
   If enemyFormation = 73

      distanceAdderY = 0
      For i = 1 to 8
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 80 + distanceAdderY
         enemyData(i, 6) = 3
         enemyData(i, 7) = -7
         enemyData(i, 8) = 1
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderY, 50

      Next i

   EndIf

   `Wave 74: Crystal ships 5
   If enemyFormation = 74

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 3 + enemyVariation
         enemyData(i, 13) = 250

         If enemyVariation = 1
            INC distanceAdderX, 70
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 75: Crystals and Yellow rows
   If enemyFormation = 75

      distanceAdderX = 0
      For i = 1 to 10
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderX, 70

      Next i

      distanceAdderX = 0
      For i = 11 to 15
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1374 + distanceAdderX
         enemyData(i, 5) = 319
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         INC distanceAdderX, 70

      Next i

      distanceAdderX = 0
      For i = 16 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1374 + distanceAdderX
         enemyData(i, 5) = 479
         enemyData(i, 6) = 1
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 602
         enemyData(i, 12) = 0
         enemyData(i, 13) = 120

         INC distanceAdderX, 70

      Next i

   EndIf

   `Wave 76: Crystals and tiny
   If enemyFormation = 76

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = -8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160

         INC distanceAdderX, 50
         INC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 8 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 8
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 615
         enemyData(i, 12) = 0
         enemyData(i, 13) = 160

         INC distanceAdderX, 50
         DEC distanceAdderY, 50

      Next i

      distanceAdderX = 0
      For i = 15 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderX, 50

      Next i

   EndIf

   `Wave 77: Crystals and grey
   If enemyFormation = 77

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 1 to 6
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = -4
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100

         INC distanceAdderX, 50

      Next i

      distanceAdderX = 0
      distanceAdderY = 0
      For i = 7 to 12
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 1
         enemyData(i, 7) = -5
         enemyData(i, 8) = 4
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 601
         enemyData(i, 12) = 0
         enemyData(i, 13) = 100

         INC distanceAdderX, 50

      Next i

      distanceAdderX = 0
      For i = 13 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -5
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 613
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderX, 50

      Next i

   EndIf

   `Wave 78: Stars 1
   If enemyFormation = 78

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 5) = rnd(642) + 78
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 614
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         If enemyVariation = 1
            INC distanceAdderX, 70
         EndIf

         enemyVariation = 1 - enemyVariation

      Next i

   EndIf

   `Wave 79: Stars 2
   If enemyFormation = 79

      distanceAdderX = 0
      For i = 1 to 13
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1030 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = (6 * (rnd(2) - 1)) + (rnd(5) - 2)
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 614
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250

         INC distanceAdderX, 50

      Next i

   EndIf

   `Wave 80: Stars 3
   If enemyFormation = 80

      distanceAdderX = 0
      enemyVariation = 0
      For i = 1 to 14
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024 + distanceAdderX
         enemyData(i, 6) = 3
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 614
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         If enemyVariation = 0
            enemyData(i, 5) = 205
            enemyVariation = 1
         Else
            enemyData(i, 5) = 515
            enemyVariation = 0
            distanceAdderX = distanceAdderX + 56
         EndIf
      Next i

   EndIf

   `Wave 81: Stars 4
   If enemyFormation = 81

      distanceAdderX = 0
      enemyVariation = 4
      For i = 1 to 20
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1080 + distanceAdderX
         enemyData(i, 5) = 399
         enemyData(i, 6) = 3
         enemyData(i, 7) = -3
         enemyData(i, 8) = enemyVariation
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 614
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         DEC enemyVariation, 2
         If enemyVariation < -4
            enemyVariation = 4
            INC distanceAdderX, 200
         EndIf
      Next i

   EndIf

   `Wave 82: Stars and fast ships
   If enemyFormation = 82

      distanceAdderY = 0
      For i = 1 to 7
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1024
         enemyData(i, 5) = 99 + distanceAdderY
         enemyData(i, 6) = 5
         enemyData(i, 7) = -6
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 614
         enemyData(i, 12) = 0
         enemyData(i, 13) = 250
         INC distanceAdderY, 100
      Next i

      distanceAdderY = 0
      For i = 8 to 13
         enemyData(i, 1) = 1
         enemyData(i, 2) = enemyGroup#
         enemyData(i, 3) = enemyFormation
         enemyData(i, 4) = 1324
         enemyData(i, 5) = 149 + distanceAdderY
         enemyData(i, 6) = 1
         enemyData(i, 7) = -9
         enemyData(i, 8) = 0
         enemyData(i, 9) = SPRITEENEMY + i - 1
         enemyData(i, 10) = 603
         enemyData(i, 12) = 0
         enemyData(i, 13) = 150
         INC distanceAdderY, 100
      Next i

   EndIf

   `Wave 83: Typical enemy wave
   `This was used in alpha testing to test enemy speed and score calculations.
   If enemyFormation = 83

      enemyData(1, 1) = 1
      enemyData(1, 2) = enemyGroup#
      enemyData(1, 3) = enemyFormation
      enemyData(1, 4) = 1024
      enemyData(1, 5) = 399
      enemyData(1, 6) = 1
      enemyData(1, 7) = -4
      enemyData(1, 8) = 0
      enemyData(1, 9) = 61
      enemyData(1, 10) = 601
      enemyData(1, 12) = 0
      enemyData(1, 13) = 120

   EndIf

   `Sets music to play if other music is playing.
   If enemyFormation > 0 and bossForm = 0
      If sound looping(setMusic) = 0 then GoSub StopAllMusic: Loop sound setMusic
   EndIf

Return

EnemyFormationReset:
`Ensures that all data relating to enemies is cleared off of the screen before spawning a new wave.

   For l = 1 to 20
      enemyData(l, 1) = 0
      enemyData(l, 2) = 0
      enemyData(l, 3) = 0
      enemyData(l, 4) = 0
      enemyData(l, 5) = 768
      enemyData(l, 6) = 0
      enemyData(l, 7) = 0
      enemyData(l, 8) = 0
      enemyData(l, 9) = SPRITEENEMY + l - 1
      enemyData(l, 10) = 361
      enemyData(l, 11) = 0
      enemyData(l, 12) = 0
      enemyData(l, 13) = 100
      enemyData(l, 14) = 0
      enemyData(l, 15) = 0
      Sprite enemyData(l, 9), enemyData(l, 4), enemyData(l, 5), enemyData(l, 10)
   Next l

Return

EnemyScripts:
`Executes certain waves of enemies dependant on what mission the player is in.

   `Mission 1 script.
   If missionNumber = 1
      If missionStage = 1 then enemyFormation = 1
      If missionStage = 2 then enemyFormation = 1
      If missionStage = 3 then enemyFormation = 1
      If missionStage = 4 then enemyFormation = 2
      If missionStage = 5 then enemyFormation = 3
      If missionStage = 6 then enemyFormation = 2
      If missionStage = 7 then enemyFormation = 3
      If missionStage = 8 then enemyFormation = 4
      If missionStage = 9 then enemyFormation = 4
      If missionStage = 10 then enemyFormation = 4
      If missionStage = 11 then enemyFormation = 1
      If missionStage = 12 then enemyFormation = 2
      If missionStage = 13 then enemyFormation = 3
      If missionStage = 14 then enemyFormation = 3
      If missionStage = 15 then enemyFormation = 2
      If missionStage = 16 then enemyFormation = 1
      If missionStage = 17 then enemyFormation = 3
      If missionStage = 18 then enemyFormation = 4
      If missionStage = 19 then enemyFormation = 1
      If missionStage = 20 then enemyFormation = 2
      If missionStage = 21 then enemyFormation = 2
      If missionStage = 22 then enemyFormation = 3
      If missionStage = 23 then enemyFormation = 3
      If missionStage = 24 then enemyFormation = 4
      If missionStage = 25 then bossForm = 1
      If missionStage > 25 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 2 script.
   If missionNumber = 2
      If missionStage = 1 then enemyFormation = 5
      If missionStage = 2 then enemyFormation = 5
      If missionStage = 3 then enemyFormation = 4
      If missionStage = 4 then enemyFormation = 5
      If missionStage = 5 then enemyFormation = 6
      If missionStage = 6 then enemyFormation = 6
      If missionStage = 7 then enemyFormation = 4
      If missionStage = 8 then enemyFormation = 5
      If missionStage = 9 then enemyFormation = 1
      If missionStage = 10 then enemyFormation = 2
      If missionStage = 11 then enemyFormation = 3
      If missionStage = 12 then enemyFormation = 2
      If missionStage = 13 then enemyFormation = 3
      If missionStage = 14 then enemyFormation = 6
      If missionStage = 15 then enemyFormation = 11
      If missionStage = 16 then enemyFormation = 11
      If missionStage = 17 then enemyFormation = 6
      If missionStage = 18 then enemyFormation = 6
      If missionStage = 19 then enemyFormation = 11
      If missionStage = 20 then enemyFormation = 12
      If missionStage = 21 then enemyFormation = 12
      If missionStage = 22 then enemyFormation = 1
      If missionStage = 23 then enemyFormation = 1
      If missionStage = 24 then enemyFormation = 5
      If missionStage = 25 then enemyFormation = 6
      If missionStage = 26 then enemyFormation = 5
      If missionStage = 27 then enemyFormation = 12
      If missionStage = 28 then enemyFormation = 11
      If missionStage = 29 then enemyFormation = 12
      If missionStage = 30 then bossForm = 2
      If missionStage > 30 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 3 script.
   If missionNumber = 3
      If missionStage = 1 then enemyFormation = 11
      If missionStage = 2 then enemyFormation = 11
      If missionStage = 3 then enemyFormation = 12
      If missionStage = 4 then enemyFormation = 5
      If missionStage = 5 then enemyFormation = 6
      If missionStage = 6 then enemyFormation = 7
      If missionStage = 7 then enemyFormation = 7
      If missionStage = 8 then enemyFormation = 7
      If missionStage = 9 then enemyFormation = 7
      If missionStage = 10 then enemyFormation = 5
      If missionStage = 11 then enemyFormation = 4
      If missionStage = 12 then enemyFormation = 11
      If missionStage = 13 then enemyFormation = 8
      If missionStage = 14 then enemyFormation = 7
      If missionStage = 15 then enemyFormation = 6
      If missionStage = 16 then enemyFormation = 5
      If missionStage = 17 then enemyFormation = 8
      If missionStage = 18 then enemyFormation = 8
      If missionStage = 19 then enemyFormation = 4
      If missionStage = 20 then enemyFormation = 12
      If missionStage = 21 then enemyFormation = 9
      If missionStage = 22 then enemyFormation = 7
      If missionStage = 23 then enemyFormation = 6
      If missionStage = 24 then enemyFormation = 12
      If missionStage = 25 then enemyFormation = 12
      If missionStage = 26 then enemyFormation = 6
      If missionStage = 27 then enemyFormation = 7
      If missionStage = 28 then enemyFormation = 8
      If missionStage = 29 then enemyFormation = 9
      If missionStage = 30 then enemyFormation = 7
      If missionStage = 31 then enemyFormation = 8
      If missionStage = 32 then enemyFormation = 12
      If missionStage = 33 then enemyFormation = 6
      If missionStage = 34 then enemyFormation = 9
      If missionStage = 35 then bossForm = 3
      If missionStage > 35 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 4 script.
   If missionNumber = 4
      If missionStage = 1 then enemyFormation = 7
      If missionStage = 2 then enemyFormation = 1
      If missionStage = 3 then enemyFormation = 7
      If missionStage = 4 then enemyFormation = 2
      If missionStage = 5 then enemyFormation = 3
      If missionStage = 6 then enemyFormation = 3
      If missionStage = 7 then enemyFormation = 2
      If missionStage = 8 then enemyFormation = 12
      If missionStage = 9 then enemyFormation = 11
      If missionStage = 10 then enemyFormation = 7
      If missionStage = 11 then enemyFormation = 7
      If missionStage = 12 then enemyFormation = 6
      If missionStage = 13 then enemyFormation = 5
      If missionStage = 14 then enemyFormation = 4
      If missionStage = 15 then enemyFormation = 8
      If missionStage = 16 then enemyFormation = 9
      If missionStage = 17 then enemyFormation = 8
      If missionStage = 18 then enemyFormation = 3
      If missionStage = 19 then enemyFormation = 4
      If missionStage = 20 then enemyFormation = 9
      If missionStage = 21 then enemyFormation = 12
      If missionStage = 22 then enemyFormation = 10
      If missionStage = 23 then enemyFormation = 10
      If missionStage = 24 then enemyFormation = 7
      If missionStage = 25 then enemyFormation = 8
      If missionStage = 26 then enemyFormation = 7
      If missionStage = 27 then enemyFormation = 6
      If missionStage = 28 then enemyFormation = 4
      If missionStage = 29 then enemyFormation = 5
      If missionStage = 30 then enemyFormation = 2
      If missionStage = 31 then enemyFormation = 3
      If missionStage = 32 then enemyFormation = 10
      If missionStage = 33 then enemyFormation = 9
      If missionStage = 34 then enemyFormation = 10
      If missionStage = 35 then enemyFormation = 8
      If missionStage = 36 then enemyFormation = 10
      If missionStage = 37 then enemyFormation = 11
      If missionStage = 38 then enemyFormation = 10
      If missionStage = 39 then enemyFormation = 5
      If missionStage = 40 then bossForm = 4
      If missionStage > 40 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 5 script.
   If missionNumber = 5
      If missionStage = 1 then enemyFormation = 12
      If missionStage = 2 then enemyFormation = 11
      If missionStage = 3 then enemyFormation = 13
      If missionStage = 4 then enemyFormation = 13
      If missionStage = 5 then enemyFormation = 14
      If missionStage = 6 then enemyFormation = 8
      If missionStage = 7 then enemyFormation = 9
      If missionStage = 8 then enemyFormation = 13
      If missionStage = 9 then enemyFormation = 15
      If missionStage = 10 then enemyFormation = 10
      If missionStage = 11 then enemyFormation = 10
      If missionStage = 12 then enemyFormation = 4
      If missionStage = 13 then enemyFormation = 16
      If missionStage = 14 then enemyFormation = 16
      If missionStage = 15 then enemyFormation = 13
      If missionStage = 16 then enemyFormation = 15
      If missionStage = 17 then enemyFormation = 15
      If missionStage = 18 then enemyFormation = 9
      If missionStage = 19 then enemyFormation = 12
      If missionStage = 20 then enemyFormation = 16
      If missionStage = 21 then enemyFormation = 17
      If missionStage = 22 then enemyFormation = 18
      If missionStage = 23 then enemyFormation = 13
      If missionStage = 24 then enemyFormation = 5
      If missionStage = 25 then enemyFormation = 2
      If missionStage = 26 then enemyFormation = 3
      If missionStage = 27 then enemyFormation = 1
      If missionStage = 28 then enemyFormation = 6
      If missionStage = 29 then enemyFormation = 11
      If missionStage = 30 then enemyFormation = 12
      If missionStage = 31 then enemyFormation = 18
      If missionStage = 32 then enemyFormation = 18
      If missionStage = 33 then enemyFormation = 7
      If missionStage = 34 then enemyFormation = 9
      If missionStage = 35 then enemyFormation = 14
      If missionStage = 36 then enemyFormation = 14
      If missionStage = 37 then enemyFormation = 14
      If missionStage = 38 then enemyFormation = 9
      If missionStage = 39 then enemyFormation = 7
      If missionStage = 40 then enemyFormation = 6
      If missionStage = 41 then enemyFormation = 17
      If missionStage = 42 then enemyFormation = 18
      If missionStage = 43 then enemyFormation = 16
      If missionStage = 44 then enemyFormation = 18
      If missionStage = 45 then enemyFormation = 15
      If missionStage = 46 then enemyFormation = 15
      If missionStage = 47 then enemyFormation = 15
      If missionStage = 48 then enemyFormation = 9
      If missionStage = 49 then enemyFormation = 6
      If missionStage = 50 then bossForm = 5
      If missionStage > 50 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 6 script.
   If missionNumber = 6
      If missionStage = 1 then enemyFormation = 13
      If missionStage = 2 then enemyFormation = 14
      If missionStage = 3 then enemyFormation = 14
      If missionStage = 4 then enemyFormation = 15
      If missionStage = 5 then enemyFormation = 19
      If missionStage = 6 then enemyFormation = 19
      If missionStage = 7 then enemyFormation = 22
      If missionStage = 8 then enemyFormation = 24
      If missionStage = 9 then enemyFormation = 20
      If missionStage = 10 then enemyFormation = 20
      If missionStage = 11 then enemyFormation = 24
      If missionStage = 12 then enemyFormation = 24
      If missionStage = 13 then enemyFormation = 15
      If missionStage = 14 then enemyFormation = 21
      If missionStage = 15 then enemyFormation = 21
      If missionStage = 16 then enemyFormation = 15
      If missionStage = 17 then enemyFormation = 23
      If missionStage = 18 then enemyFormation = 22
      If missionStage = 19 then enemyFormation = 25
      If missionStage = 20 then enemyFormation = 24
      If missionStage = 21 then enemyFormation = 24
      If missionStage = 22 then enemyFormation = 24
      If missionStage = 23 then enemyFormation = 20
      If missionStage = 24 then enemyFormation = 25
      If missionStage = 25 then enemyFormation = 14
      If missionStage = 26 then enemyFormation = 15
      If missionStage = 27 then enemyFormation = 21
      If missionStage = 28 then enemyFormation = 21
      If missionStage = 29 then enemyFormation = 22
      If missionStage = 30 then bossForm = 6
      If missionStage > 30 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 7 script.
   If missionNumber = 7
      If missionStage = 1 then enemyFormation = 26
      If missionStage = 2 then enemyFormation = 24
      If missionStage = 3 then enemyFormation = 26
      If missionStage = 4 then enemyFormation = 24
      If missionStage = 5 then enemyFormation = 27
      If missionStage = 6 then enemyFormation = 22
      If missionStage = 7 then enemyFormation = 23
      If missionStage = 8 then enemyFormation = 30
      If missionStage = 9 then enemyFormation = 30
      If missionStage = 10 then enemyFormation = 26
      If missionStage = 11 then enemyFormation = 27
      If missionStage = 12 then enemyFormation = 21
      If missionStage = 13 then enemyFormation = 13
      If missionStage = 14 then enemyFormation = 15
      If missionStage = 15 then enemyFormation = 29
      If missionStage = 16 then enemyFormation = 29
      If missionStage = 17 then enemyFormation = 26
      If missionStage = 18 then enemyFormation = 29
      If missionStage = 19 then enemyFormation = 25
      If missionStage = 20 then enemyFormation = 25
      If missionStage = 21 then enemyFormation = 30
      If missionStage = 22 then enemyFormation = 27
      If missionStage = 23 then enemyFormation = 28
      If missionStage = 24 then enemyFormation = 29
      If missionStage = 25 then enemyFormation = 27
      If missionStage = 26 then enemyFormation = 26
      If missionStage = 27 then enemyFormation = 28
      If missionStage = 28 then enemyFormation = 30
      If missionStage = 29 then enemyFormation = 25
      If missionStage = 30 then enemyFormation = 27
      If missionStage = 31 then enemyFormation = 28
      If missionStage = 32 then enemyFormation = 30
      If missionStage = 33 then enemyFormation = 27
      If missionStage = 34 then enemyFormation = 28
      If missionStage = 35 then bossForm = 7
      If missionStage > 35 then bossForm = 0: missionEnd = 1

   EndIf

   `Mission 8 script.
   If missionNumber = 8
      If missionStage = 1 then enemyFormation = 25
      If missionStage = 2 then enemyFormation = 24
      If missionStage = 3 then enemyFormation = 25
      If missionStage = 4 then enemyFormation = 24
      If missionStage = 5 then enemyFormation = 24
      If missionStage = 6 then enemyFormation = 32
      If missionStage = 7 then enemyFormation = 32
      If missionStage = 8 then enemyFormation = 33
      If missionStage = 9 then enemyFormation = 3
      If missionStage = 10 then enemyFormation = 5
      If missionStage = 11 then enemyFormation = 12
      If missionStage = 12 then enemyFormation = 17
      If missionStage = 13 then enemyFormation = 18
      If missionStage = 14 then enemyFormation = 20
      If missionStage = 15 then enemyFormation = 10
      If missionStage = 16 then enemyFormation = 9
      If missionStage = 17 then enemyFormation = 7
      If missionStage = 18 then enemyFormation = 23
      If missionStage = 19 then enemyFormation = 31
      If missionStage = 20 then enemyFormation = 31
      If missionStage = 21 then enemyFormation = 34
      If missionStage = 22 then enemyFormation = 33
      If missionStage = 23 then enemyFormation = 34
      If missionStage = 24 then enemyFormation = 32
      If missionStage = 25 then enemyFormation = 34
      If missionStage = 26 then enemyFormation = 12
      If missionStage = 27 then enemyFormation = 14
      If missionStage = 28 then enemyFormation = 13
      If missionStage = 29 then enemyFormation = 15
      If missionStage = 30 then enemyFormation = 15
      If missionStage = 31 then enemyFormation = 35
      If missionStage = 32 then enemyFormation = 34
      If missionStage = 33 then enemyFormation = 33
      If missionStage = 34 then enemyFormation = 32
      If missionStage = 35 then enemyFormation = 31
      If missionStage = 36 then enemyFormation = 32
      If missionStage = 37 then enemyFormation = 35
      If missionStage = 38 then enemyFormation = 36
      If missionStage = 39 then enemyFormation = 35
      If missionStage = 40 then bossForm = 8
      If missionStage > 40 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 9 script.
   If missionNumber = 9
      If missionStage = 1 then enemyFormation = 35
      If missionStage = 2 then enemyFormation = 36
      If missionStage = 3 then enemyFormation = 15
      If missionStage = 4 then enemyFormation = 35
      If missionStage = 5 then enemyFormation = 31
      If missionStage = 6 then enemyFormation = 31
      If missionStage = 7 then enemyFormation = 34
      If missionStage = 8 then enemyFormation = 34
      If missionStage = 9 then enemyFormation = 32
      If missionStage = 10 then enemyFormation = 4
      If missionStage = 11 then enemyFormation = 1
      If missionStage = 12 then enemyFormation = 34
      If missionStage = 13 then enemyFormation = 32
      If missionStage = 14 then enemyFormation = 32
      If missionStage = 15 then enemyFormation = 16
      If missionStage = 16 then enemyFormation = 17
      If missionStage = 17 then enemyFormation = 18
      If missionStage = 18 then enemyFormation = 43
      If missionStage = 19 then enemyFormation = 42
      If missionStage = 20 then enemyFormation = 38
      If missionStage = 21 then enemyFormation = 37
      If missionStage = 22 then enemyFormation = 36
      If missionStage = 23 then enemyFormation = 41
      If missionStage = 24 then enemyFormation = 41
      If missionStage = 25 then enemyFormation = 34
      If missionStage = 26 then enemyFormation = 31
      If missionStage = 27 then enemyFormation = 2
      If missionStage = 28 then enemyFormation = 3
      If missionStage = 29 then enemyFormation = 41
      If missionStage = 30 then enemyFormation = 42
      If missionStage = 31 then enemyFormation = 43
      If missionStage = 32 then enemyFormation = 44
      If missionStage = 33 then enemyFormation = 38
      If missionStage = 34 then enemyFormation = 36
      If missionStage = 35 then enemyFormation = 44
      If missionStage = 36 then enemyFormation = 13
      If missionStage = 37 then enemyFormation = 13
      If missionStage = 38 then enemyFormation = 15
      If missionStage = 39 then enemyFormation = 13
      If missionStage = 40 then enemyFormation = 9
      If missionStage = 41 then enemyFormation = 8
      If missionStage = 42 then enemyFormation = 44
      If missionStage = 43 then enemyFormation = 41
      If missionStage = 44 then enemyFormation = 34
      If missionStage = 45 then bossForm = 9
      If missionStage > 45 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 10 script.
   If missionNumber = 10
      If missionStage = 1 then enemyFormation = 39
      If missionStage = 2 then enemyFormation = 42
      If missionStage = 3 then enemyFormation = 40
      If missionStage = 4 then enemyFormation = 46
      If missionStage = 5 then enemyFormation = 46
      If missionStage = 6 then enemyFormation = 45
      If missionStage = 7 then enemyFormation = 32
      If missionStage = 8 then enemyFormation = 32
      If missionStage = 9 then enemyFormation = 34
      If missionStage = 10 then enemyFormation = 41
      If missionStage = 11 then enemyFormation = 42
      If missionStage = 12 then enemyFormation = 33
      If missionStage = 13 then enemyFormation = 24
      If missionStage = 14 then enemyFormation = 37
      If missionStage = 15 then enemyFormation = 35
      If missionStage = 16 then enemyFormation = 45
      If missionStage = 17 then enemyFormation = 51
      If missionStage = 18 then enemyFormation = 42
      If missionStage = 19 then enemyFormation = 36
      If missionStage = 20 then enemyFormation = 9
      If missionStage = 21 then enemyFormation = 10
      If missionStage = 22 then enemyFormation = 21
      If missionStage = 23 then enemyFormation = 16
      If missionStage = 24 then enemyFormation = 18
      If missionStage = 25 then enemyFormation = 51
      If missionStage = 26 then enemyFormation = 47
      If missionStage = 27 then enemyFormation = 47
      If missionStage = 28 then enemyFormation = 34
      If missionStage = 29 then enemyFormation = 47
      If missionStage = 30 then enemyFormation = 48
      If missionStage = 31 then enemyFormation = 46
      If missionStage = 32 then enemyFormation = 43
      If missionStage = 33 then enemyFormation = 42
      If missionStage = 34 then enemyFormation = 48
      If missionStage = 35 then enemyFormation = 48
      If missionStage = 36 then enemyFormation = 54
      If missionStage = 37 then enemyFormation = 39
      If missionStage = 38 then enemyFormation = 44
      If missionStage = 39 then enemyFormation = 24
      If missionStage = 40 then enemyFormation = 49
      If missionStage = 41 then enemyFormation = 49
      If missionStage = 42 then enemyFormation = 48
      If missionStage = 43 then enemyFormation = 47
      If missionStage = 44 then enemyFormation = 49
      If missionStage = 45 then enemyFormation = 51
      If missionStage = 46 then enemyFormation = 25
      If missionStage = 47 then enemyFormation = 31
      If missionStage = 48 then enemyFormation = 10
      If missionStage = 49 then enemyFormation = 40
      If missionStage = 50 then enemyFormation = 38
      If missionStage = 51 then enemyFormation = 37
      If missionStage = 52 then bossForm = 10
      If missionStage > 52 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 11 script.
   If missionNumber = 11
      If missionStage = 1 then enemyFormation = 11
      If missionStage = 2 then enemyFormation = 12
      If missionStage = 3 then enemyFormation = 25
      If missionStage = 4 then enemyFormation = 36
      If missionStage = 5 then enemyFormation = 46
      If missionStage = 6 then enemyFormation = 50
      If missionStage = 7 then enemyFormation = 48
      If missionStage = 8 then enemyFormation = 54
      If missionStage = 9 then enemyFormation = 9
      If missionStage = 10 then enemyFormation = 10
      If missionStage = 11 then enemyFormation = 35
      If missionStage = 12 then enemyFormation = 33
      If missionStage = 13 then enemyFormation = 23
      If missionStage = 14 then enemyFormation = 45
      If missionStage = 15 then enemyFormation = 10
      If missionStage = 16 then enemyFormation = 13
      If missionStage = 17 then enemyFormation = 14
      If missionStage = 18 then enemyFormation = 13
      If missionStage = 19 then enemyFormation = 22
      If missionStage = 20 then enemyFormation = 43
      If missionStage = 21 then enemyFormation = 49
      If missionStage = 22 then enemyFormation = 42
      If missionStage = 23 then enemyFormation = 15
      If missionStage = 24 then enemyFormation = 44
      If missionStage = 25 then enemyFormation = 32
      If missionStage = 26 then enemyFormation = 50
      If missionStage = 27 then enemyFormation = 52
      If missionStage = 28 then enemyFormation = 2
      If missionStage = 29 then enemyFormation = 3
      If missionStage = 30 then enemyFormation = 37
      If missionStage = 31 then enemyFormation = 52
      If missionStage = 32 then enemyFormation = 53
      If missionStage = 33 then enemyFormation = 54
      If missionStage = 34 then enemyFormation = 52
      If missionStage = 35 then bossForm = 11
      If missionStage > 35 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 12 script.
   If missionNumber = 12
      If missionStage = 1 then enemyFormation = 26
      If missionStage = 2 then enemyFormation = 26
      If missionStage = 3 then enemyFormation = 30
      If missionStage = 4 then enemyFormation = 19
      If missionStage = 5 then enemyFormation = 29
      If missionStage = 6 then enemyFormation = 28
      If missionStage = 7 then enemyFormation = 25
      If missionStage = 8 then enemyFormation = 26
      If missionStage = 9 then enemyFormation = 28
      If missionStage = 10 then enemyFormation = 29
      If missionStage = 11 then enemyFormation = 20
      If missionStage = 12 then enemyFormation = 55
      If missionStage = 13 then enemyFormation = 20
      If missionStage = 14 then enemyFormation = 55
      If missionStage = 15 then enemyFormation = 20
      If missionStage = 16 then enemyFormation = 57
      If missionStage = 17 then enemyFormation = 58
      If missionStage = 18 then enemyFormation = 26
      If missionStage = 19 then enemyFormation = 27
      If missionStage = 20 then enemyFormation = 57
      If missionStage = 21 then enemyFormation = 55
      If missionStage = 22 then enemyFormation = 56
      If missionStage = 23 then enemyFormation = 29
      If missionStage = 24 then enemyFormation = 30
      If missionStage = 25 then enemyFormation = 60
      If missionStage = 26 then enemyFormation = 56
      If missionStage = 27 then enemyFormation = 58
      If missionStage = 28 then enemyFormation = 63
      If missionStage = 29 then enemyFormation = 61
      If missionStage = 30 then enemyFormation = 60
      If missionStage = 31 then enemyFormation = 62
      If missionStage = 32 then enemyFormation = 63
      If missionStage = 33 then enemyFormation = 30
      If missionStage = 34 then enemyFormation = 29
      If missionStage = 35 then enemyFormation = 64
      If missionStage = 36 then enemyFormation = 63
      If missionStage = 37 then enemyFormation = 64
      If missionStage = 38 then enemyFormation = 59
      If missionStage = 39 then enemyFormation = 62
      If missionStage = 40 then bossForm = 12
      If missionStage > 40 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 13 script.
   If missionNumber = 13
      If missionStage = 1 then enemyFormation = 55
      If missionStage = 2 then enemyFormation = 59
      If missionStage = 3 then enemyFormation = 45
      If missionStage = 4 then enemyFormation = 62
      If missionStage = 5 then enemyFormation = 64
      If missionStage = 6 then enemyFormation = 64
      If missionStage = 7 then enemyFormation = 9
      If missionStage = 8 then enemyFormation = 26
      If missionStage = 9 then enemyFormation = 18
      If missionStage = 10 then enemyFormation = 19
      If missionStage = 11 then enemyFormation = 34
      If missionStage = 12 then enemyFormation = 40
      If missionStage = 13 then enemyFormation = 54
      If missionStage = 14 then enemyFormation = 63
      If missionStage = 15 then enemyFormation = 46
      If missionStage = 16 then enemyFormation = 63
      If missionStage = 17 then enemyFormation = 56
      If missionStage = 18 then enemyFormation = 56
      If missionStage = 19 then enemyFormation = 57
      If missionStage = 20 then enemyFormation = 54
      If missionStage = 21 then enemyFormation = 50
      If missionStage = 22 then enemyFormation = 48
      If missionStage = 23 then enemyFormation = 44
      If missionStage = 24 then enemyFormation = 6
      If missionStage = 25 then enemyFormation = 15
      If missionStage = 26 then enemyFormation = 26
      If missionStage = 27 then enemyFormation = 62
      If missionStage = 28 then enemyFormation = 64
      If missionStage = 29 then enemyFormation = 30
      If missionStage = 30 then enemyFormation = 15
      If missionStage = 31 then enemyFormation = 47
      If missionStage = 32 then enemyFormation = 27
      If missionStage = 33 then enemyFormation = 52
      If missionStage = 34 then enemyFormation = 30
      If missionStage = 35 then enemyFormation = 27
      If missionStage = 36 then enemyFormation = 49
      If missionStage = 37 then enemyFormation = 15
      If missionStage = 38 then enemyFormation = 45
      If missionStage = 39 then enemyFormation = 42
      If missionStage = 40 then bossForm = 13
      If missionStage > 40 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 14 script.
   If missionNumber = 14
      If missionStage = 1 then enemyFormation = 50
      If missionStage = 2 then enemyFormation = 53
      If missionStage = 3 then enemyFormation = 52
      If missionStage = 4 then enemyFormation = 36
      If missionStage = 5 then enemyFormation = 37
      If missionStage = 6 then enemyFormation = 36
      If missionStage = 7 then enemyFormation = 39
      If missionStage = 8 then enemyFormation = 50
      If missionStage = 9 then enemyFormation = 45
      If missionStage = 10 then enemyFormation = 54
      If missionStage = 11 then enemyFormation = 65
      If missionStage = 12 then enemyFormation = 65
      If missionStage = 13 then enemyFormation = 66
      If missionStage = 14 then enemyFormation = 47
      If missionStage = 15 then enemyFormation = 54
      If missionStage = 16 then enemyFormation = 47
      If missionStage = 17 then enemyFormation = 48
      If missionStage = 18 then enemyFormation = 38
      If missionStage = 19 then enemyFormation = 38
      If missionStage = 20 then enemyFormation = 42
      If missionStage = 21 then enemyFormation = 31
      If missionStage = 22 then enemyFormation = 32
      If missionStage = 23 then enemyFormation = 65
      If missionStage = 24 then enemyFormation = 43
      If missionStage = 25 then enemyFormation = 66
      If missionStage = 26 then enemyFormation = 48
      If missionStage = 27 then enemyFormation = 10
      If missionStage = 28 then enemyFormation = 67
      If missionStage = 29 then enemyFormation = 67
      If missionStage = 30 then enemyFormation = 40
      If missionStage = 31 then enemyFormation = 53
      If missionStage = 32 then enemyFormation = 69
      If missionStage = 33 then enemyFormation = 25
      If missionStage = 34 then enemyFormation = 65
      If missionStage = 35 then enemyFormation = 46
      If missionStage = 36 then enemyFormation = 68
      If missionStage = 37 then enemyFormation = 35
      If missionStage = 38 then enemyFormation = 49
      If missionStage = 39 then enemyFormation = 38
      If missionStage = 40 then enemyFormation = 54
      If missionStage = 41 then enemyFormation = 51
      If missionStage = 42 then enemyFormation = 47
      If missionStage = 43 then enemyFormation = 40
      If missionStage = 44 then enemyFormation = 69
      If missionStage = 45 then enemyFormation = 68
      If missionStage = 46 then enemyFormation = 50
      If missionStage = 47 then enemyFormation = 65
      If missionStage = 48 then enemyFormation = 34
      If missionStage = 49 then enemyFormation = 68
      If missionStage = 50 then bossForm = 14
      If missionStage > 50 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 15 script.
   If missionNumber = 15
      If missionStage = 1 then enemyFormation = 16
      If missionStage = 2 then enemyFormation = 69
      If missionStage = 3 then enemyFormation = 50
      If missionStage = 4 then enemyFormation = 43
      If missionStage = 5 then enemyFormation = 37
      If missionStage = 6 then enemyFormation = 65
      If missionStage = 7 then enemyFormation = 40
      If missionStage = 8 then enemyFormation = 41
      If missionStage = 9 then enemyFormation = 51
      If missionStage = 10 then enemyFormation = 53
      If missionStage = 11 then enemyFormation = 38
      If missionStage = 12 then enemyFormation = 68
      If missionStage = 13 then enemyFormation = 10
      If missionStage = 14 then enemyFormation = 31
      If missionStage = 15 then enemyFormation = 51
      If missionStage = 16 then enemyFormation = 45
      If missionStage = 17 then enemyFormation = 1
      If missionStage = 18 then enemyFormation = 53
      If missionStage = 19 then enemyFormation = 9
      If missionStage = 20 then enemyFormation = 52
      If missionStage = 21 then enemyFormation = 7
      If missionStage = 22 then enemyFormation = 67
      If missionStage = 23 then enemyFormation = 70
      If missionStage = 24 then enemyFormation = 72
      If missionStage = 25 then enemyFormation = 73
      If missionStage = 26 then enemyFormation = 70
      If missionStage = 27 then enemyFormation = 50
      If missionStage = 28 then enemyFormation = 70
      If missionStage = 29 then enemyFormation = 65
      If missionStage = 30 then enemyFormation = 73
      If missionStage = 31 then enemyFormation = 72
      If missionStage = 32 then enemyFormation = 68
      If missionStage = 33 then enemyFormation = 75
      If missionStage = 34 then enemyFormation = 53
      If missionStage = 35 then enemyFormation = 71
      If missionStage = 36 then enemyFormation = 71
      If missionStage = 37 then enemyFormation = 74
      If missionStage = 38 then enemyFormation = 34
      If missionStage = 39 then enemyFormation = 36
      If missionStage = 40 then enemyFormation = 25
      If missionStage = 41 then enemyFormation = 20
      If missionStage = 42 then enemyFormation = 65
      If missionStage = 43 then enemyFormation = 71
      If missionStage = 44 then enemyFormation = 74
      If missionStage = 45 then enemyFormation = 71
      If missionStage = 46 then enemyFormation = 51
      If missionStage = 47 then enemyFormation = 70
      If missionStage = 48 then enemyFormation = 71
      If missionStage = 49 then enemyFormation = 71
      If missionStage = 50 then enemyFormation = 24
      If missionStage = 51 then enemyFormation = 72
      If missionStage = 52 then enemyFormation = 73
      If missionStage = 53 then enemyFormation = 75
      If missionStage = 54 then enemyFormation = 74
      If missionStage = 55 then bossForm = 15
      If missionStage > 55 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 16 script.
   If missionNumber = 16
      If missionStage = 1 then enemyFormation = 70: setBackground = 213
      If missionStage = 2 then enemyFormation = 74
      If missionStage = 3 then enemyFormation = 71
      If missionStage = 4 then enemyFormation = 72
      If missionStage = 5 then enemyFormation = 73
      If missionStage = 6 then enemyFormation = 76
      If missionStage = 7 then enemyFormation = 77
      If missionStage = 8 then enemyFormation = 70
      If missionStage = 9 then enemyFormation = 77
      If missionStage = 10 then enemyFormation = 76
      If missionStage = 11 then enemyFormation = 63: setBackground = 211
      If missionStage = 12 then enemyFormation = 61
      If missionStage = 13 then enemyFormation = 60
      If missionStage = 14 then enemyFormation = 64
      If missionStage = 15 then enemyFormation = 56
      If missionStage = 16 then enemyFormation = 55
      If missionStage = 17 then enemyFormation = 61
      If missionStage = 18 then enemyFormation = 58
      If missionStage = 19 then enemyFormation = 55
      If missionStage = 20 then enemyFormation = 57
      If missionStage = 21 then enemyFormation = 50: setBackground = 208
      If missionStage = 22 then enemyFormation = 54
      If missionStage = 23 then enemyFormation = 52
      If missionStage = 24 then enemyFormation = 67
      If missionStage = 25 then enemyFormation = 48
      If missionStage = 26 then enemyFormation = 66
      If missionStage = 27 then enemyFormation = 47
      If missionStage = 28 then enemyFormation = 68
      If missionStage = 29 then enemyFormation = 49
      If missionStage = 30 then enemyFormation = 69
      If missionStage = 31 then enemyFormation = 38: setBackground = 207
      If missionStage = 32 then enemyFormation = 35
      If missionStage = 33 then enemyFormation = 46
      If missionStage = 34 then enemyFormation = 40
      If missionStage = 35 then enemyFormation = 36
      If missionStage = 36 then enemyFormation = 51
      If missionStage = 37 then enemyFormation = 42
      If missionStage = 38 then enemyFormation = 39
      If missionStage = 39 then enemyFormation = 54
      If missionStage = 40 then enemyFormation = 37
      If missionStage = 41 then enemyFormation = 25: setBackground = 206
      If missionStage = 42 then enemyFormation = 20
      If missionStage = 43 then enemyFormation = 26
      If missionStage = 44 then enemyFormation = 29
      If missionStage = 45 then enemyFormation = 24
      If missionStage = 46 then enemyFormation = 23
      If missionStage = 47 then enemyFormation = 28
      If missionStage = 48 then enemyFormation = 22
      If missionStage = 49 then enemyFormation = 30
      If missionStage = 50 then enemyFormation = 25
      If missionStage = 51 then enemyFormation = 31: setBackground = 203
      If missionStage = 52 then enemyFormation = 13
      If missionStage = 53 then enemyFormation = 14
      If missionStage = 54 then enemyFormation = 34
      If missionStage = 55 then enemyFormation = 31
      If missionStage = 56 then enemyFormation = 15
      If missionStage = 57 then enemyFormation = 32
      If missionStage = 58 then enemyFormation = 34
      If missionStage = 59 then enemyFormation = 43
      If missionStage = 60 then enemyFormation = 14
      If missionStage = 61 then enemyFormation = 2: setBackground = 216
      If missionStage = 62 then enemyFormation = 3
      If missionStage = 63 then enemyFormation = 4
      If missionStage = 64 then enemyFormation = 7
      If missionStage = 65 then enemyFormation = 6
      If missionStage = 66 then enemyFormation = 1
      If missionStage = 67 then enemyFormation = 10
      If missionStage = 68 then enemyFormation = 5
      If missionStage = 69 then enemyFormation = 9
      If missionStage = 70 then bossForm = 16
      If missionStage > 70 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 17 script.
   If missionNumber = 17
      If missionStage = 1 then enemyFormation = 78
      If missionStage = 2 then enemyFormation = 70
      If missionStage = 3 then enemyFormation = 67
      If missionStage = 4 then enemyFormation = 78
      If missionStage = 5 then enemyFormation = 66
      If missionStage = 6 then enemyFormation = 76
      If missionStage = 7 then enemyFormation = 78
      If missionStage = 8 then enemyFormation = 77
      If missionStage = 9 then enemyFormation = 70
      If missionStage = 10 then enemyFormation = 76
      If missionStage = 11 then enemyFormation = 68
      If missionStage = 12 then enemyFormation = 81
      If missionStage = 13 then enemyFormation = 71
      If missionStage = 14 then enemyFormation = 70
      If missionStage = 15 then enemyFormation = 65
      If missionStage = 16 then enemyFormation = 72
      If missionStage = 17 then enemyFormation = 53
      If missionStage = 18 then enemyFormation = 81
      If missionStage = 19 then enemyFormation = 75
      If missionStage = 20 then enemyFormation = 67
      If missionStage = 21 then enemyFormation = 82
      If missionStage = 22 then enemyFormation = 46
      If missionStage = 23 then enemyFormation = 54
      If missionStage = 24 then enemyFormation = 79
      If missionStage = 25 then enemyFormation = 80
      If missionStage = 26 then enemyFormation = 69
      If missionStage = 27 then enemyFormation = 75
      If missionStage = 28 then enemyFormation = 38
      If missionStage = 29 then enemyFormation = 66
      If missionStage = 30 then enemyFormation = 72
      If missionStage = 31 then enemyFormation = 72
      If missionStage = 32 then enemyFormation = 73
      If missionStage = 33 then enemyFormation = 72
      If missionStage = 34 then enemyFormation = 74
      If missionStage = 35 then enemyFormation = 82
      If missionStage = 36 then enemyFormation = 52
      If missionStage = 37 then enemyFormation = 68
      If missionStage = 38 then enemyFormation = 74
      If missionStage = 39 then enemyFormation = 82
      If missionStage = 40 then enemyFormation = 49
      If missionStage = 41 then enemyFormation = 81
      If missionStage = 42 then enemyFormation = 76
      If missionStage = 43 then enemyFormation = 75
      If missionStage = 44 then enemyFormation = 47
      If missionStage = 45 then enemyFormation = 77
      If missionStage = 46 then enemyFormation = 65
      If missionStage = 47 then enemyFormation = 68
      If missionStage = 48 then enemyFormation = 80
      If missionStage = 49 then enemyFormation = 81
      If missionStage = 50 then bossForm = 17
      If missionStage > 50 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 18 script.
   If missionNumber = 18
      If missionStage = 1 then enemyFormation = 81
      If missionStage = 2 then enemyFormation = 13
      If missionStage = 3 then enemyFormation = 78
      If missionStage = 4 then enemyFormation = 82
      If missionStage = 5 then enemyFormation = 80
      If missionStage = 6 then enemyFormation = 13
      If missionStage = 7 then enemyFormation = 79
      If missionStage = 8 then enemyFormation = 22
      If missionStage = 9 then enemyFormation = 79
      If missionStage = 10 then enemyFormation = 78
      If missionStage = 11 then enemyFormation = 20
      If missionStage = 12 then enemyFormation = 15
      If missionStage = 13 then enemyFormation = 80
      If missionStage = 14 then enemyFormation = 19
      If missionStage = 15 then enemyFormation = 82
      If missionStage = 16 then enemyFormation = 15
      If missionStage = 17 then enemyFormation = 21
      If missionStage = 18 then enemyFormation = 82
      If missionStage = 19 then enemyFormation = 81
      If missionStage = 20 then bossForm = 18
      If missionStage > 20 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 19 script.
   If missionNumber = 19
      If missionStage = 1 then enemyFormation = 1
      If missionStage = 2 then enemyFormation = 2
      If missionStage = 3 then enemyFormation = 3
      If missionStage = 4 then enemyFormation = 4
      If missionStage = 5 then enemyFormation = 5
      If missionStage = 6 then enemyFormation = 6
      If missionStage = 7 then enemyFormation = 7
      If missionStage = 8 then enemyFormation = 8
      If missionStage = 9 then enemyFormation = 9
      If missionStage = 10 then enemyFormation = 10
      If missionStage = 11 then enemyFormation = 11
      If missionStage = 12 then enemyFormation = 12
      If missionStage = 13 then enemyFormation = 16
      If missionStage = 14 then enemyFormation = 17
      If missionStage = 15 then enemyFormation = 18
      If missionStage = 16 then enemyFormation = 19
      If missionStage = 17 then enemyFormation = 20
      If missionStage = 18 then enemyFormation = 24
      If missionStage = 19 then enemyFormation = 25
      If missionStage = 20 then bossForm = 5
      If missionStage = 21 then enemyFormation = 21:bossForm = 0
      If missionStage = 22 then enemyFormation = 22
      If missionStage = 23 then enemyFormation = 23
      If missionStage = 24 then enemyFormation = 26
      If missionStage = 25 then enemyFormation = 27
      If missionStage = 26 then enemyFormation = 28
      If missionStage = 27 then enemyFormation = 29
      If missionStage = 28 then enemyFormation = 30
      If missionStage = 29 then enemyFormation = 55
      If missionStage = 30 then enemyFormation = 56
      If missionStage = 31 then enemyFormation = 57
      If missionStage = 32 then enemyFormation = 58
      If missionStage = 33 then enemyFormation = 59
      If missionStage = 34 then enemyFormation = 60
      If missionStage = 35 then enemyFormation = 61
      If missionStage = 36 then enemyFormation = 62
      If missionStage = 37 then enemyFormation = 63
      If missionStage = 38 then enemyFormation = 64
      If missionStage = 39 then enemyFormation = 56
      If missionStage = 40 then bossForm = 7
      If missionStage = 41 then enemyFormation = 22:bossForm = 0
      If missionStage = 42 then enemyFormation = 21
      If missionStage = 43 then enemyFormation = 13
      If missionStage = 44 then enemyFormation = 14
      If missionStage = 45 then enemyFormation = 15
      If missionStage = 46 then enemyFormation = 31
      If missionStage = 47 then enemyFormation = 32
      If missionStage = 48 then enemyFormation = 33
      If missionStage = 49 then enemyFormation = 34
      If missionStage = 50 then enemyFormation = 35
      If missionStage = 51 then enemyFormation = 36
      If missionStage = 52 then enemyFormation = 37
      If missionStage = 53 then enemyFormation = 38
      If missionStage = 54 then enemyFormation = 31
      If missionStage = 55 then enemyFormation = 39
      If missionStage = 56 then enemyFormation = 40
      If missionStage = 57 then enemyFormation = 41
      If missionStage = 58 then enemyFormation = 42
      If missionStage = 59 then enemyFormation = 43
      If missionStage = 60 then bossForm = 10
      If missionStage = 61 then enemyFormation = 25:bossForm = 0
      If missionStage = 62 then enemyFormation = 39
      If missionStage = 63 then enemyFormation = 44
      If missionStage = 64 then enemyFormation = 45
      If missionStage = 65 then enemyFormation = 46
      If missionStage = 66 then enemyFormation = 47
      If missionStage = 67 then enemyFormation = 48
      If missionStage = 68 then enemyFormation = 49
      If missionStage = 69 then enemyFormation = 50
      If missionStage = 70 then enemyFormation = 51
      If missionStage = 71 then enemyFormation = 52
      If missionStage = 72 then enemyFormation = 53
      If missionStage = 73 then enemyFormation = 54
      If missionStage = 74 then enemyFormation = 13
      If missionStage = 75 then enemyFormation = 45
      If missionStage = 76 then enemyFormation = 31
      If missionStage = 77 then enemyFormation = 15
      If missionStage = 78 then enemyFormation = 41
      If missionStage = 79 then enemyFormation = 50
      If missionStage = 80 then bossForm = 15
      If missionStage = 81 then enemyFormation = 65:bossForm = 0
      If missionStage = 82 then enemyFormation = 66
      If missionStage = 83 then enemyFormation = 67
      If missionStage = 84 then enemyFormation = 68
      If missionStage = 85 then enemyFormation = 69
      If missionStage = 86 then enemyFormation = 67
      If missionStage = 87 then enemyFormation = 70
      If missionStage = 88 then enemyFormation = 71
      If missionStage = 89 then enemyFormation = 72
      If missionStage = 90 then enemyFormation = 73
      If missionStage = 91 then enemyFormation = 74
      If missionStage = 92 then enemyFormation = 75
      If missionStage = 93 then enemyFormation = 76
      If missionStage = 94 then enemyFormation = 77
      If missionStage = 95 then enemyFormation = 78
      If missionStage = 96 then enemyFormation = 79
      If missionStage = 97 then enemyFormation = 80
      If missionStage = 98 then enemyFormation = 81
      If missionStage = 99 then enemyFormation = 82
      If missionStage = 100 then bossForm = 16
      If missionStage > 100 then bossForm = 0: missionEnd = 1
   EndIf

   `Mission 20 script.
   If missionNumber = 20
      If missionStage = 1 then bossForm = 20
      If missionStage > 1 then bossForm = 0: missionEnd = 1
   EndIf

   GoSub BossFormations
   GoSub EnemyFormations

Return

BossHandling:
`Procedure used to control boss AI in boss battles. Handles boss movement,
`AI, firing, damage, collisions and more.

   For i = 1 to 5

      `Handles the movement and placing of boss sprites.
      Sprite bossData(i, 9), bossData(i, 3), bossData(i, 4), bossData(i, 10)
      If missionNumber = 0
         bossData(i, 3) = bossData(i, 3) + Int(bossData(i, 6) * (enemySpeedModifier + 1) * (endlessDifficulty# - 1))
         bossData(i, 4) = bossData(i, 4) + Int(bossData(i, 7) * (enemySpeedModifier + 1) * (endlessDifficulty# - 1))
      Else
         If missionDifficulty# > 1.00
            bossData(i, 3) = bossData(i, 3) + Int(bossData(i, 6) * (enemySpeedModifier + 1) * missionDifficulty#)
            If bossForm = 9 or bossForm = 13 or bossForm = 16
               bossData(i, 4) = bossData(i, 4) + Int(bossData(i, 7) * (enemySpeedModifier + 1))
            Else
               bossData(i, 4) = bossData(i, 4) + Int(bossData(i, 7) * (enemySpeedModifier + 1) * missionDifficulty#)
            EndIf
         Else
            bossData(i, 3) = bossData(i, 3) + Int(bossData(i, 6) * (enemySpeedModifier + 1))
            bossData(i, 4) = bossData(i, 4) + Int(bossData(i, 7) * (enemySpeedModifier + 1))
         EndIf
      EndIf

      `Handles bosses leaving the screen.
      If bossData(i, 3) <= 0 - (sprite width(bossData(i, 9))) and bossData(i, 1) = 1
         bossData(i, 3) = 1030
         If bossData(i, 2) = 3 or bossData(i, 2) = 14 then bossData(i, 4) = rnd(600) + 78
         If bossData(i, 2) = 10 and bossData(i, 10) = 665 then bossData(i, 4) = rnd(610) + 78
         If bossData(i, 2) = 20 and i <> 1 then bossData(i, 4) = rnd(621) + 78
      EndIf

   Next i

   `Evaluates if player projectiles are in contact with boss ships.
   For i = 1 to 5
      For j = 1 to (8 * playerTotal)
         If sprite collision(i + 100, j + 10) = 1
            If playerProjectiles(j, 7) = 435
               For k = 1 to 5
                  bossData(k, 5) = bossData(k, 5) - playerProjectiles(j, 5)
                  bossData(k, 11) = j
               Next k
               playerProjectiles(j, 6) = playerProjectiles(j, 6) - 1
               Play sound 61
            Else
               If bossData(i, 11) <> j
                  If bossData(i, 2) = 17 or bossData(i, 2) = 18 or bossData(i, 2) = 20
                     If bossData(i, 2) = 17
                        If i = 3
                           If bossData(1, 1) = 2 and bossData(2, 1) = 2
                              bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                           EndIf
                        Else
                           bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                        EndIf
                     EndIf
                     If bossData(i, 2) = 18
                        If i = 5
                           If bossData(1, 1) = 2 and bossData(2, 1) = 2 and bossData(3, 1) = 2 and bossData(4, 1) = 2
                              bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                           EndIf
                        Else
                           bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                        EndIf
                     EndIf
                     If bossData(i, 2) = 20
                        If i = 1
                           If bossData(2, 1) = 2 and bossData(3, 1) = 2 and bossData(4, 1) = 2 and bossData(5, 1) = 2
                              bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                           EndIf
                        Else
                           bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                        EndIf
                     EndIf
                  Else
                     bossData(i, 5) = bossData(i, 5) - playerProjectiles(j, 5)
                  EndIf
                  bossData(i, 11) = j
                  playerProjectiles(j, 6) = 0
               EndIf
            EndIf
         EndIf
      Next j

      `Checks boss health levels, and destroys boss if health is less than zero.
      If bossData(i, 5) <= 0 and bossData(i, 1) = 1
         bossData(i, 1) = 2
         bossData(i, 3) = -200
         bossData(i, 4) = 300
         bossData(i, 5) = 0
         bossData(i, 6) = 0
         bossData(i, 7) = 0
         If bossData(i, 11) >= 9 and bossData(i, 11) <= 16
            enemyKiller = 2
         Else
            enemyKiller = 1
         EndIf
         positionChange = (bossData(i, 8) * pointModifier * missionDifficulty#)
         playerData$(enemyKiller, 13) = STR$(Val(playerData$(enemyKiller, 13)) + positionChange)
         playerData$(enemyKiller, 14) = STR$(Val(playerData$(enemyKiller, 14)) + 1)
         bossData(i, 8) = 0
         bossData(i, 10) = 361
         bossData(i, 11) = 0
         bossData(i, 12) = -1
         Play sound 58
      EndIf

      `Makes sure the bosses health is zero if it is dead.
      If bossData(i, 1) = 2 then bossData(i, 5) = 0

      `Advances wave if all parts of the boss are defeated.
      If bossData(1, 1) = 2 and bossData(2, 1) = 2 and bossData(3, 1) = 2 and bossData(4, 1) = 2 and bossData(5, 1) = 2
         INC bossesKilled
         bossData(1,1) = 0
         bossData(2,1) = 0
         bossData(3,1) = 0
         bossData(4,1) = 0
         bossData(5,1) = 0
         GoSub RemoveAllSprites
         GoSub EnemyFormationReset
         GoSub RemoveEnemyProjectiles
      EndIf

      `Checks for boss collisions with the player and their shields.
      If gameMode$ = "Single"
         If sprite exist(SPRITEPLAYER) = 1 and sprite exist(SPRITEBOSS + i - 1) = 1
            If sprite collision(SPRITEPLAYER, SPRITEBOSS + i - 1) = 1
               If invincibility <= 0 and powerCoreActive$ <> "Nova Shielding"
                  playerDamage = 1
                  Play sound 59
               EndIf
            EndIf
         EndIf
      Else
         If sprite exist(SPRITEPLAYER + j - 1) = 1 and sprite exist(SPRITEBOSS + i - 1) = 1
            For j = 1 to 2
               If sprite collision(SPRITEPLAYER + j - 1, SPRITEBOSS + i - 1) = 1
                  If playerData$(j, 20) = "0" and powerCoreActive$ <> "Nova Shielding"
                     playerData$(j, 21) = "1"
                     Play sound 59
                  EndIf
               EndIf
            Next j
         EndIf
      EndIf

      `Fires boss lasers.
      If bossData(i, 1) = 1 and bossData(i, 12) = 0 and powerCoreActive$ <> "Evasion Cloak"
         If enemyProjectiles(bossProjectile, 1) = 0
            bossLaserRecharge = 0
            `Bosses 1, 3, 11 and 14
            If bossForm = 1 or bossForm = 3 or bossForm = 11 or bossForm = 14
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3)
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 33
               enemyProjectiles(bossProjectile, 4) = bossData(i, 6) - 3
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 40
            EndIf
            `Boss 4
            If bossForm = 4
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3) + 18
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 18
               enemyProjectiles(bossProjectile, 4) = -4
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 40
            EndIf
            `Boss 5
            If bossForm = 5
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3) + 30
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 46
               If bossData(i,3) + 45 <= Val(playerData$(1, 1))
                  enemyProjectiles(bossProjectile, 4) = 5
               Else
                  enemyProjectiles(bossProjectile, 4) = -5
               EndIf
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 10
            EndIf
            `Boss 6
            If bossForm = 6
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3) - 40
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = -8
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 0
            EndIf
            `Boss 7
            If bossForm = 7
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3) + 12 + (cannon * 88)
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 20
               enemyProjectiles(bossProjectile, 4) = -6
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 20
               cannon = 1 - cannon
            EndIf
            `Boss 8
            If bossForm = 8 and i <> 1 and bossData(1, 1) = 1
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3) + 24
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 24
               enemyProjectiles(bossProjectile, 4) = -5
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 20
            EndIf
            `Boss 10
            If bossForm = 10
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = -23
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = 4
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 15
            EndIf
            `Boss 12
            If bossForm = 12
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = 800
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = -8
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 0
            EndIf
            `Boss 15
            If bossForm = 15
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = 800
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = -4
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 20
            EndIf
            `Boss 17
            If bossForm = 17 and (bossData(1, 1) = 1 or bossData(2, 1) = 1)
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = 800
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = -5
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 15
            EndIf
            `Boss 18
            If bossForm = 18 and i <> 5
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = bossData(i, 3)
               enemyProjectiles(bossProjectile, 3) = bossData(i, 4) + 46
               enemyProjectiles(bossProjectile, 4) = -4
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 15
            EndIf
            `Boss 20
            If bossForm = 20
               enemyProjectiles(bossProjectile, 1) = 1
               enemyProjectiles(bossProjectile, 2) = -23
               enemyProjectiles(bossProjectile, 3) = rnd(666) + 78
               enemyProjectiles(bossProjectile, 4) = 5
               enemyProjectiles(bossProjectile, 5) = 1
               bossLaserRecharge = 5
            EndIf

            `Plays sound and increments bossProjectile if the projectile
            `has been fired.
            If bossLaserRecharge <> 0
               bossData(i, 12) = rnd(20) + bossLaserRecharge
               bossLaserRecharge = 0
               INC bossProjectile
               If bossProjectile > 20 then bossProjectile = 1
               Play sound 62
            EndIf
         EndIf
      EndIf

      `Projectiles for Rouge Adapt Bosses (9, 13 and 16)
      If bossForm = 9 or bossForm = 13 or bossForm = 16

         `Programming for the singleplayer variant of the bosses.
         If gameMode$ = "Single"

            For j = 1 to 8
               `Checks for collisions between rogue lasers and player.
               If sprite collision(1, 26 + j)
                  playerDamage = playerProjectiles(j + 16, 5)
                  playerProjectiles(j + 16, 6) = playerProjectiles(j + 16, 6) - 1
                  If playerProjectiles(j + 16, 6) <= 0
                     playerProjectiles(j + 16, 1) = 0
                     playerProjectiles(j + 16, 2) = 0
                     playerProjectiles(j + 16, 3) = 768
                     Sprite j + 26, 0, 768, 361
                  EndIf
                  Play sound 59
               EndIf

               `Moves lasers.
               If playerProjectiles(j + 16, 1) = 1
                  playerProjectiles(j + 16, 2) = playerProjectiles(j + 16, 2) + playerProjectiles(j + 16, 4)
                  Sprite j + 26, playerProjectiles(j + 16, 2), playerProjectiles(j + 16, 3), playerProjectiles(j + 16, 7)
                  If playerProjectiles(j + 16, 2) < -100 then playerProjectiles(j + 16, 1) = 0
               Else
                  Sprite j + 26, 0, 768, 361
               EndIf
            Next i

            `Fires new laser to mirror player shooting.
            If playerLaserFired = 1
               playerProjectiles(bossProjectile2 + 16, 1) = 1
               playerProjectiles(bossProjectile2 + 16, 2) = bossData(i, 3)
               playerProjectiles(bossProjectile2 + 16, 3) = bossData(i, 4)
               If missionDifficulty# > 1.00
                  If bossForm = 16
                     playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 2)
                  Else
                     playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4))
                  EndIf
               Else
                  If bossForm = 16
                     playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 4)
                  Else
                     playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 2)
                  EndIf
               EndIf
               If playerProjectiles(bossProjectile2 + 16, 4) >= 0 then playerProjectiles(bossProjectile2 + 16, 4) = -1
               playerProjectiles(bossProjectile2 + 16, 5) = 1
               playerProjectiles(bossProjectile2 + 16, 6) = 1
               If bossForm = 9 then playerProjectiles(bossProjectile2 + 16, 7) = 483
               If bossForm = 13 then playerProjectiles(bossProjectile2 + 16, 7) = 484
               If bossForm = 16 then playerProjectiles(bossProjectile2 + 16, 7) = 485
               INC bossProjectile2
               If bossProjectile2 > 8 then bossProjectile2 = 1
               Play sound 62
            EndIf

         `Programming for the multiplayer variants of the bosses.
         Else

            For k = 1 to 2
               For j = 1 + ((k-1) * 8) to 8 + ((k-1) * 8)
                  `Checks for collisions between rogue lasers and player.
                  If sprite collision(k, 26 + j)
                     playerData$(j, 21) = STR$(playerProjectiles(j + 16, 5))
                     playerProjectiles(j + 16, 6) = playerProjectiles(j + 16, 6) - 1
                     If playerProjectiles(j + 16, 6) <= 0
                        playerProjectiles(j + 16, 1) = 0
                        playerProjectiles(j + 16, 2) = 0
                        playerProjectiles(j + 16, 3) = 768
                        Sprite j + 26, 0, 768, 361
                     EndIf
                     Play sound 59
                  EndIf

                  `Moves lasers
                  If playerProjectiles(j + 16, 1) = 1
                     playerProjectiles(j + 16, 2) = playerProjectiles(j + 16, 2) + playerProjectiles(j + 16, 4)
                     Sprite j + 26, playerProjectiles(j + 16, 2), playerProjectiles(j + 16, 3), playerProjectiles(j + 16, 7)
                     If playerProjectiles(j + 16, 2) < -100 then playerProjectiles(j + 16, 1) = 0
                  Else
                     Sprite j + 26, 0, 768, 361
                  EndIf
               Next i

               `Fires new laser to mirror player shooting.
               If playerLaserFired = 1 and playerProjectiles(bossProjectile2 + 16, 1) = 0
                  playerProjectiles(bossProjectile2 + 16, 1) = 1
                  playerProjectiles(bossProjectile2 + 16, 2) = bossData(i, 3)
                  playerProjectiles(bossProjectile2 + 16, 3) = bossData(i, 4)
                  If missionDifficulty# > 1.00
                     If bossForm = 16
                        playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 4)
                     Else
                        playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 4) * 2
                     EndIf
                  Else
                     If bossForm = 16
                        playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 4) / 2
                     Else
                        playerProjectiles(bossProjectile2 + 16, 4) = (0 - playerProjectiles(bossProjectile2, 4) / 4)
                     EndIf
                  EndIf
                  If playerProjectiles(bossProjectile2 + 16, 4) >= 0 then playerProjectiles(bossProjectile2 + 16, 4) = -1
                  playerProjectiles(bossProjectile2 + 16, 5) = 1
                  playerProjectiles(bossProjectile2 + 16, 6) = 1
                  If bossForm = 9 then playerProjectiles(bossProjectile2 + 16, 7) = 483
                  If bossForm = 13 then playerProjectiles(bossProjectile2 + 16, 7) = 484
                  If bossForm = 16 then playerProjectiles(bossProjectile2 + 16, 7) = 485
                  INC bossProjectile2
                  If bossProjectile2 > 16 then bossProjectile2 = 1
                  Play sound 62
               EndIf
            Next k

         EndIf

      EndIf
      playerLaserFired = 0

      `Runs down timer for boss firing timer.
      If bossData(i, 12) > 0 then bossData(i, 12) = bossData(i, 12) - 1

      `Section for boss movement code and any other boss specific algorithms.
      `Boss 1
      If bossData(i, 2) = 1
         If bossData(i, 3) => 850 and bossData(i, 3) <= 860
            bossData(i, 3) = 848
            bossData(i, 6) = 0
            bossData(i, 7) = -4
         EndIf
         If bossData(i, 4) <= 80
            bossData(i, 7) = 4
         EndIf
         If bossData(i, 4) => 676
            bossData(i, 7) = -4
         EndIf
      EndIf

      `Boss 2
      If bossData(i, 2) = 2
         If bossData(i, 4) <= 80 then bossData(i, 7) = 0 - bossData(i, 7)
         If bossData(i, 4) => 676 then bossData(i, 7) = 0 - bossData(i, 7)
         If bossData(i, 3) <= 0 then bossData(i, 6) = 4
         If bossData(i, 3) => 934 then bossData(i, 6) = -4
      EndIf

      `Boss 4
      If bossData(i, 2) = 4
         `Causes boss to turn corners.
         If bossData(i, 3) <= 550 and bossData(i, 4) >= 690 then bossData(i, 6) = 0: bossData(i, 7) = -5: bossData(i, 3) = 550
         If bossData(i, 3) <= 550 and bossData(i, 4) <= 90 then bossData(i, 6) = 5: bossData(i, 7) = 0: bossData(i, 4) = 90
         If bossData(i, 3) >= 940 and bossData(i, 4) >= 690 then bossData(i, 6) = -5: bossData(i, 7) = 0: bossData(i, 4) = 690
         If bossData(i, 3) >= 940 and bossData(i, 4) <= 90 then bossData(i, 6) = 0: bossData(i, 7) = 5: bossData(i, 3) = 940
         `Changes another part of the boss to the head if previous head dies.
         If i <= 4
            If bossData(i+1, 1) = 2 and bossData(i, 10) <> 654
               bossData(i, 10) = 654
            EndIf
         EndIf
      EndIf

      `Boss 5
      If bossData(i, 2) = 5
         `Causes bosses to turn corners.
         If bossData(i, 3) <= 20 and bossData(i, 4) >= 640 then bossData(i, 6) = 0: bossData(i, 7) = -6: bossData(i, 3) = 20
         If bossData(i, 3) <= 20 and bossData(i, 4) <= 90 then bossData(i, 6) = 6: bossData(i, 7) = 0: bossData(i, 4) = 90
         If bossData(i, 3) >= 914 and bossData(i, 4) >= 640 then bossData(i, 6) = -6: bossData(i, 7) = 0: bossData(i, 4) = 640
         If bossData(i, 3) >= 914 and bossData(i, 4) <= 90 then bossData(i, 6) = 0: bossData(i, 7) = 6: bossData(i, 3) = 914
      EndIf

      `Boss 6
      If bossData(i, 2) = 6
         `Moves boss across the screen.
         If bossData(i, 3) <= 200 then bossData(i, 6) = 2
         If bossData(i, 3) >= 800 then bossData(i, 6) = -4
      EndIf

      `Boss 7
      If bossData(i, 2) = 7
         `Moves boss across the screen.
         If bossData(i, 3) <= 500 and bossData(i, 4) <= 108 then bossData(i, 6) = 3: bossData(i, 7) = 3
         If bossData(i, 3) <= 500 and bossData(i, 4) >= 588 then bossData(i, 6) = 3: bossData(i, 7) = -3
         If bossData(i, 3) >= 729 and bossData(i, 4) <= 108 then bossData(i, 6) = -3: bossData(i, 7) = 0
         If bossData(i, 3) >= 729 and bossData(i, 4) >= 588 then bossData(i, 6) = -3: bossData(i, 7) = 0
         If bossData(i, 3) >= 730 then bossData(i, 6) = 0: bossData(i, 3) = 729
      EndIf

      `Boss 8
      If bossData(i, 2) = 8
         If i = 1
            `Bounces sphere across the screen.
            If bossData(i, 4) <= 80 then bossData(i, 7) = 0 - bossData(i, 7)
            If bossData(i, 4) => 676 then bossData(i, 7) = 0 - bossData(i, 7)
            If bossData(i, 3) <= 0 then bossData(i, 6) = 4
            If bossData(i, 3) => 934 then bossData(i, 6) = -4
         Else
            `Moves turrets across the screen.
            If bossData(i, 3) <= 700 then bossData(i, 6) = 1
            If bossData(i, 3) >= 800 and bossData(i, 6) <> 4 then bossData(i, 6) = -1
         EndIf
      EndIf

      `Boss 9
      If bossData(i, 2) = 9
         If gameMode$ = "Single"
            If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
            If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
            If (bossData(i, 4) + 1 = Val(playerData$(1, 2))) or (bossData(i, 4) - 1 = Val(playerData$(1, 2)))
               bossData(i, 4) = Val(playerData$(1, 2))
            EndIf
            If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
         Else
            If i = 1
               If playerData$(1, 15) = "0"
                  If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                  If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                  If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                     bossData(i, 4) = Val(playerData$(1, 2))
                  EndIf
                  If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
               Else
                  If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                  If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                  If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                     bossData(i, 4) = Val(playerData$(2, 2))
                  EndIf
                  If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
               EndIf
            Else
               If playerData$(2, 15) = "0"
                  If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                  If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                  If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                     bossData(i, 4) = Val(playerData$(2, 2))
                  EndIf
                  If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
               Else
                  If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                  If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                  If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                     bossData(i, 4) = Val(playerData$(1, 2))
                  EndIf
                  If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
               EndIf
            EndIf
         EndIf
      EndIf

      `Boss 10
      If bossData(i, 2) = 10
         `Hammer: Bounce Vertically
         If bossData(i, 10) = 663
            If bossData(i, 3) => 850 and bossData(i, 3) <= 870
               bossData(i, 3) = 848
               bossData(i, 6) = 0
               bossData(i, 7) = -3
            EndIf
            If bossData(i, 4) <= 80 then bossData(i, 7) = 3
            If bossData(i, 4) => 676 then bossData(i, 7) = -3
         EndIf
         `Shield: Bounce Vertically
         If bossData(i, 10) = 664
            If bossData(i, 3) => 650 and bossData(i, 3) <= 670
               bossData(i, 3) = 648
               bossData(i, 6) = 0
               bossData(i, 7) = -6
            EndIf
            If bossData(i, 4) <= 80 then bossData(i, 7) = 6
            If bossData(i, 4) => 704 then bossData(i, 7) = -6
         EndIf
         `Sword: Charging Manoeuvre
         If bossData(i, 10) = 665 then bossData(i, 6) = -7
      EndIf

      `Boss 11
      If bossData(i, 2) = 11
         If bossData(i, 3) => 850 - (150 * (i-1)) and bossData(i, 3) <= 870 - (150 * (i-1))
            bossData(i, 3) = 848 - (150 * (i-1))
            bossData(i, 6) = 0
            bossData(i, 7) = -5 + i
         EndIf
         If bossData(i, 4) <= 80 then bossData(i, 7) = 5 - i
         If bossData(i, 4) => 676 then bossData(i, 7) = -5 + i
      EndIf

      `Boss 12
      If bossData(i, 2) = 12
         `Moves boss across the screen.
         If bossData(i, 3) <= 400 and bossData(i, 4) <= 108 then bossData(i, 6) = 5: bossData(i, 7) = 3
         If bossData(i, 3) <= 400 and bossData(i, 4) >= 588 then bossData(i, 6) = 5: bossData(i, 7) = -3
         If bossData(i, 3) >= 729 and bossData(i, 4) <= 108 then bossData(i, 6) = -5: bossData(i, 7) = 0
         If bossData(i, 3) >= 729 and bossData(i, 4) >= 588 then bossData(i, 6) = -5: bossData(i, 7) = 0
         If bossData(i, 3) >= 730 then bossData(i, 6) = 0: bossData(i, 3) = 729
      EndIf

      `Boss 13
      If bossData(i, 2) = 13
         If gameMode$ = "Single"
            If bossData(i, 5) > 30
               If bossData(i, 3) => 750 and bossData(i, 3) <= 770
                  bossData(i, 3) = 748
                  bossData(i, 6) = 0
                  bossData(i, 7) = -5
               EndIf
               If bossData(i, 4) <= 80
                  bossData(i, 7) = 5
               EndIf
               If bossData(i, 4) => 676
                  bossData(i, 7) = -5
               EndIf
            Else
               If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
               If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
               If (bossData(i, 4) + 1 = Val(playerData$(1, 2))) or (bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                  bossData(i, 4) = Val(playerData$(1, 2))
               EndIf
               If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
            EndIf
         Else
            If bossData(i, 5) > 30
               If bossData(i, 3) => 750 and bossData(i, 3) <= 770
                  bossData(i, 3) = 748
                  bossData(i, 6) = 0
                  bossData(i, 7) = -5
               EndIf
               If bossData(i, 4) <= 80
                  bossData(i, 7) = 5
               EndIf
               If bossData(i, 4) => 676
                  bossData(i, 7) = -5
               EndIf
            Else
               If i = 1
                  If playerData$(1, 15) = "0"
                     If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                     If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                     If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                        bossData(i, 4) = Val(playerData$(1, 2))
                     EndIf
                     If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
                  Else
                     If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                     If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                     If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                        bossData(i, 4) = Val(playerData$(2, 2))
                     EndIf
                     If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
                  EndIf
               Else
                  If playerData$(2, 15) = "0"
                     If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                     If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                     If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                        bossData(i, 4) = Val(playerData$(2, 2))
                     EndIf
                     If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
                  Else
                     If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                     If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                     If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                        bossData(i, 4) = Val(playerData$(1, 2))
                     EndIf
                     If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf

      `Boss 15
      If bossData(i, 2) = 15
         `Moves boss across the screen.
         If bossData(i, 3) <= 200 then bossData(i, 6) = 3
         If bossData(i, 3) >= 800 then bossData(i, 6) = -6
      EndIf

      `Boss 16
      If bossData(i, 2) = 16
         If gameMode$ = "Single"
            If bossData(i, 5) > 80
               bossData(i, 3) = 928 - Val(playerData$(1, 1))
               bossData(i, 4) = 768 - Val(playerData$(1, 2))
            Else
               If bossData(i, 5) > 25
                  If bossData(i, 3) > 770 then bossData(i, 6) = -4
                  If bossData(i, 3) => 750 and bossData(i, 3) <= 770
                     bossData(i, 3) = 748
                     bossData(i, 6) = 0
                     bossData(i, 7) = -3
                  EndIf
                  If bossData(i, 4) <= 80
                     bossData(i, 7) = 3
                  EndIf
                  If bossData(i, 4) => 676
                     bossData(i, 7) = -3
                  EndIf
               Else
                  If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                  If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                  If (bossData(i, 4) + 1 = Val(playerData$(1, 2))) or (bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                     bossData(i, 4) = Val(playerData$(1, 2))
                  EndIf
                  If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
                  bossData(i, 6) = -4
               EndIf
            EndIf
         Else
            If bossData(i, 5) > 80
               If i = 1
                  bossData(i, 3) = 928 - Val(playerData$(1, 1))
                  bossData(i, 4) = 768 - Val(playerData$(1, 2))
               Else
                  bossData(i, 3) = 928 - Val(playerData$(2, 1))
                  bossData(i, 4) = 768 - Val(playerData$(2, 2))
               EndIf
            Else
               If bossData(i, 5) > 25
                  If bossData(i, 3) > 770 then bossData(i, 6) = -4
                  If bossData(i, 3) => 750 and bossData(i, 3) <= 770
                     bossData(i, 3) = 748
                     bossData(i, 6) = 0
                     bossData(i, 7) = -3
                  EndIf
                  If bossData(i, 4) <= 80
                     bossData(i, 7) = 3
                  EndIf
                  If bossData(i, 4) => 676
                     bossData(i, 7) = -3
                  EndIf
               Else
                  If i = 1
                     If playerData$(1, 15) = "0"
                        If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                        If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                        If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                           bossData(i, 4) = Val(playerData$(1, 2))
                        EndIf
                        If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
                     Else
                        If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                        If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                        If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                           bossData(i, 4) = Val(playerData$(2, 2))
                        EndIf
                        If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
                     EndIf
                  Else
                     If playerData$(2, 15) = "0"
                        If bossData(i, 4) > Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / -4
                        If bossData(i, 4) < Val(playerData$(2, 2)) then bossData(i, 7) = Val(playerData$(2, 4)) / 4
                        If (bossData(i, 4) + 1 = Val(playerData$(2, 2)) or bossData(i, 4) - 1 = Val(playerData$(2, 2)))
                           bossData(i, 4) = Val(playerData$(2, 2))
                        EndIf
                        If bossData(i, 4) = Val(playerData$(2, 2)) then bossData(i, 7) = 0
                     Else
                        If bossData(i, 4) > Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / -4
                        If bossData(i, 4) < Val(playerData$(1, 2)) then bossData(i, 7) = Val(playerData$(1, 4)) / 4
                        If (bossData(i, 4) + 1 = Val(playerData$(1, 2)) or bossData(i, 4) - 1 = Val(playerData$(1, 2)))
                           bossData(i, 4) = Val(playerData$(1, 2))
                        EndIf
                        If bossData(i, 4) = Val(playerData$(1, 2)) then bossData(i, 7) = 0
                     EndIf
                  EndIf
                  bossData(i, 6) = -4
               EndIf
            EndIf
         EndIf
      EndIf

      `Boss 17
      If bossData(i, 2) = 17
         `Moves boss across the screen.
         If bossData(3, 3) <= 800 then bossData(1, 6) = 0: bossData(2, 6) = 0: bossData(3, 6) = 0
      EndIf

      `Boss 18
      If bossData(i, 2) = 18
         `Moves firewall across screen.
         If i = 5
            If bossData(i, 3) < 300 then bossData(i, 6) = 2
            If bossData(i, 3) > 774 then bossData(i, 6) = -2
         Else
            If bossData(i, 3) < bossData(5, 3) + 64 and bossData(i, 3) > bossData(5, 3) + 44
               bossData(i, 4) = rnd(502) + 174
               bossData(i, 3) = bossData(5, 3) + 43
            EndIf
         EndIf
      EndIf

      `Final Boss
      If bossData(i, 2) = 20

         `Form 1
         If bossData(1, 10) = 675
            If bossData(1, 3) => 550 and bossData(1, 3) <= 560
               bossData(1, 3) = 548
               bossData(2, 3) = bossData(1, 3) + 55
               bossData(3, 3) = bossData(1, 3) + 92
               bossData(4, 3) = bossData(1, 3) + 92
               bossData(5, 3) = bossData(1, 3) + 55
               For j = 1 to 5
                  If (bossData(j, 5) > 40 and j <> 1) or (j = 1)
                     bossData(j, 6) = 0
                     bossData(j, 7) = -1
                  EndIf
               Next j
            EndIf
            If bossData(1, 4) <= 100
               For j = 1 to 5
                  If (bossData(j, 5) > 40 and j <> 1) or (j = 1)
                     bossData(j, 6) = 0
                     bossData(j, 7) = 1
                  EndIf
               Next j
            EndIf
            If bossData(1, 4) => 240
               For j = 1 to 5
                  If (bossData(j, 5) > 40 and j <> 1) or (j = 1)
                     bossData(j, 6) = 0
                     bossData(j, 7) = -1
                  EndIf
               Next j
            EndIf
            If bossData(i, 5) <= 40 and i <> 1
               bossData(i, 6) = -4
               bossData(i, 7) = 0
            EndIf
            If bossData(2, 1) = 2 and bossData(3, 1) = 2 and bossData(4, 1) = 2 and bossData(5, 1) = 2
               bossData(1, 3) = 700
               bossData(1, 4) = 308
               bossData(1, 6) = -5
               enemyVariation = rnd(9) + 1
               If enemyVariation <= 5
                  bossData(1, 7) = -3
               Else
                  bossData(1, 7) = 3
               EndIf
               bossData(1, 10) = 678
            EndIf
         EndIf

         `Form 2
         If bossData(1, 10) = 678
            If bossData(1, 4) <= 100 then bossData(1, 7) = 0 - bossData(i, 7): bossData(i, 4) = 101
            If bossData(1, 4) => 533 then bossData(1, 7) = 0 - bossData(i, 7): bossData(i, 4) = 532
         EndIf

      EndIf

   Next i

   `Decreases the timer used to summon additional enemies during a boss fight.
   If summonTimer > 0 and bossForm > 0
      DEC summonTimer
   Else
      summonTimer = 300
   EndIf

   `Spawns new enemies into the game if the timer for summoning additional
   `enemies reahces zero.
   If summonTimer = 0
      GoSub EnemyFormations
      If bossForm = 6 or bossForm = 10
         summonTimer = 600
      Else
         summonTimer = 300
      EndIf
   EndIf

Return

BossFormations:
`Used to initialise array for summoning a boss.
`Similar to the enemy spawning, bosses are created by filling out the entries
`in the BossData array, and will behave differently depending on these values.

   `Boss 1: Red battleship
   `A boss that will hover up and down and shoot the player.
   If bossForm = 1

      bossData(1, 1) = 1
      bossData(1, 2) = 1
      bossData(1, 3) = 1030
      bossData(1, 4) = 378
      bossData(1, 5) = 25
      bossData(1, 6) = -4
      bossData(1, 7) = 0
      bossData(1, 8) = 2500
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 651
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(20) + 40
      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 2: Bouncing round ship
   `A boss that bounces off of the borders of the screen to attack
   `the player.
   If bossForm = 2

      bossData(1, 1) = 1
      bossData(1, 2) = 2
      bossData(1, 3) = 1030
      bossData(1, 4) = 378
      bossData(1, 5) = 35
      bossData(1, 6) = -4
      bossData(1, 7) = 5 * (rnd(2) - 1) + (rnd(4) - 2)
      If bossData(1, 7) = 0 then bossData(1,7) = 1
      bossData(1, 8) = 4000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 652
      bossData(1, 11) = 0
      bossData(1, 12) = -1
      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 3: Fast attack ship
   `A boss that zips back and forth across the screen. Very fast.
   If bossForm = 3

      bossData(1, 1) = 1
      bossData(1, 2) = 3
      bossData(1, 3) = 1030
      bossData(1, 4) = 378
      bossData(1, 5) = 40
      bossData(1, 6) = -8
      bossData(1, 7) = 0
      bossData(1, 8) = 5000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 653
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(40) + 40
      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 4: "Great Dustbelcher"
   `A giant worm that can shoot very fast and can fly in circles.
   If bossForm = 4

      distanceAdderX = 0
      For i = 1 to 5
         bossData(i, 1) = 1
         bossData(i, 2) = 4
         bossData(i, 3) = 1200 + distanceAdderX
         distanceAdderX = distanceAdderX - 40
         bossData(i, 4) = 690
         bossData(i, 5) = 25
         bossData(i, 6) = -6
         bossData(i, 7) = 0
         bossData(i, 8) = 1250
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(10)

         If i = 5
            bossData(i, 10) = 654
         Else
            bossData(i, 10) = 655
         EndIf

      Next i

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 5: Hunter Ships
   `Two attacks ships moving in circles around the player. They can also
   `have additional enemies attack for them.
   If bossForm = 5

      `Ship 1: Pink
      bossData(1, 1) = 1
      bossData(1, 2) = 5
      bossData(1, 3) = 20
      bossData(1, 4) = 90
      bossData(1, 5) = 60
      bossData(1, 6) = 4
      bossData(1, 7) = 0
      bossData(1, 8) = 3000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 656
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(10)

      `Ship 2: Blue
      bossData(2, 1) = 1
      bossData(2, 2) = 5
      bossData(2, 3) = 914
      bossData(2, 4) = 640
      bossData(2, 5) = 60
      bossData(2, 6) = -4
      bossData(2, 7) = 0
      bossData(2, 8) = 3000
      bossData(2, 9) = SPRITEBOSS + 1
      bossData(2, 10) = 657
      bossData(2, 11) = 0
      bossData(2, 12) = rnd(10)

      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 6
      summonTimer = 300

      bossMusic = 29
      If sound looping(29) = 0 then GoSub StopAllMusic: Loop sound 29

   EndIf

   `Boss 6: Lorry
   `A giant freight lorry that tries to run the player over.
   If bossForm = 6

      bossData(1, 1) = 1
      bossData(1, 2) = 6
      bossData(1, 3) = 1024
      bossData(1, 4) = 108
      bossData(1, 5) = 120
      bossData(1, 6) = -3
      bossData(1, 7) = 0
      bossData(1, 8) = 4000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 658
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(10)

      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 21
      summonTimer = 600

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 7: "Space Pirate Leader v1"
   `A pirate ship with smaller ships for backup. Flies in a figure
   `of eight shape.
   If bossForm = 7

      bossData(1, 1) = 1
      bossData(1, 2) = 7
      bossData(1, 3) = 700
      bossData(1, 4) = 108
      bossData(1, 5) = 150
      bossData(1, 6) = -4
      bossData(1, 7) = 0
      bossData(1, 8) = 5000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 659
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(10)

      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 26
      summonTimer = 300

      bossMusic = 27
      If sound looping(27) = 0 then GoSub StopAllMusic: Loop sound 27

   EndIf

   `Boss 8: Defense cannons + bouncing ship
   `Four cannons that will fire at the player, with a central core that
   `controls them.
   If bossForm = 8

      bossData(1, 1) = 1
      bossData(1, 2) = 8
      bossData(1, 3) = 1060
      bossData(1, 4) = 378
      bossData(1, 5) = 100
      bossData(1, 6) = -4
      bossData(1, 7) = 5 * (rnd(2) - 1) + (rnd(4) - 2)
      If bossData(1, 7) = 0 then bossData(1,7) = 1
      bossData(1, 8) = 3500
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 661
      bossData(1, 11) = 0
      bossData(1, 12) = -1

      For i = 2 to 5
         bossData(i, 1) = 1
         bossData(i, 2) = 8
         bossData(i, 3) = 1500
         bossData(i, 5) = 40
         bossData(i, 6) = -4
         bossData(i, 7) = 0
         bossData(i, 8) = 800
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 10) = 660
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(50)
      Next i
      bossData(2, 4) = 100
      bossData(3, 4) = 300
      bossData(4, 4) = 474
      bossData(5, 4) = 674

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 9: "Rogue Adapt v1"
   `An evil version of the player. Will chase after the player.
   If bossForm = 9

      If gameMode$ = "Single"
         bossData(1, 1) = 1
         bossData(1, 2) = 9
         bossData(1, 3) = 1030
         bossData(1, 4) = 387
         bossData(1, 5) = 80
         bossData(1, 6) = -6
         bossData(1, 7) = 0
         bossData(1, 8) = 10000
         bossData(1, 9) = SPRITEBOSS
         bossData(1, 10) = 662
         bossData(1, 11) = 0
         bossData(1, 12) = -1
         bossData(2, 1) = 2
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      Else
         For i = 1 to 2
            bossData(i, 1) = 1
            bossData(i, 2) = 9
            bossData(i, 3) = 1030
            bossData(i, 4) = 387
            bossData(i, 5) = 80
            bossData(i, 6) = -6
            bossData(i, 7) = 0
            bossData(i, 8) = 5000
            bossData(i, 9) = SPRITEBOSS + i - 1
            bossData(i, 10) = 662
            bossData(i, 11) = 0
            bossData(i, 12) = -1
         Next i
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      EndIf

      enemyFormation = 0
      summonTimer = -1
      bossProjectile2 = laserNumber

      bossMusic = 30
      If sound looping(30) = 0 then GoSub StopAllMusic: Loop sound 30

   EndIf

   `Boss 10: "Attack Force Tri"
   `Three ships that will attack the player all at once.
   If bossForm = 10

      `Ship 1: "Hammer"
      bossData(1, 1) = 1
      bossData(1, 2) = 10
      bossData(1, 3) = 1030
      bossData(1, 4) = 391
      bossData(1, 5) = 90
      bossData(1, 6) = -5
      bossData(1, 7) = 0
      bossData(1, 8) = 4000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 663
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(30)

      `Ship 2: "Shield"
      bossData(2, 1) = 1
      bossData(2, 2) = 10
      bossData(2, 3) = 1225
      bossData(2, 4) = 378
      bossData(2, 5) = 120
      bossData(2, 6) = -5
      bossData(2, 7) = 0
      bossData(2, 8) = 4000
      bossData(2, 9) = SPRITEBOSS + 1
      bossData(2, 10) = 664
      bossData(2, 11) = 0
      bossData(2, 12) = rnd(30)

      `Ship 3: "Sword"
      bossData(3, 1) = 1
      bossData(3, 2) = 10
      bossData(3, 3) = 1350
      bossData(3, 4) = 383
      bossData(3, 5) = 60
      bossData(3, 6) = -5
      bossData(3, 7) = 0
      bossData(3, 8) = 4000
      bossData(3, 9) = SPRITEBOSS + 2
      bossData(3, 10) = 665
      bossData(3, 11) = 0
      bossData(3, 12) = rnd(30)

      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 33
      summonTimer = -1

      bossMusic = 29
      If sound looping(29) = 0 then GoSub StopAllMusic: Loop sound 29

   EndIf

   `Boss 11: Dark battleships
   `Stronger versions of the first boss.
   If bossForm = 11
      For i = 1 to 3
         bossData(i, 1) = 1
         bossData(i, 2) = 11
         bossData(i, 3) = 1030 + (100* (i-1))
         bossData(i, 4) = 378
         bossData(i, 5) = 70
         bossData(i, 6) = -4
         bossData(i, 7) = 0
         bossData(i, 8) = 3333
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 10) = 666
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(20) + 40
      Next i

      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 0
      summonTimer = 300

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 12: "Space Pirate Leader v2"
   `A tougher version of the pirate ship boss.
   If bossForm = 12

      bossData(1, 1) = 1
      bossData(1, 2) = 7
      bossData(1, 3) = 700
      bossData(1, 4) = 108
      bossData(1, 5) = 300
      bossData(1, 6) = -4
      bossData(1, 7) = 0
      bossData(1, 8) = 12000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 659
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(10)

      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 62
      summonTimer = 300

      bossMusic = 27
      If sound looping(27) = 0 then GoSub StopAllMusic: Loop sound 27

   EndIf

   `Boss 13: "Rogue Adapt v2"
   `A tougher version of the evil player. Can switch AI commands.
   If bossForm = 13

      If gameMode$ = "Single"
         bossData(1, 1) = 1
         bossData(1, 2) = 13
         bossData(1, 3) = 1030
         bossData(1, 4) = 387
         bossData(1, 5) = 120
         bossData(1, 6) = -6
         bossData(1, 7) = 0
         bossData(1, 8) = 10000
         bossData(1, 9) = SPRITEBOSS
         bossData(1, 10) = 667
         bossData(1, 11) = 0
         bossData(1, 12) = -1
         bossData(2, 1) = 2
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      Else
         For i = 1 to 2
            bossData(i, 1) = 1
            bossData(i, 2) = 13
            bossData(i, 3) = 1030
            bossData(i, 4) = 267 + ((i-1) * 240)
            bossData(i, 5) = 120
            bossData(i, 6) = -6
            bossData(i, 7) = 0
            bossData(i, 8) = 5000
            bossData(i, 9) = (SPRITEBOSS + i - 1)
            bossData(i, 10) = 667
            bossData(i, 11) = 0
            bossData(i, 12) = -1
         Next i
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      EndIf

      enemyFormation = 0
      summonTimer = -1
      bossProjectile2 = laserNumber

      bossMusic = 30
      If sound looping(30) = 0 then GoSub StopAllMusic: Loop sound 30

   EndIf

   `Boss 14: Dark fast attack ships
   `Multiple versions of the third boss. Very fast ships.
   If bossForm = 14

      For i = 1 to 4
         bossData(i, 1) = 1
         bossData(i, 2) = 3
         bossData(i, 3) = 1024 + (256 * (i-1))
         bossData(i, 4) = rnd(600) + 78
         bossData(i, 5) = 50
         bossData(i, 6) = -6
         bossData(i, 7) = 0
         bossData(i, 8) = 2750
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 10) = 668
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(40) + 40
      Next i

      bossData(5, 1) = 2

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 15: Mining Drill
   `A giant mining drill that can hirt the player easily. Similar to boss 6.
   If bossForm = 15

      bossData(1, 1) = 1
      bossData(1, 2) = 15
      bossData(1, 3) = 1030
      bossData(1, 4) = 108
      bossData(1, 5) = 300
      bossData(1, 6) = -8
      bossData(1, 7) = 0
      bossData(1, 8) = 12800
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 669
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(30)
      bossData(2, 1) = 2
      bossData(3, 1) = 2
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 70
      summonTimer = 300

      bossMusic = 29
      If sound looping(29) = 0 then GoSub StopAllMusic: Loop sound 29

   EndIf

   `Boss 16: "Rogue Adapt v3"
   `The final version of the evil player. Copies the players moves exactly.
   If bossForm = 16

      If gameMode$ = "Single"
         bossData(1, 1) = 1
         bossData(1, 2) = 16
         bossData(1, 3) = 1030
         bossData(1, 4) = 387
         bossData(1, 5) = 150
         bossData(1, 6) = -6
         bossData(1, 7) = 0
         bossData(1, 8) = 10000
         bossData(1, 9) = SPRITEBOSS
         bossData(1, 10) = 670
         bossData(1, 11) = 0
         bossData(1, 12) = -1
         bossData(2, 1) = 2
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      Else
         For i = 1 to 2
            bossData(i, 1) = 1
            bossData(i, 2) = 16
            bossData(i, 3) = 1030
            bossData(i, 4) = 387
            bossData(i, 5) = 150
            bossData(i, 6) = -6
            bossData(i, 7) = 0
            bossData(i, 8) = 5000
            bossData(i, 9) = (SPRITEBOSS + i - 1)
            bossData(i, 10) = 670
            bossData(i, 11) = 0
            bossData(i, 12) = -1
         Next i
         bossData(3, 1) = 2
         bossData(4, 1) = 2
         bossData(5, 1) = 2
      EndIf

      enemyFormation = 0
      summonTimer = -1
      bossProjectile2 = laserNumber

      bossMusic = 30
      If sound looping(30) = 0 then GoSub StopAllMusic: Loop sound 30

   EndIf

   `Boss 17: "Solarsphere Surface"
   `A giant metal dome. Very strong. Cannons must be destroyed first.
   If bossForm = 17

      `Sphere cannons
      For i = 1 to 2
         bossData(i, 1) = 1
         bossData(i, 2) = 17
         bossData(i, 3) = 1050
         bossData(i, 4) = 118 + (450 * (i-1))
         bossData(i, 5) = 150
         bossData(i, 6) = -1
         bossData(i, 7) = 0
         bossData(i, 8) = 2000
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 10) = 672
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(10)
      Next i

      `Sphere surface
      bossData(3, 1) = 1
      bossData(3, 2) = 17
      bossData(3, 3) = 1200
      bossData(3, 4) = 78
      bossData(3, 5) = 20
      bossData(3, 6) = -1
      bossData(3, 7) = 0
      bossData(3, 8) = 7000
      bossData(3, 9) = SPRITEBOSS + 2
      bossData(3, 10) = 671
      bossData(3, 11) = 0
      bossData(3, 12) = -1
      bossData(4, 1) = 2
      bossData(5, 1) = 2

      enemyFormation = 82
      summonTimer = 300

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Boss 18: "Solarsphere Computer"
   `A giant computer. Can launch missiles at the player.
   If bossForm = 18

      `Computer missiles
      For i = 1 to 4
         bossData(i, 1) = 1
         bossData(i, 2) = 18
         bossData(i, 3) = 1200 + (i*250)
         bossData(i, 4) = rnd(502) + 174
         bossData(i, 5) = 80
         bossData(i, 6) = -6
         bossData(i, 7) = 0
         bossData(i, 8) = 1337
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 10) = 674
         bossData(i, 11) = 0
         bossData(i, 12) = rnd(10)
      Next i

      `Computer firewall
      bossData(5, 1) = 1
      bossData(5, 2) = 18
      bossData(5, 3) = 1024
      bossData(5, 4) = 78
      bossData(5, 5) = 1
      bossData(5, 6) = -2
      bossData(5, 7) = 0
      bossData(5, 8) = 5120
      bossData(5, 9) = SPRITEBOSS + 4
      bossData(5, 10) = 673
      bossData(5, 11) = 0
      bossData(5, 12) = -1

      enemyFormation = 0
      summonTimer = -1

      bossMusic = 28
      If sound looping(28) = 0 then GoSub StopAllMusic: Loop sound 28

   EndIf

   `Final Boss: "E.G.O"
   `A large and powerful ship. Can change after losing some health.
   If bossForm = 20

      `Main ship
      bossData(1, 1) = 1
      bossData(1, 2) = 20
      bossData(1, 3) = 1100
      bossData(1, 4) = 134
      bossData(1, 5) = 200
      bossData(1, 6) = -3
      bossData(1, 7) = 0
      bossData(1, 8) = 25000
      bossData(1, 9) = SPRITEBOSS
      bossData(1, 10) = 675
      bossData(1, 11) = 0
      bossData(1, 12) = rnd(10)

      `Fist ships
      For i = 2 to 5
         bossData(i, 1) = 1
         bossData(i, 2) = 20
         bossData(i, 5) = 100
         bossData(i, 6) = -3
         bossData(i, 7) = 0
         bossData(i, 8) = 0
         bossData(i, 9) = SPRITEBOSS + i - 1
         bossData(i, 11) = 0
         bossData(i, 12) = -1
      Next i

      bossData(2, 3) = bossData(1, 3) + 55
      bossData(2, 4) = bossData(1, 4) - 13
      bossData(2, 10) = 676
      bossData(3, 3) = bossData(1, 3) + 92
      bossData(3, 4) = bossData(1, 4) + 61
      bossData(3, 10) = 676
      bossData(4, 3) = bossData(1, 3) + 92
      bossData(4, 4) = bossData(1, 4) + 386
      bossData(4, 10) = 677
      bossData(5, 3) = bossData(1, 3) + 56
      bossData(5, 4) = bossData(1, 4) + 459
      bossData(5, 10) = 677

      enemyFormation = 74
      summonTimer = -1

   EndIf

   Play sound 64

Return

AutoFire:
`Used to toggle constant projectile firing on or off.

   `Decreases timer between toggling of the auto-fire.
   If autoFireTimer > 0 then DEC autoFireTimer

   `Toggles auto fire on or off if the player has pressed the
   `corresponding button.
   If AutoFireConfirm(playerData$(playerNumber, 17)) = 1 and autoFireTimer = 0
      autoFire = 1 - autoFire
      autoFireTimer = TIMER
   EndIf

Return

AllocateShipEndless:
`Determines what ship the game should use as the player's ship, and how
`fast the player should be.

   `Assign ship speed and ship image number.
   If playerData$(playerNumber,6) = "Space Fighter"
      playerData$(playerNumber,3) = STR$(8)
      playerData$(playerNumber,4) = STR$(9)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(241)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(242)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(243)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(244)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(245)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(246)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(247)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(248)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(249)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(250)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(255)
   EndIf
   If playerData$(playerNumber,6) = "Nebula Baron"
      playerData$(playerNumber,3) = STR$(10)
      playerData$(playerNumber,4) = STR$(11)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(256)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(257)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(258)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(259)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(260)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(261)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(262)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(263)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(264)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(265)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(270)
   EndIf
   If playerData$(playerNumber,6) = "Binary Duo"
      playerData$(playerNumber,3) = STR$(9)
      playerData$(playerNumber,4) = STR$(10)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(286)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(287)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(288)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(289)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(290)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(291)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(292)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(293)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(294)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(295)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(300)
   EndIf
   If playerData$(playerNumber,6) = "Magneteer"
      playerData$(playerNumber,3) = STR$(8)
      playerData$(playerNumber,4) = STR$(7)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(301)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(302)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(303)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(304)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(305)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(306)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(307)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(308)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(309)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(310)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(315)
   EndIf
   If playerData$(playerNumber,6) = "Bot Morpher"
      playerData$(playerNumber,3) = STR$(7)
      playerData$(playerNumber,4) = STR$(8)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(346)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(347)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(348)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(349)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(350)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(351)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(352)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(353)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(354)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(355)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(360)
   EndIf
   If playerData$(playerNumber,6) = "Orbital Freighter"
      playerData$(playerNumber,3) = STR$(6)
      playerData$(playerNumber,4) = STR$(7)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(271)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(272)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(273)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(274)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(275)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(276)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(277)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(278)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(279)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(280)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(285)
   EndIf
   If playerData$(playerNumber,6) = "Dwarf Shuttle"
      playerData$(playerNumber,3) = STR$(7)
      playerData$(playerNumber,4) = STR$(9)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(331)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(332)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(333)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(334)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(335)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(336)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(337)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(338)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(339)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(340)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(345)
   EndIf
   If playerData$(playerNumber,6) = "Geocentral Star"
      playerData$(playerNumber,3) = STR$(10)
      playerData$(playerNumber,4) = STR$(11)
      If playerData$(playerNumber,7) = "Blue" then playerData$(playerNumber,12) = STR$(316)
      If playerData$(playerNumber,7) = "Red" then playerData$(playerNumber,12) = STR$(317)
      If playerData$(playerNumber,7) = "Yellow" then playerData$(playerNumber,12) = STR$(318)
      If playerData$(playerNumber,7) = "Green" then playerData$(playerNumber,12) = STR$(319)
      If playerData$(playerNumber,7) = "Orange" then playerData$(playerNumber,12) = STR$(320)
      If playerData$(playerNumber,7) = "Purple" then playerData$(playerNumber,12) = STR$(321)
      If playerData$(playerNumber,7) = "Pink" then playerData$(playerNumber,12) = STR$(322)
      If playerData$(playerNumber,7) = "White" then playerData$(playerNumber,12) = STR$(323)
      If playerData$(playerNumber,7) = "Brown" then playerData$(playerNumber,12) = STR$(324)
      If playerData$(playerNumber,7) = "Grey" then playerData$(playerNumber,12) = STR$(325)
      If playerData$(playerNumber,7) = "Special" then playerData$(playerNumber,12) = STR$(330)
   EndIf

   `Assigns the default ship to the player if there is an error.
   If Val(playerData$(playerNumber,12)) < 241 or Val(playerData$(playerNumber,12)) > 360
      playerData$(playerNumber,12) = "241"
      playerData$(playerNumber,3) = STR$(8)
      playerData$(playerNumber,4) = STR$(9)
      playerData$(playerNumber,6) = "Space Fighter"
      playerData$(playerNumber,7) = "Blue"
   EndIf

Return

AllocateShipMission:
`Determines what ship the game should use as the player's ship, and how
`fast the player should be, this time based on data from a suspended
`save file.

   `Assign ship speed and ship image number.
   If playerSaves$(save, 11) = "Space Fighter"
      playerData$(1,3) = STR$(8)
      playerData$(1,4) = STR$(9)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(241)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(242)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(243)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(244)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(245)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(246)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(247)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(248)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(249)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(250)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(255)
   EndIf
   If playerSaves$(save, 11) = "Nebula Baron"
      playerData$(1,3) = STR$(10)
      playerData$(1,4) = STR$(11)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(256)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(257)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(258)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(259)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(260)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(261)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(262)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(263)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(264)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(265)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(270)
   EndIf
   If playerSaves$(save, 11) = "Binary Duo"
      playerData$(1,3) = STR$(9)
      playerData$(1,4) = STR$(10)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(286)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(287)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(288)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(289)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(290)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(291)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(292)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(293)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(294)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(295)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(300)
   EndIf
   If playerSaves$(save, 11) = "Magneteer"
      playerData$(1,3) = STR$(8)
      playerData$(1,4) = STR$(7)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(301)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(302)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(303)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(304)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(305)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(306)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(307)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(308)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(309)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(310)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(315)
   EndIf
   If playerSaves$(save, 11) = "Bot Morpher"
      playerData$(1,3) = STR$(7)
      playerData$(1,4) = STR$(8)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(346)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(347)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(348)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(349)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(350)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(351)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(352)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(353)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(354)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(355)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(360)
   EndIf
   If playerSaves$(save, 11) = "Orbital Freighter"
      playerData$(1,3) = STR$(6)
      playerData$(1,4) = STR$(7)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(271)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(272)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(273)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(274)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(275)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(276)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(277)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(278)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(279)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(280)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(285)
   EndIf
   If playerSaves$(save, 11) = "Dwarf Shuttle"
      playerData$(1,3) = STR$(7)
      playerData$(1,4) = STR$(9)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(331)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(332)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(333)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(334)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(335)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(336)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(337)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(338)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(339)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(340)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(345)
   EndIf
   If playerSaves$(save, 11) = "Geocentral Star"
      playerData$(1,3) = STR$(10)
      playerData$(1,4) = STR$(11)
      If playerSaves$(save, 12) = "Blue" then playerData$(1,12) = STR$(316)
      If playerSaves$(save, 12) = "Red" then playerData$(1,12) = STR$(317)
      If playerSaves$(save, 12) = "Yellow" then playerData$(1,12) = STR$(318)
      If playerSaves$(save, 12) = "Green" then playerData$(1,12) = STR$(319)
      If playerSaves$(save, 12) = "Orange" then playerData$(1,12) = STR$(320)
      If playerSaves$(save, 12) = "Purple" then playerData$(1,12) = STR$(321)
      If playerSaves$(save, 12) = "Pink" then playerData$(1,12) = STR$(322)
      If playerSaves$(save, 12) = "White" then playerData$(1,12) = STR$(323)
      If playerSaves$(save, 12) = "Brown" then playerData$(1,12) = STR$(324)
      If playerSaves$(save, 12) = "Grey" then playerData$(1,12) = STR$(325)
      If playerSaves$(save, 12) = "Special" then playerData$(1,12) = STR$(330)
   EndIf

   `Assigns the default ship to the player if there is an error.
   If Val(playerData$(playerNumber,12)) < 241 or Val(playerData$(playerNumber,12)) > 360
      playerData$(1,12) = "241"
      playerData$(1,3) = STR$(6)
      playerData$(1,4) = STR$(7)
      playerAccount$(9) = "Space Fighter"
      playerAccount$(10) = "Blue"
   EndIf

Return

GameOverCheckEndless:
`Procedure used to detect if the player has gotten a game over.
`Also runs the game over screen at the end of the game.

   If Val(playerData$(1,15)) = 1

      If soundPlayed = 0
         `Stops gameplay and music.
         gamePaused = 0
         missionEnd = 0
         GoSub StopAllMusic
         soundPlayed = 1
         Stop sound 59
         Play sound 51

         `Used to display death animation.
         playerData$(1,5) = "0"
         animationStage = 0

         `Money, experience and high score calculations.
         bitzEarned# = Int((Val(playerData$(1,14))/12) * (bossesKilled + 1))
         playerAccount$(8) = STR$(Val(playerAccount$(8)) + bitzEarned#)
         expEarned# = Int(((enemyGroup#/4) + 1) * (bossesKilled + 1))
         If Val(playerAccount$(6)) < 20 then playerAccount$(7) = STR$(Val(playerAccount$(7)) + expEarned#)
         If Val(playerAccount$(7)) > 100 * Val(playerAccount$(6)) and Val(playerAccount$(6)) < 20
            playerAccount$(7) = STR$(Val(playerAccount$(7)) - (100 * Val(playerAccount$(6))))
            playerAccount$(6) = STR$(Val(playerAccount$(6)) + 1)
         EndIf

         `Score validation, comparison, and saving on new high scores.
         GoSub ReadScores
         scoreFound = 0
         newHighScore = 0
         `Saves scores to database if user has a previous high score.
         If playerType$ = "Player" and debugModeOn = 0
            For i = 1 to 100
               If fileScoreStore$(i, 1) = playerAccount$(5)
                  scoreFound = 1
                  If Val(playerData$(1, 13)) > Val(fileScoreStore$(i, 3))
                     fileScoreStore$(i, 3) = playerData$(1, 13)
                     fileScoreStore$(i, 4) = playerData$(1, 6)
                     fileScoreStore$(i, 5) = playerData$(1, 7)
                     newHighScore = 1
                  EndIf
                  i = 101
               EndIf
            Next i
            `Creates score entry for users who do not have previous score in database.
            If scoreFound = 0
               highScoreMode$ = "Endless"
               sortLimit = 100
               GoSub SortScores
               newHighScore = 0
               i = 1
               While newHighScore = 0 and i > 0
                  If (fileScoreStore$(i, 1) = "-" and fileScoreStore$(i, 3) = "0") or (i = 100)
                     fileScoreStore$(i, 1) = playerAccount$(5)
                     fileScoreStore$(i, 2) = playerAccount$(2)
                     fileScoreStore$(i, 3) = playerData$(1, 13)
                     fileScoreStore$(i, 4) = playerData$(1, 6)
                     fileScoreStore$(i, 5) = playerData$(1, 7)
                     fileScoreStore$(i, 6) = "0"
                     newHighScore = 1
                  Else
                     INC i
                  EndIf
               EndWhile
            EndIf
            GoSub WriteScores
         EndIf
      EndIf

      gameStopped = 1

      `Displays player death animation.
      INC animationStage
      If animationStage > 0 and animationStage <= 16 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 362
      If animationStage > 16 and animationStage <= 32 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 363
      If animationStage > 32 and animationStage <= 48 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 364
      If animationStage > 48 and animationStage <= 64 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 363
      If animationStage > 64 and animationStage < 80 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 362

      `Displays game end screen.
      If animationStage >= 80

         `Clears screen and displays prompt.
         GoSub RemoveAllSprites
         mouse = 1
         ink RGB(255,0,0), RGB(0,0,0)
         Set text size 20
         Paste image 713, 242, 200
         Center Text 512, 220, "GAME OVER"
         ink RGB(0,0,0), RGB(0,0,0)

         `Displays prompt content.
         Set text size 15
         Text 250, 280, "Game Score:"
         Text 520, 280, playerData$(1,13)
         If debugModeOn = 0
            If newHighScore = 1
               Text 250, 320, "Your High Score:"
               Text 520, 320, playerData$(1,13)
               Text 600, 300, "New high score!"
            Else
               If playerType$ = "Player"
                  Text 250, 320, "Your High Score:"
                  Text 520, 320, playerHighScore$
               Else
                  Text 250, 320, "Since you are guest, this score has not been saved."
               EndIf
            EndIf
         Else
            Text 250, 320, "Scores cannot be saved when debug mode is on."
         EndIf
         Text 250, 360, "Bitz Earned:"
         Text 520, 360, STR$(bitzEarned#)
         Text 250, 400, "Experience Earned:"
         If Val(playerAccount$(6)) < 20 then Text 520, 400, STR$(expEarned#)
         If Val(playerAccount$(6)) => 20 then Text 520, 420, "Max Level Reached!"
         Text 250, 440, "Progress to Next Level:"
         If Val(playerAccount$(6)) < 20 then Text 520, 440, playerAccount$(7) + " out of " + STR$(Val(playerAccount$(6)) * 100)
         If Val(playerAccount$(6)) => 20 then Text 520, 420, "Max Level Reached!"

         `Displays buttons.
         Set text size 12
         Paste image 32, 250, 480
         Center Text 330, 500, "Retry Endless Mode"
         Paste image 36, 432, 550
         Center Text 512, 570, "View High Scores"
         Paste image 32, 614, 480
         Center Text 694, 500, "Return to Setup"
      EndIf
   EndIf

Return

GameOverCheckMission:
`Procedure used to detect if the player has completed the mission or ran out of lives.
`Also runs the game over or success screen at the end of the mission.

   `Deducts lives if player loses all health.
   If Val(playerData$(1,15)) = 1
      If Val(playerSaves$(save, 3)) > 0
         playerSaves$(save, 3) = STR$(Val(playerSaves$(save, 3)) - 1)
         If missionDifficulty# <= 1.00
            playerData$(1,5) = "100"
         Else
            playerData$(1,5) = "50"
         EndIf
      Else
         missionEnd = -1
      EndIf
      playerData$(1,15) = "0"
   EndIf

   `Runs mission complete screen.
   If missionEnd = 1

      If soundPlayed = 0
         `Stops gameplay and music.
         gamePaused = 0
         bossForm = 0
         gameStopped = 1
         GoSub StopAllMusic
         soundPlayed = 1
         Play sound 21

         `Money, experience and high score calculations.
         If Val(playerSaves$(save,2)) = missionNumber
            playerSaves$(save, 4) = STR$(Val(playerSaves$(save, 4)) + Val(playerData$(1,13)))
         EndIf
         bitzEarned# = Int((Val(playerData$(1,14))/3) * (bossesKilled + 1))
         playerAccount$(8) = STR$(Val(playerAccount$(8)) + bitzEarned#)
         expEarned# = Int(((missionStage - 1)) * (bossesKilled + 1))
         playerAccount$(7) = STR$(Val(playerAccount$(7)) + expEarned#)
         If Val(playerAccount$(7)) > 100 * Val(playerAccount$(6))
            playerAccount$(7) = STR$(Val(playerAccount$(7)) - (100 * Val(playerAccount$(6))))
            playerAccount$(6) = STR$(Val(playerAccount$(6)) + 1)
         EndIf

      EndIf

      `Screen clearing and prompt display.
      GoSub RemoveAllSprites
      mouse = 1
      ink RGB(255,0,0), RGB(0,0,0)
      Set text size 20
      Paste image 713, 242, 200
      Center Text 512, 220, "MISSION " + STR$(missionNumber) + " COMPLETE"
      ink RGB(0,0,0), RGB(0,0,0)

      `Prompt content displaying.
      Set text size 15
      Text 250, 280, "Game Score:"
      Text 520, 280, playerData$(1,13)
      Text 250, 320, "Mode Total Score:"
      Text 520, 320, playerSaves$(save, 4)
      Text 250, 360, "Bitz Earned:"
      Text 520, 360, STR$(bitzEarned#)
      Text 250, 400, "Experience Earned:"
      If Val(playerAccount$(6)) < 20 then Text 520, 400, STR$(expEarned#)
      If Val(playerAccount$(6)) => 20 then Text 520, 420, "Max Level Reached!"
      Text 250, 440, "Progress to Next Level:"
      If Val(playerAccount$(6)) < 20 then Text 520, 440, playerAccount$(7) + " out of " + STR$(Val(playerAccount$(6)) * 100)
      If Val(playerAccount$(6)) => 20 then Text 520, 420, "Max Level Reached!"

      `Return to Map button.
      Set text size 12
      Paste image 32, 432, 500
      Center Text 512, 520, "Return to the Map"

   EndIf

   `Runs mission failed screen.
   If missionEnd = -1

      If soundPlayed = 0
         `Stops gameplay and music.
         gamePaused = 0
         bossForm = 0
         GoSub StopAllMusic
         soundPlayed = 1
         Stop sound 59
         Play sound 51

         `Used to display death animation.
         playerData$(1,5) = "0"
         animationStage = 0

         `Money, experience and high score calculations.
         playerSaves$(save, 4) = STR$(Int((Val(playerSaves$(save, 4)) * 4) / 5))
         bitzEarned# = Int((Val(playerData$(1,14))/32) * (bossesKilled + 1))
         playerAccount$(8) = STR$(Val(playerAccount$(8)) + bitzEarned#)
         expEarned# = Int((((missionStage - 1)/12) + 1) * (bossesKilled + 1))
         playerAccount$(7) = STR$(Val(playerAccount$(7)) + expEarned#)
         If Val(playerAccount$(7)) > 100 * Val(playerAccount$(6))
            playerAccount$(7) = STR$(Val(playerAccount$(7)) - (100 * Val(playerAccount$(6))))
            playerAccount$(6) = STR$(Val(playerAccount$(6)) + 1)
         EndIf
      EndIf

      gameStopped = 1

      `Displays player death animation.
      INC animationStage
      If animationStage > 0 and animationStage <= 16 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 362
      If animationStage > 16 and animationStage <= 32 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 363
      If animationStage > 32 and animationStage <= 48 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 364
      If animationStage > 48 and animationStage <= 64 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 363
      If animationStage > 64 and animationStage < 80 then Sprite 1, Val(playerData$(1,1)), Val(playerData$(1,2)), 362

      `Displays game end screen.
      If animationStage >= 80
         `Clears up game screen and displays end prompt.
         GoSub RemoveAllSprites
         mouse = 1
         ink RGB(255,0,0), RGB(0,0,0)
         Set text size 20
         Paste image 713, 242, 200
         Center Text 512, 220, "MISSION " + STR$(missionNumber) + " FAILED"
         ink RGB(0,0,0), RGB(0,0,0)

         `Displays prompt content.
         Set text size 15
         Text 250, 280, "Game Score:"
         Text 520, 280, playerData$(1,13)
         Text 250, 320, "You lost 20% of your mission mode score!"
         Text 250, 380, "Bitz Earned:"
         Text 520, 380, STR$(bitzEarned#)
         Text 250, 420, "Experience Earned:"
         If Val(playerAccount$(6)) < 20 then Text 520, 420, STR$(expEarned#)
         If Val(playerAccount$(6)) => 20 then Text 520, 420, "Max Level Reached!"
         Text 250, 460, "Progress to Next Level:"
         If Val(playerAccount$(6)) < 20 then Text 520, 460, playerAccount$(7) + " out of " + STR$(Val(playerAccount$(6)) * 100)
         If Val(playerAccount$(6)) => 20 then Text 520, 460, "Max Level Reached!"

         `Displays navigational buttons.
         Set text size 12
         Paste image 32, 300, 500
         Center Text 380, 520, "Retry Mission"
         Paste image 32, 564, 500
         Center Text 644, 520, "Return to the Map"
      EndIf
   EndIf

Return

GameOverCheckCompete:
`Displays the victory screen once a competitive game has finished.
`Also used to detect player deaths and deduct lives.

   `Process player deaths and respawning, score increasing/decreasing and respawn timers
   For k = 1 to 4
      If playerData$(k, 15) = "1" and playerData$(k, 10) = "1"
         Play sound 51
         playerData$(k, 10) = "0"
         playerData$(k, 20) = "-200"
         playerData$(k, 14) = STR$(Val(playerData$(k, 14)) + 1)
         playerData$(Val(playerData$(k, 11)), 13) = STR$(Val(playerData$(Val(playerData$(k, 11)), 13)) + 1)
         If k = 1 or k = 3
            If victoryCondition$ = "Kills" then INC team2Score
         Else
            If victoryCondition$ = "Kills" then INC team1Score
         EndIf
      EndIf
      If k = 1 or k = 3
         If playerData$(k, 15) = "1" and playerData$(k, 20) = "0" and (victoryCondition$ <> "Lives" or team1Score <> 0)
            playerData$(k, 5) = "100"
            playerData$(k, 10) = "1"
            playerData$(k, 15) = "0"
            playerData$(k, 20) = "50"
            If victoryCondition$ = "Lives" and team1Score > 0 then DEC team1Score
         EndIf
      Else
         If playerData$(k, 15) = "1" and playerData$(k, 20) = "0" and (victoryCondition$ <> "Lives" or team2Score <> 0)
            playerData$(k, 5) = "100"
            playerData$(k, 10) = "1"
            playerData$(k, 15) = "0"
            playerData$(k, 20) = "50"
            If victoryCondition$ = "Lives" and team2Score > 0 then DEC team2Score
         EndIf
      EndIf

      If Val(playerData$(k, 20)) < 0 then playerData$(k, 20) = STR$(Val(playerData$(k, 20)) + 1)

   Next k

   `Determines if a team has won a match.
   If victoryCondition$ = "Kills"
      If team1Score = victoryNumber then missionEnd = 1
      If team2Score = victoryNumber then missionEnd = 2
   Else
      If team2Score = 0
         If playerData$(2, 15) = "1" or playerData$(2, 16) = "0"
            If playerData$(4, 15) = "1" or playerData$(4, 16) = "0" then missionEnd = 1
         EndIf
      EndIf
      If team1Score = 0
         If playerData$(1, 15) = "1" or playerData$(1, 16) = "0"
            If playerData$(3, 15) = "1" or playerData$(3, 16) = "0" then missionEnd = 2
         EndIf
      EndIf
   EndIf

   `Runs match complete screen.
   If missionEnd > 0

      If soundPlayed = 0
         gamePaused = 0
         gameStopped = 1
         GoSub StopAllMusic
         Play sound 21
         soundPlayed = 1
      EndIf

      GoSub RemoveAllSprites
      mouse = 1
      ink RGB(255,0,0), RGB(0,0,0)
      Set text size 20
      Paste image 713, 242, 200
      Center Text 512, 220, "TEAM " + STR$(missionEnd) + " WINS!"

      `Displays scoreboard at the end of the game.
      Set text size 15
      Center Text 300, 260, "Player:"
      Center Text 420, 260, "Ship:"
      Center Text 550, 260, "Kills:"
      Center Text 680, 260, "Deaths:"
      ink RGB(0,0,0), RGB(0,0,0)
      For i = 1 to 4
         If playerData$(i, 16) = "1"
            Center Text 300, 260 + (i * 40), STR$(i)
            Center Text 420, 260 + (i * 40), playerData$(i,6)
            Center Text 550, 260 + (i * 40), playerData$(i,13)
            Center Text 680, 260 + (i * 40), playerData$(i,14)
         EndIf
      Next i

      Set text size 12
      Paste image 33, 432, 500
      Center Text 512, 520, "Return to the Menu"

   EndIf

Return

GameOverCheckCoop:
`Used to determine if a player has died or if the mission has ended in cooperative mode.
`Also used to detect player deaths and deduct lives.

   `Process player deaths and respawning, score increasing/decreasing and respawn timers
   For k = 1 to 2

      If Val(playerData$(k,5)) <= 0 then playerData$(k,15) = "1"

      If k = 1
         If playerData$(1, 15) = "1" and player1Life = 1
            Play sound 51
            player1Life = 0
            INC player1Deaths
            playerData$(1, 20) = "-200"
         EndIf
      Else
         If playerData$(2, 15) = "1" and player2Life = 1
            Play sound 51
            player2Life = 0
            INC player2Deaths
            playerData$(2, 20) = "-200"
         EndIf
      EndIf
      If playerData$(k, 15) = "1" and playerData$(k, 20) = "0" and coopLives > 0
         If missionDifficulty# > 1.00
            playerData$(k, 5) = "50"
         Else
            playerData$(k, 5) = "100"
         EndIf
         If k = 1 then player1Life = 1
         If k = 2 then player2Life = 1
         playerData$(k, 1) = "464"
         playerData$(k, 2) = "348"
         playerData$(k, 15) = "0"
         playerData$(k, 20) = "50"
         DEC coopLives
      EndIf

      If Val(playerData$(k, 20)) < 0 then playerData$(k, 20) = STR$(Val(playerData$(k, 20)) + 1)

   Next k

   If playerData$(1, 15) = "1" and playerData$(2, 15) = "1" and coopLives = 0 then missionEnd = -1

   `Runs mission complete screen.
   If missionEnd = 1

      If soundPlayed = 0
         gamePaused = 0
         bossForm = 0
         gameStopped = 1
         GoSub StopAllMusic
         soundPlayed = 1
         Play sound 21
      EndIf

      `Clears the screen of sprites and displays the victory screen.
      GoSub RemoveAllSprites
      mouse = 1
      ink RGB(255,0,0), RGB(0,0,0)
      Set text size 20
      Paste image 713, 242, 200
      Center Text 512, 220, "MISSION " + STR$(missionNumber) + " COMPLETE"

      `Displays scoreboard at the end of the game.
      Set text size 15
      Center Text 300, 260, "Player:"
      Center Text 420, 260, "Score:"
      Center Text 550, 260, "Kills:"
      Center Text 680, 260, "Deaths:"
      ink RGB(0,0,0), RGB(0,0,0)
      For i = 1 to 2
         If playerData$(i, 16) = "1"
            Center Text 300, 260 + (i * 40), STR$(i)
            Center Text 420, 260 + (i * 40), playerData$(i,13)
            Center Text 550, 260 + (i * 40), playerData$(i,14)
            If i = 1 then Center Text 680, 260 + (i * 40), STR$(player1Deaths)
            If i = 2 then Center Text 680, 260 + (i * 40), STR$(player2Deaths)
         EndIf
      Next i
      Center Text 300, 380, "TOTAL"
      Center Text 420, 380, STR$(Val(playerData$(1,13)) + Val(playerData$(2,13)))
      Center Text 550, 380, STR$(Val(playerData$(1,14)) + Val(playerData$(2,14)))
      Center Text 680, 380, STR$(player1Deaths + player2Deaths)

      Set text size 12
      Paste image 33, 432, 500
      Center Text 512, 520, "Return to the Menu"

   EndIf

   `Runs mission failed screen.
   If missionEnd = -1

      If soundPlayed = 0
         gamePaused = 0
         bossForm = 0
         GoSub StopAllMusic
         soundPlayed = 1
         Stop sound 59
         Play sound 51
         gameStopped = 1
      EndIf

      `Clears the screen of sprites and displays the failure screen.
      GoSub RemoveAllSprites
      mouse = 1
      ink RGB(255,0,0), RGB(0,0,0)
      Set text size 20
      Paste image 713, 242, 200
      Center Text 512, 220, "MISSION " + STR$(missionNumber) + " FAILED"

      `Displays scoreboard at the end of the game.
      Set text size 15
      Center Text 300, 260, "Player:"
      Center Text 420, 260, "Score:"
      Center Text 550, 260, "Kills:"
      Center Text 680, 260, "Deaths:"
      ink RGB(0,0,0), RGB(0,0,0)
      For i = 1 to 2
         If playerData$(i, 16) = "1"
            Center Text 300, 260 + (i * 40), STR$(i)
            Center Text 420, 260 + (i * 40), playerData$(i,13)
            Center Text 550, 260 + (i * 40), playerData$(i,14)
            If i = 1 then Center Text 680, 260 + (i * 40), STR$(player1Deaths)
            If i = 2 then Center Text 680, 260 + (i * 40), STR$(player2Deaths)
         EndIf
      Next i
      Center Text 300, 380, "TOTAL"
      Center Text 420, 380, STR$(Val(playerData$(1,13)) + Val(playerData$(2,13)))
      Center Text 550, 380, STR$(Val(playerData$(1,14)) + Val(playerData$(2,14)))
      Center Text 680, 380, STR$(player1Deaths + player2Deaths)

      Set text size 12
      Paste image 33, 300, 500
      Center Text 380, 520, "Retry Mission"
      Paste image 33, 564, 500
      Center Text 644, 520, "Return to the Menu"

   EndIf

Return

PauseGame:
`Procedure used to pause the game and to display the debug menu.

   `Used to detect if the escape key is pressed, to toggle the pause menu on and off.
   If escapekey() = 1 and pauseTimer <= 0 and debugMenuShow = 0
      If gamePaused = 0
         gamePaused = 1
         Stop sound 57
         Play sound 57
         If bossForm = 0 then pause sound setMusic
         If bossForm > 0
            If bossForm <> 20
               pause sound bossMusic
            Else
               pause sound 20
            EndIf
         EndIf
         GoSub RemoveAllSprites
         pauseTimer = TIMER
      Else
         mouse = 0
         gamePaused = 0
         Stop sound 57
         Play sound 57
         If bossForm = 0 then resume sound setMusic
         If bossForm > 0
            If bossForm <> 20
               resume sound bossMusic
            Else
               resume sound 20
            EndIf
         EndIf
         pauseTimer = TIMER
      EndIf
   EndIf

   `Displays the pause menu and it's buttons.
   If gamePaused = 1
      If gameMode$ = "Single"
         `Sets up the pause menu.
         mouse = 1
         Paste image 53, 292, 244
         Set text size 25
         ink RGB(0,0,0), RGB(0,0,0)
         Center Text 512, 260, "PAUSED"
         Set text size 12
         Paste image 32, 432, 300
         Center Text 512, 320, "Resume Game"
         Paste image 32, 432, 370
         Paste image 39, 432, 440
         If missionNumber = 0
            Center Text 512, 390, "Restart"
            Center Text 512, 460, "End Endless Game"
         Else
            Center Text 512, 390, "Suspend Game"
            Center Text 512, 460, "End Mission Game"
         EndIf
      Else
         `Sets up the pause menu.
         mouse = 1
         Paste image 53, 292, 244
         Set text size 25
         ink RGB(0,0,0), RGB(0,0,0)
         Center Text 512, 260, "PAUSED"
         Set text size 12
         Paste image 33, 432, 300
         Center Text 512, 320, "Resume Game"
         Paste image 39, 432, 440
         Center Text 512, 460, "End Game"
      EndIf
   EndIf

   `Decreases timer between pause menu enabling and disabling.
   If pauseTimer > 0 then DEC pauseTimer

   `Toggles the debug menu on and off.
   If (keyState(48) + keyState(34) + keyState(22) = 3) and debugTimer = 0 and debugModeOn = 1
      debugMenuShow = 1 - debugMenuShow
      debugTimer = TIMER
      If gamePaused = 0
         gamePaused = 1
         Stop sound 57
         Play sound 57
         If bossForm = 0 then pause sound setMusic
         If bossForm > 0
            If bossForm <> 20
               pause sound bossMusic
            Else
               pause sound 20
            EndIf
         EndIf
         GoSub RemoveAllSprites
         pauseTimer = TIMER
      EndIf
   EndIf

   `Displays the debug menu.
   If debugMenuShow = 1

      `Displays box
      Paste image 101, 0, 234
      Set text size 20
      ink RGB(0,0,0), RGB(0,0,0)

      `Displays text.
      Center Text 512, 240, "DEBUG MENU - In Game"
      Set text size 14
      Center Text 300, 270, "Key"
      Center Text 724, 270, "Action"
      Center Text 300, 310, "1"
      If debugShowDataIn = 0 then Center Text 724, 310, "Show Game Data (WARNING: May lower framerate.)"
      If debugShowDataIn = 1 then Center Text 724, 310, "Hide Game Data"
      Center Text 300, 335, "2"
      If debugAllowDeath = 0 then Center Text 724, 335, "Enable depleting life by pressing RShift"
      If debugAllowDeath = 1 then Center Text 724, 335, "Disable depleting life by pressing RShift"
      Center Text 300, 360, "3"
      If debugInfiniteHealth = 0 then Center Text 724, 360, "Enable No Damage Mode"
      If debugInfiniteHealth = 1 then Center Text 724, 360, "Disable No Damage Mode"
      Center Text 300, 385, "4"
      If debugWaveAdvance = 0 then Center Text 724, 385, "Allow Wave Advancing by pressing TAB"
      If debugWaveAdvance = 1 then Center Text 724, 385, "Disallow Wave Advancing by pressing TAB"
      Center Text 300, 410, "5"
      If debugShowFPS = 0 then Center Text 724, 410, "Show Frames per Second counter"
      If debugShowFPS = 1 then Center Text 724, 410, "Hide Frames per Second counter"
      Center Text 300, 435, "6"
      If debugScorePlus = 0 then Center Text 724, 435, "Enable +100 points by pressing Q"
      If debugScorePlus = 1 then Center Text 724, 435, "Disable +100 points by pressing Q"
      Center Text 300, 460, "7"
      If debugKillsPlus = 0 then Center Text 724, 460, "Enable +5 kills by pressing R"
      If debugKillsPlus = 1 then Center Text 724, 460, "Disable +5 kills by pressing R"
      Center Text 300, 485, "8"
      If debugKillEnemies = 0 then Center Text 724, 485, "Enable R-Click to kill enemies"
      If debugKillEnemies = 1 then Center Text 724, 485, "Disable R-Click to kill enemies"
      Center Text 300, 510, "9"
      If debugStopEnemies = 0 then Center Text 724, 510, "Disable enemy spawning"
      If debugStopEnemies = 1 then Center Text 724, 510, "Enable enemy spawning"

      `Handles button presses on keys for changing menu options.
      For i = 2 to 10
         If keyState(i) = 1 and debugTimer = 0
            If i = 2 then debugShowDataIn = 1 - debugShowDataIn
            If i = 3 then debugAllowDeath = 1 - debugAllowDeath
            If i = 4 then debugInfiniteHealth = 1 - debugInfiniteHealth
            If i = 5 then debugWaveAdvance = 1 - debugWaveAdvance
            If i = 6 then debugShowFPS = 1 - debugShowFPS
            If i = 7 then debugScorePlus = 1 - debugScorePlus
            If i = 8 then debugKillsPlus = 1 - debugKillsPlus
            If i = 9 then debugKillEnemies = 1 - debugKillEnemies
            If i = 10 then debugStopEnemies = 1 - debugStopEnemies
            debugTimer = TIMER
         EndIf
      Next i

   EndIf

   `Decreases timer between debug menu opening and closing.
   If debugTimer > 0 then DEC debugTimer

Return

DebugTools:
`Processes in game commands that use debugging tools.

   `Data displaying
   If debugShowDataIn = 1
      Set text size 10
      ink RGB(255,255,255), RGB(0,0,0)
      If gameMode$ = "Single"

         `Player Data
         Text 50, 100, "Player 1"
         Text 50, 150, "Player Coords: " + playerData$(1,1) + ", " + playerData$(1,2)
         Text 50, 170, "Player Speeds: " + playerData$(1,3) + ", " + playerData$(1,4)
         Text 50, 190, "Health: " + playerData$(1,5)
         Text 50, 210, "Ship: " + playerData$(1,6)
         Text 50, 230, "Colour: " + playerData$(1,7)
         Text 50, 250, "Power Core 1: " + playerData$(1,8)
         Text 50, 270, "Power Core 2: " + playerData$(1,9)
         Text 50, 290, "Power Core 3: " + playerData$(1,10)
         Text 50, 310, "Power Core 4: " + playerData$(1,11)
         Text 50, 330, "Score: " + playerData$(1,13)
         Text 50, 350, "Kills: " + playerData$(1,14)

         `Enemy and Boss Data
         c = 0
         For j = 1 to 20
            c = c + enemyData(j,1)
         Next j
         Text 650, 420, "Enemies Active: " + STR$(c)
         c = 0
         For j = 1 to 5
            If bossData(j,10) <> 2 then c = c + bossData(j,1)
         Next j
         Text 650, 450, "Boss Units Active: " + STR$(c)

         `Power Core Data
         For i = 1 to 4
            Text 50 + ((i-1) * 120), 450, "Power Core " + STR$(i)
            Text 50 + ((i-1) * 120), 480, "Use: " + STR$(powerCores(i, 3))
            Text 50 + ((i-1) * 120), 500, "Cooldown: " + STR$(powerCores(i, 2))
         Next i

         `Projectile Data
         Text 50, 550, "Laser #"
         Text 100, 550, "Coords"
         Text 200, 550, "Speed"
         Text 250, 550, "Damage"
         Text 300, 550, "Strength"
         For i = 1 to 8
            Text 50, 580 + ((i-1) * 20), STR$(i)
            Text 100, 580 + ((i-1) * 20), STR$(playerProjectiles(i, 2)) + ", " + STR$(playerProjectiles(i, 3))
            Text 200, 580 + ((i-1) * 20), STR$(playerProjectiles(i, 4))
            Text 250, 580 + ((i-1) * 20), STR$(playerProjectiles(i, 5))
            Text 300, 580 + ((i-1) * 20), STR$(playerProjectiles(i, 6))
         Next i
      Else

         `Player Data
         For i = 1 to playerTotal
            If playerData$(i, 16) = "1"
               Text 50 + ((i-1) * 200), 100, "Player " + STR$(i)
               Text 50 + ((i-1) * 200), 150, "Player Coords: " + playerData$(i,1) + ", " + playerData$(i,2)
               Text 50 + ((i-1) * 200), 170, "Player Speeds: " + playerData$(i,3) + ", " + playerData$(i,4)
               Text 50 + ((i-1) * 200), 190, "Health: " + playerData$(i,5)
               Text 50 + ((i-1) * 200), 210, "Ship: " + playerData$(i,6)
               Text 50 + ((i-1) * 200), 230, "Colour: " + playerData$(i,7)
               Text 50 + ((i-1) * 200), 250, "Score: " + playerData$(i,13)
               Text 50 + ((i-1) * 200), 270, "Kills: " + playerData$(i,14)
               Text 50 + ((i-1) * 200), 290, "Controls: " + playerData$(i,17)
               Text 50 + ((i-1) * 200), 310, "Respawn Timer: " + playerData$(i,20)
            EndIf
         Next i

         `Enemy and Boss Data
         c = 0
         For j = 1 to 20
            c = c + enemyData(j,1)
         Next j
         Text 650, 420, "Enemies Active: " + STR$(c)
         c = 0
         For j = 1 to 5
            If bossData(j,10) <> 2 then c = c + bossData(j,1)
         Next j
         Text 650, 450, "Boss Units Active: " + STR$(c)

         `Power Core Data
         If missionNumber <> 0
            For i = 1 to 4
               Text 50 + ((i-1) * 120), 450, "Power Core " + STR$(i)
               Text 50 + ((i-1) * 120), 480, "Use: " + STR$(powerCores(i, 3))
               Text 50 + ((i-1) * 120), 500, "Cooldown: " + STR$(powerCores(i, 2))
            Next i
         EndIf

      EndIf
   EndIf

   `Wave advancing
   If keystate(15) = 1 and debugTimer = 0 and debugWaveAdvance = 1
      If gameMode$ <> "Multi" or missionNumber <> 0
         If missionNumber = 0 then INC enemyGroup#, 1
         If missionNumber <> 0 then INC missionStage, 1
      EndIf
      debugTimer = 5
   EndIf

   `Score increasing
   If keystate(16) = 1 and debugTimer = 0 and debugScorePlus = 1
      If gameMode$ <> "Multi" or missionNumber <> 0
         playerData$(1,13) = STR$(Val(playerData$(1,13)) + 100)
      EndIf
      debugTimer = 5
   EndIf

   `Kill increasing
   If keystate(19) = 1 and debugTimer = 0 and debugKillsPlus = 1
      If gameMode$ <> "Multi" or missionNumber <> 0
         playerData$(1,14) = STR$(Val(playerData$(1,14)) + 5)
      EndIf
      debugTimer = 5
   EndIf

Return

` === OTHER PROCEDURES ===

StopAllMusic:
`Used to stop any music from playing.

   For i = 1 to 50
      If sound exist(i) = 1 then Stop sound i
   Next i

Return

RemoveAllSprites:
`Used to remove all sprites from the screen.

   Sprite 1, 0, 0, 361
   Sprite 2, 0, 0, 361
   Sprite 3, 0, 0, 361
   Sprite 4, 0, 0, 361
   Sprite 9, 0, 0, 361
   Sprite 10, 0, 0, 361
   Sprite 11, 0, 0, 361
   Sprite 12, 0, 0, 361
   Sprite 13, 0, 0, 361
   Sprite 14, 0, 0, 361
   Sprite 15, 0, 0, 361
   Sprite 16, 0, 0, 361
   Sprite 17, 0, 0, 361
   Sprite 18, 0, 0, 361
   Sprite 19, 0, 0, 361
   Sprite 20, 0, 0, 361
   Sprite 21, 0, 0, 361
   Sprite 22, 0, 0, 361
   Sprite 23, 0, 0, 361
   Sprite 24, 0, 0, 361
   Sprite 25, 0, 0, 361
   Sprite 26, 0, 0, 361
   Sprite 27, 0, 0, 361
   Sprite 28, 0, 0, 361
   Sprite 29, 0, 0, 361
   Sprite 30, 0, 0, 361
   Sprite 31, 0, 0, 361
   Sprite 32, 0, 0, 361
   Sprite 33, 0, 0, 361
   Sprite 34, 0, 0, 361
   Sprite 35, 0, 0, 361
   Sprite 36, 0, 0, 361
   Sprite 37, 0, 0, 361
   Sprite 38, 0, 0, 361
   Sprite 39, 0, 0, 361
   Sprite 40, 0, 0, 361
   Sprite 41, 0, 0, 361
   Sprite 42, 0, 0, 361
   Sprite 51, 1024, 0, 361
   Sprite 52, 1024, 0, 361
   Sprite 53, 1024, 0, 361
   Sprite 54, 1024, 0, 361
   Sprite 55, 1024, 0, 361
   Sprite 61, 0, 768, 361
   Sprite 62, 0, 768, 361
   Sprite 63, 0, 768, 361
   Sprite 64, 0, 768, 361
   Sprite 65, 0, 768, 361
   Sprite 66, 0, 768, 361
   Sprite 67, 0, 768, 361
   Sprite 68, 0, 768, 361
   Sprite 69, 0, 768, 361
   Sprite 70, 0, 768, 361
   Sprite 71, 0, 768, 361
   Sprite 72, 0, 768, 361
   Sprite 73, 0, 768, 361
   Sprite 74, 0, 768, 361
   Sprite 75, 0, 768, 361
   Sprite 76, 0, 768, 361
   Sprite 77, 0, 768, 361
   Sprite 78, 0, 768, 361
   Sprite 79, 0, 768, 361
   Sprite 80, 0, 768, 361
   Sprite 81, 0, 768, 361
   Sprite 82, 0, 768, 361
   Sprite 83, 0, 768, 361
   Sprite 84, 0, 768, 361
   Sprite 85, 0, 768, 361
   Sprite 86, 0, 768, 361
   Sprite 87, 0, 768, 361
   Sprite 88, 0, 768, 361
   Sprite 89, 0, 768, 361
   Sprite 90, 0, 768, 361
   Sprite 91, 0, 768, 361
   Sprite 92, 0, 768, 361
   Sprite 93, 0, 768, 361
   Sprite 94, 0, 768, 361
   Sprite 95, 0, 768, 361
   Sprite 96, 0, 768, 361
   Sprite 97, 0, 768, 361
   Sprite 98, 0, 768, 361
   Sprite 99, 0, 768, 361
   Sprite 100, 0, 768, 361
   Sprite 101, 0, 768, 361
   Sprite 102, 0, 768, 361
   Sprite 103, 0, 768, 361
   Sprite 104, 0, 768, 361
   Sprite 105, 0, 768, 361

Return

DisplayPlayerInfo:
`Provides player with details about their account by displaying a box containing
`this data in every menu where this procedure is called.

   `Displys box.
   Set text size 14
   ink RGB(0,0,0), RGB(0,0,0)
   Paste image 81, 0, 0
   `Validates level and Bitz.
   If Val(playerAccount$(6)) > 20 then playerAccount$(6) = "20"
   If Val(playerAccount$(8)) > 9999 then playerAccount$(8) = "9999"
   If Val(playerAccount$(6)) < 1 then playerAccount$(6) = "1"
   If Val(playerAccount$(8)) < 0 then playerAccount$(8) = "0"
   `Displys name.
   Text 0, 0, playerAccount$(2)
   `Displays player level.
   Text 0, 30, "Level " + playerAccount$(6)
   `Displays total Bitz.
   Text 0, 60, playerAccount$(8) + " Bitz"
   Set text size 10
   Text 0, 45, STR$((Val(playerAccount$(6)) * 100) - Val(playerAccount$(7))) + " Exp to next level."

Return

FillMissions:
`Initialises the mission array.

   `Inputs coordinates for mission buttons.
   missionData$(1,4) = "Earth - Homeland"
   missionData$(1,2) = "90"
   missionData$(1,3) = "125"
   missionData$(2,4) = "Moon 2 - Gravitational Boogaloo"
   missionData$(2,2) = "310"
   missionData$(2,3) = "125"
   missionData$(3,4) = "Mars - Ambush on Approach"
   missionData$(3,2) = "530"
   missionData$(3,3) = "125"
   missionData$(4,4) = "Mars - The Sandy Sea"
   missionData$(4,2) = "750"
   missionData$(4,3) = "125"
   missionData$(5,4) = "Mars - Red Battle"
   missionData$(5,2) = "880"
   missionData$(5,3) = "180"
   missionData$(6,4) = "Asteroid Belt - Meteor Highway"
   missionData$(6,2) = "880"
   missionData$(6,3) = "340"
   missionData$(7,4) = "Jupiter - Gravity Assist"
   missionData$(7,2) = "880"
   missionData$(7,3) = "510"
   missionData$(8,4) = "Saturn - Ring Surfing"
   missionData$(8,2) = "780"
   missionData$(8,3) = "680"
   missionData$(9,4) = "Saturn - Attack on Titan"
   missionData$(9,2) = "600"
   missionData$(9,3) = "680"
   missionData$(10,4) = "Saturn - High Winds in the South"
   missionData$(10,2) = "450"
   missionData$(10,3) = "680"
   missionData$(11,4) = "Neptune - Surface Tension"
   missionData$(11,2) = "300"
   missionData$(11,3) = "680"
   missionData$(12,4) = "Neptune - Splashdown"
   missionData$(12,2) = "150"
   missionData$(12,3) = "600"
   missionData$(13,4) = "Pluto - Cold Shoulder"
   missionData$(13,2) = "150"
   missionData$(13,3) = "400"
   missionData$(14,4) = "Pluto - Snow Day"
   missionData$(14,2) = "210"
   missionData$(14,3) = "250"
   missionData$(15,4) = "Pluto - Rainbow Ravine"
   missionData$(15,2) = "400"
   missionData$(15,3) = "250"
   missionData$(16,4) = "Space - Planetary Pursuit"
   missionData$(16,2) = "550"
   missionData$(16,3) = "250"
   missionData$(17,4) = "Solarshpere - Defense Breaker"
   missionData$(17,2) = "700"
   missionData$(17,3) = "250"
   missionData$(18,4) = "Solarsphere - Intruder Alert"
   missionData$(18,2) = "700"
   missionData$(18,3) = "440"
   missionData$(19,4) = "Solarshphere - Save the System"
   missionData$(19,2) = "500"
   missionData$(19,3) = "440"
   missionData$(20,4) = "Solarsphere - Boom"
   missionData$(20,2) = "300"
   missionData$(20,3) = "440"

   If menu$ <> "Multi Main"
      For i = 1 to Val(playerSaves$(save, 2))
         If i = Val(playerSaves$(save, 2))
            missionData$(i,1) = "1"
         Else
            missionData$(i,1) = "2"
         EndIf
      Next i

      For i = (Val(playerSaves$(save, 2)) + 1) to 20
         missionData$(i,1) = "0"
      Next i
   EndIf

Return

ShootingModifiers:
`Applies the speed and power of the laser depending on ship and power used.

   `Space Fighter modifier.
   If playerData$(playerNumber,6) = "Space Fighter"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 16
         playerProjectiles(currentLaser, 5) = 1
         playerProjectiles(currentLaser, 6) = 2
         playerProjectiles(currentLaser, 7) = 402
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 11
            playerProjectiles(currentLaser, 5) = 3
            playerProjectiles(currentLaser, 6) = 3
            playerProjectiles(currentLaser, 7) = 403
         Else
            playerProjectiles(currentLaser, 4) = 11
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 2
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 404
            Else
               playerProjectiles(currentLaser, 7) = 401
            EndIf
         EndIf
      EndIf
   EndIf

   `Nebula Baron modifier.
   If playerData$(playerNumber,6) = "Nebula Baron"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 14
         playerProjectiles(currentLaser, 5) = 1
         playerProjectiles(currentLaser, 6) = 1
         playerProjectiles(currentLaser, 7) = 406
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 9
            playerProjectiles(currentLaser, 5) = 4
            playerProjectiles(currentLaser, 6) = 2
            playerProjectiles(currentLaser, 7) = 407
         Else
            playerProjectiles(currentLaser, 4) = 8
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 1
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 408
            Else
               playerProjectiles(currentLaser, 7) = 405
            EndIf
         EndIf
      EndIf
   EndIf

   `Binary Duo modifier.
   If playerData$(playerNumber,6) = "Binary Duo"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 15
         playerProjectiles(currentLaser, 5) = 1
         playerProjectiles(currentLaser, 6) = 1
         playerProjectiles(currentLaser, 7) = 410
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 11
            playerProjectiles(currentLaser, 5) = 1
            playerProjectiles(currentLaser, 6) = 3
            playerProjectiles(currentLaser, 7) = 411
         Else
            playerProjectiles(currentLaser, 4) = 9
            playerProjectiles(currentLaser, 5) = 1
            playerProjectiles(currentLaser, 6) = 2
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 412
            Else
               playerProjectiles(currentLaser, 7) = 409
            EndIf
         EndIf
      EndIf
   EndIf

   `Magneteer modifier.
   If playerData$(playerNumber,6) = "Magneteer"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 11
         playerProjectiles(currentLaser, 5) = 2
         playerProjectiles(currentLaser, 6) = 2
         playerProjectiles(currentLaser, 7) = 414
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 7
            playerProjectiles(currentLaser, 5) = 6
            playerProjectiles(currentLaser, 6) = 3
            playerProjectiles(currentLaser, 7) = 415
         Else
            playerProjectiles(currentLaser, 4) = 7
            playerProjectiles(currentLaser, 5) = 3
            playerProjectiles(currentLaser, 6) = 2
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 416
            Else
               playerProjectiles(currentLaser, 7) = 413
            EndIf
         EndIf
      EndIf
   EndIf

   `Bot Morpher modifier.
   If playerData$(playerNumber,6) = "Bot Morpher"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 12
         playerProjectiles(currentLaser, 5) = 4
         playerProjectiles(currentLaser, 6) = 2
         playerProjectiles(currentLaser, 7) = 418
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 9
            playerProjectiles(currentLaser, 5) = 7
            playerProjectiles(currentLaser, 6) = 2
            playerProjectiles(currentLaser, 7) = 419
         Else
            playerProjectiles(currentLaser, 4) = 8
            playerProjectiles(currentLaser, 5) = 3
            playerProjectiles(currentLaser, 6) = 2
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 420
            Else
               playerProjectiles(currentLaser, 7) = 417
            EndIf
         EndIf
      EndIf
   EndIf

   `Orbital Freighter modifier.
   If playerData$(playerNumber,6) = "Orbital Freighter"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 8
         playerProjectiles(currentLaser, 5) = 2
         playerProjectiles(currentLaser, 6) = 3
         playerProjectiles(currentLaser, 7) = 422
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 6
            playerProjectiles(currentLaser, 5) = 5
            playerProjectiles(currentLaser, 6) = 3
            playerProjectiles(currentLaser, 7) = 423
         Else
            playerProjectiles(currentLaser, 4) = 5
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 2
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 424
            Else
               playerProjectiles(currentLaser, 7) = 421
            EndIf
         EndIf
      EndIf
   EndIf

   `Dwarf Shuttle modifier.
   If playerData$(playerNumber,6) = "Dwarf Shuttle"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 10
         playerProjectiles(currentLaser, 5) = 1
         playerProjectiles(currentLaser, 6) = 1
         playerProjectiles(currentLaser, 7) = 426
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 5
            playerProjectiles(currentLaser, 5) = 4
            playerProjectiles(currentLaser, 6) = 2
            playerProjectiles(currentLaser, 7) = 427
         Else
            playerProjectiles(currentLaser, 4) = 7
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 1
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 428
            Else
               playerProjectiles(currentLaser, 7) = 425
            EndIf
         EndIf
      EndIf
   EndIf

   `Geocentral Star modifier.
   If playerData$(playerNumber,6) = "Geocentral Star"
      If powerCoreActive$ = "Ion Trigger"
         playerProjectiles(currentLaser, 4) = 16
         playerProjectiles(currentLaser, 5) = 1
         playerProjectiles(currentLaser, 6) = 1
         playerProjectiles(currentLaser, 7) = 430
      Else
         If powerCoreActive$ = "Power Pack"
            playerProjectiles(currentLaser, 4) = 11
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 2
            playerProjectiles(currentLaser, 7) = 431
         Else
            playerProjectiles(currentLaser, 4) = 10
            playerProjectiles(currentLaser, 5) = 2
            playerProjectiles(currentLaser, 6) = 1
            If powerCoreActive$ = "Diffraction Cannon"
               playerProjectiles(currentLaser, 7) = 432
            Else
               playerProjectiles(currentLaser, 7) = 429
            EndIf
         EndIf
      EndIf
   EndIf

Return

InputMessage:
`Used to enter new data into a message in Messaging mode and
`to validate the data entered.

   `Pastes input box.
   Paste image 43, 322, 250
   Paste image 45, 312, 240, 1
   Set text size 14
   ink RGB(0,0,0), RGB(0,0,0)
   If linesToInput >= 2
      Center Text 512, 350, "Line " + STR$(5 - linesToInput) + "/4. Enter to confirm. 1 - 64 characters on this line."
   Else
      Center Text 512, 350, "Line 4/4. Enter to confirm. 1 - 63 characters on this line."
   EndIf
   sync
   `Moves input box to correct place.
   ink RGB(0,0,0), RGB(255,255,255)
   Set Cursor 330, 290
   `Allows the player to input their message, then validates the data to
   `make sure it is within the correct length range.
   If linesToInput = 4
      Input messageLine1$
      If Len(messageLine1$) > 64 or Len(messageLine1$) < 1
         Play sound 56
         INC linesToInput
         messageLine1$ = ""
      Else
         Play sound 55
      EndIf
   EndIf
   If linesToInput = 3
      Input messageLine2$
      If Len(messageLine2$) > 64 or Len(messageLine2$) < 1
         Play sound 56
         INC linesToInput
         messageLine2$ = ""
      Else
         Play sound 55
      EndIf
   EndIf
   If linesToInput = 2
      Input messageLine3$
      If Len(messageLine3$) > 64 or Len(messageLine3$) < 1
         Play sound 56
         INC linesToInput
         messageLine3$ = ""
      Else
         Play sound 55
      EndIf
   EndIf
   If linesToInput = 1
      Input messageLine4$
      If Len(messageLine4$) > 63 or Len(messageLine4$) < 1
         Play sound 56
         INC linesToInput
         messageLine4$ = ""
      Else
         Play sound 55
         messageRead = 1
         `Finds an initial recipient for the message.
         If messagePlayer$ = ""
            k = 0
            GoSub FindRecipient
         Else
            messageDate$ = RIGHT$(LEFT$(get date$(), 5), 2) + "/" + LEFT$(get date$(), 2) + "/" + RIGHT$(get date$(), 2)
            For k = 1 to 10
               If messagePlayer$ = filePlayerStore$(k, 2) then messageFound = k
            Next k
         EndIf
      EndIf
   EndIf

Return

OutputMessage:
`Used to initialize the Read screen and to navigate through messages
`in the Messaging mode.

   `Initializes variables
   messagePlayer$ = ""
   messageLine1$ = ""
   messageLine2$ = ""
   messageLine3$ = ""
   messageLine4$ = ""
   messageDate$ = ""
   messageRead = 0
   messageCycles = 0
   i = messageFound
   messageFound = 0

   `Fetches the number of new and total messages the players.
   NewMessages()
   If TotalMessages() > 0
      `Searches therough the database for the next message.
      While messageFound = 0 and messageCycles <= 1
         If messageDirection$ = "Back"
            DEC i
         Else
            INC i
         EndIf
         If i > 100 then i = 1: INC messageCycles
         If i < 1 then i = 100: INC messageCycles
         If fileMessages$(i, 2) = playerAccount$(1)
            For j = 1 to 10
               If fileMessages$(i, 1) = filePlayerStore$(j, 1) then messagePlayer$ = filePlayerStore$(j, 2)
            Next j
            If messagePlayer$ = "" then messagePlayer$ = "A player that no longer exists"
            messageLine1$ = LEFT$(fileMessages$(i, 3), 64)
            If Len(fileMessages$(i, 3)) > 64 then messageLine2$ = RIGHT$(LEFT$(fileMessages$(i, 3), 128), 64)
            If Len(fileMessages$(i, 3)) > 128 then messageLine3$ = RIGHT$(LEFT$(fileMessages$(i, 3), 192), 64)
            If Len(fileMessages$(i, 3)) > 192 then messageLine4$ = RIGHT$(fileMessages$(i, 3), 63)
            For j = 1 to 64
               If RIGHT$(messageLine1$, 1) = " " then messageLine1$ = LEFT$(messageLine1$, Len(messageLine1$) - 1)
               If RIGHT$(messageLine2$, 1) = " " then messageLine2$ = LEFT$(messageLine2$, Len(messageLine2$) - 1)
               If RIGHT$(messageLine3$, 1) = " " then messageLine3$ = LEFT$(messageLine3$, Len(messageLine3$) - 1)
               If RIGHT$(messageLine4$, 1) = " " then messageLine4$ = LEFT$(messageLine4$, Len(messageLine4$) - 1)
            Next i
            messageDate$ = fileMessages$(i, 4)
            messageRead = Val(fileMessages$(i, 5))
            messageFound = i
         EndIf
      EndWhile
   Else
      messageFound = 0
   EndIf

Return

FindRecipient:
`Used to change the user the message is being sent to in messaging mode.

   playerFound = 0
   INC k
   If k > 10 then k = 1
   `Searches through the database for a recipient.
   If filePlayerStore$(k, 4) = "1"
      messagePlayer$ = filePlayerStore$(k, 2)
      playerFound = k
   EndIf
   `Updates the date field.
   messageDate$ = RIGHT$(LEFT$(get date$(), 5), 2) + "/" + LEFT$(get date$(), 2) + "/" + RIGHT$(get date$(), 2)
   If playerFound = 0 then GoSub FindRecipient

Return

TakeScreenshot:
`Used to save a screenshot to the Screenshots file in the game files.

   If bmpTimer > 0 then DEC bmpTimer

   If keystate(59) = 1 and bmpTimer <= 0
      bmpDate$ = RIGHT$(LEFT$(get date$(), 5), 2) + "-" + LEFT$(get date$(), 2) + "-" + RIGHT$(get date$(), 2)
      bmpTime$ = LEFT$(get time$(), 2) + "-" + RIGHT$(LEFT$(get time$(), 5), 2) + "-" + RIGHT$(get time$(), 2)
      If SaveScreenshot(bmpDate$, bmpTime$) = 1 then saveTimer = 20: bmpTimer = 60
   EndIf

Return

RemoveEnemyProjectiles:
`Used to remove any enemy projectiles still on-screen after a boss is defeated by
`marking the projectiles as inactive.

   For l = 1 to 20
      enemyProjectiles(l, 1) = 0
   Next l

Return

`==================================================================================================

`=======================================================================
`=========================== FUNCTIONS START ===========================
`=======================================================================

FunctMenu:
`======================
`MENU FUNCTIONS
`======================

Function BossModulus(groupNumber#)
`Self-programmed modulus function used to calculate when boss should appear in endless mode.
`Takes current wave number and determines if it is a multiple of 50.

   `Initialising variables.
   d = 0
   num = 0
   groupNumber# = groupNumber#

   num = groupNumber#
   INC d
   While num > 1
      num = num - 50
   EndWhile

EndFunction num

Function NameAvailability(nameCheck$)
`Function used to check for the availability of a player's name in the database.
`Returns a one if the name is not being used. Returns a zero if the name
`matches a name in the database.

   `Declaing and initializing variables
   nameAvailable = 1
   nameCheck$ = nameCheck$

   For i = 1 to 10
      If filePlayerStore$(i, 2) = nameCheck$ then nameAvailable = 0
   Next i

   For i = 1 to 100
      If fileScoreStore$(i, 2) = nameCheck$ then nameAvailable = 0
   Next i

EndFunction nameAvailable

Function FetchOldestDateAccount()
`Finds the oldest date stored in the account array. Performs calculations
`on each date in the account table to find the oldest account. Used to
`determine which account to delete when the database is full.

   `Initialising variables.
   oldest = 0
   oldDate$ = ""
   oldDate$ = "31/12/99"

   `Performs date comparisons to find oldest account.
   For i = 1 to 10
      `Year comparison.
      If Val(RIGHT$(fileAccountStore$(i, 11), 2)) < Val(RIGHT$(oldDate$, 2))
         oldest = i
         oldDate$ = fileAccountStore$(i, 11)
      Else
         If Val(RIGHT$(fileAccountStore$(i, 11), 2)) = Val(RIGHT$(oldDate$, 2))
            `Month comparison
            If Val(LEFT$(RIGHT$(fileAccountStore$(i, 11), 5), 2)) < Val(LEFT$(RIGHT$(oldDate$, 5),2))
               oldest = i
               oldDate$ = fileAccountStore$(i, 11)
            Else
               If Val(LEFT$(RIGHT$(fileAccountStore$(i, 11), 5), 2)) = Val(LEFT$(RIGHT$(oldDate$, 5),2))
                  `Day comparison
                  If Val(LEFT$(fileAccountStore$(i, 11), 2)) < Val(LEFT$(oldDate$, 5))
                     oldest = i
                     oldDate$ = fileAccountStore$(i, 11)
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf
   Next i

EndFunction oldest

Function FetchOldestDateMessages()
`Finds the oldest date stored in the message array. Performs calculations
`on each date in the messages table to find the oldest message.

   `Initialising variables.
   oldest = 0
   oldDate$ = ""
   oldDate$ = "31/12/99"

   `Performs date comparisons to find oldest message.
   For i = 1 to 100
      `Year comparison.
      If Val(RIGHT$(fileAccountStore$(i, 11), 2)) < Val(RIGHT$(oldDate$, 2))
         oldest = i
         oldDate$ = fileAccountStore$(i, 11)
      Else
         If Val(RIGHT$(fileAccountStore$(i, 11), 2)) = Val(RIGHT$(oldDate$, 2))
            `Month comparison
            If Val(LEFT$(RIGHT$(fileAccountStore$(i, 11), 5), 2)) < Val(LEFT$(RIGHT$(oldDate$, 5),2))
               oldest = i
               oldDate$ = fileAccountStore$(i, 11)
            Else
               If Val(LEFT$(RIGHT$(fileAccountStore$(i, 11), 5), 2)) = Val(LEFT$(RIGHT$(oldDate$, 5),2))
                  `Day comparison
                  If Val(LEFT$(fileAccountStore$(i, 11), 2)) < Val(LEFT$(oldDate$, 5))
                     oldest = i
                     oldDate$ = fileAccountStore$(i, 11)
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf
   Next i

EndFunction oldest

Function SaveRemoval(saveReplace)
`Function used to delete a specified player's account. Takes the number of the
`file to delete, and clears out all of the data in that account. Will return
`1 if success, 0 if failure.

   `Initialising variables
   deleteSuccess = 0

   If saveReplace >= 1 and saveReplace <= 10
      `Writing data to player array
      filePlayerStore$(saveReplace, 1) = "-"
      filePlayerStore$(saveReplace, 2) = "NONAME"
      filePlayerStore$(saveReplace, 3) = "NOPASS"
      filePlayerStore$(saveReplace, 4) = "0"
      `Writing data to player link array
      filePlayerLink$(saveReplace, 1) = "-"
      filePlayerLink$(saveReplace, 2) = "-"
      `Writing data to account array
      fileAccountStore$(saveReplace, 1) = "-"
      fileAccountStore$(saveReplace, 2) = "0"
      fileAccountStore$(saveReplace, 3) = "0"
      fileAccountStore$(saveReplace, 4) = "0"
      fileAccountStore$(saveReplace, 5) = "-"
      fileAccountStore$(saveReplace, 6) = "-"
      fileAccountStore$(saveReplace, 7) = "-"
      fileAccountStore$(saveReplace, 8) = "-"
      fileAccountStore$(saveReplace, 9) = "-"
      fileAccountStore$(saveReplace, 10) = "-"
      fileAccountStore$(saveReplace, 11) = "01/01/14"
      `Writing purchase info to array.
      filePurchases$(saveReplace, 1) = "-"
      filePurchases$(saveReplace, 2) = "0"
      filePurchases$(saveReplace, 3) = "0"
      filePurchases$(saveReplace, 4) = "0"
      filePurchases$(saveReplace, 5) = "0"
      `Writing save info to array.
      For j = 1 to 3
         fileSaveStore$((3*(saveReplace-1)) + j, 1) = "-"
         fileSaveStore$((3*(saveReplace-1)) + j, 2) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 3) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 4) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 5) = "-"
         fileSaveStore$((3*(saveReplace-1)) + j, 6) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 7) = "0"
      Next j
      `Writing save link info to array.
      fileSaveLink$(saveReplace, 1) = "-"
      fileSaveLink$(saveReplace, 2) = "-"
      fileSaveLink$(saveReplace, 3) = "-"
      fileSaveLink$(saveReplace, 4) = "-"
      deleteSuccess = 1
   EndIf

EndFunction deleteSuccess

Function SaveCreation(newName$, newPass1$, saveReplace, totalPlayers$)
`Function used to create a new player account. Takes player name, password, the
`number of the next player ID, and the number of the record to fill. Creates player,
`account and save IDs from the next player ID, then fills the account with all of the
`relevant data.

   `Initialising variables
   createSuccess = 0

   If saveReplace >= 1 and saveReplace <= 10
      `Creating player, account and save IDs.
      If Len(totalPlayers$) = 1 then filePlayerStore$(saveReplace, 1) = "P00" + totalPlayers$
      If Len(totalPlayers$) = 2 then filePlayerStore$(saveReplace, 1) = "P0" + totalPlayers$
      If Len(totalPlayers$) = 3 then filePlayerStore$(saveReplace, 1) = "P" + totalPlayers$
      If Len(totalPlayers$) = 1 then fileAccountStore$(saveReplace, 1) = "C00" + totalPlayers$
      If Len(totalPlayers$) = 2 then fileAccountStore$(saveReplace, 1) = "C0" + totalPlayers$
      If Len(totalPlayers$) = 3 then fileAccountStore$(saveReplace, 1) = "C" + totalPlayers$
      For j = 1 to 3
         If Len(totalPlayers$) = 1 then fileSaveStore$((3*(saveReplace-1)) + j, 1) = "SC00" + totalPlayers$ + STR$(j)
         If Len(totalPlayers$) = 2 then fileSaveStore$((3*(saveReplace-1)) + j, 1) = "SC0" + totalPlayers$ + STR$(j)
         If Len(totalPlayers$) = 3 then fileSaveStore$((3*(saveReplace-1)) + j, 1) = "SC" + totalPlayers$ + STR$(j)
      Next j
      `Writing data to player array
      filePlayerStore$(saveReplace, 2) = newName$
      filePlayerStore$(saveReplace, 3) = newPass1$
      filePlayerStore$(saveReplace, 4) = "1"
      `Writing data to player link array
      filePlayerLink$(saveReplace, 1) = filePlayerStore$(saveReplace, 1)
      filePlayerLink$(saveReplace, 2) = fileAccountStore$(saveReplace, 1)
      `Writing data to account array
      fileAccountStore$(saveReplace, 2) = "1"
      fileAccountStore$(saveReplace, 3) = "0"
      fileAccountStore$(saveReplace, 4) = "0"
      fileAccountStore$(saveReplace, 5) = "Space Fighter"
      fileAccountStore$(saveReplace, 6) = "Blue"
      fileAccountStore$(saveReplace, 7) = "Flight Kit"
      fileAccountStore$(saveReplace, 8) = "Power Pack"
      fileAccountStore$(saveReplace, 9) = "Ion Trigger"
      fileAccountStore$(saveReplace, 10) = "Boost Array"
      fileAccountStore$(saveReplace, 11) = (RIGHT$((LEFT$(get date$(), 5)), 2)) + "/" + (LEFT$(get date$(), 2))
      fileAccountStore$(saveReplace, 11) = fileAccountStore$(saveReplace, 11) + "/" + (RIGHT$(get date$(), 2))
      `Writing purchase info to array.
      filePurchases$(saveReplace, 1) = fileAccountStore$(saveReplace, 1)
      filePurchases$(saveReplace, 2) = "0"
      filePurchases$(saveReplace, 3) = "0"
      filePurchases$(saveReplace, 4) = "0"
      filePurchases$(saveReplace, 5) = "0"
      `Writing save info to array.
      For j = 1 to 3
         fileSaveStore$((3*(saveReplace-1)) + j, 2) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 3) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 4) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 5) = "-"
         fileSaveStore$((3*(saveReplace-1)) + j, 6) = "0"
         fileSaveStore$((3*(saveReplace-1)) + j, 7) = "0"
      Next j
      `Writing save link info to array.
      fileSaveLink$(saveReplace, 1) = fileAccountStore$(saveReplace, 1)
      fileSaveLink$(saveReplace, 2) = fileSaveStore$((3*(saveReplace-1)) + 1, 1)
      fileSaveLink$(saveReplace, 3) = fileSaveStore$((3*(saveReplace-1)) + 2, 1)
      fileSaveLink$(saveReplace, 4) = fileSaveStore$((3*(saveReplace-1)) + 3, 1)
      createSuccess = 1
   EndIf

EndFunction createSuccess

Function NewMessages()
`Count the amount of unread messages the player has. Looks through the database for
`all of the messages with the current player as the recipient, and returns the number
`of these messages that have not been read.

   `Initializing variables
   messageTotal = 0

   For i = 1 to 100
      If fileMessages$(i, 2) = playerAccount$(1) and fileMessages$(i, 5) = "0"
         INC messageTotal
      EndIf
   Next i

EndFunction messageTotal

Function TotalMessages()
`Counts the amount of old and new messages the player has. Looks through the database for
`all of the messages with the current player as the recipient, and returns the total
`number of these messages.

   `Initializing variables
   messageTotal = 0

   For i = 1 to 100
      If fileMessages$(i, 2) = playerAccount$(1)
         INC messageTotal
      EndIf
   Next i

EndFunction messageTotal

Function SaveScreenshot(bmpDate$, bmpTime$)
`Used to take pictures of the game screen and save them. Takes the time and date from the
`machine to create the image's file name. Image is then taken and saved in the game files.

   `Initialising variables.
   bmpDate$ = bmpDate$
   bmpTime$ = bmpTime$
   bmpFile$ = ""
   bmpSuccess = 0

   bmpFile$ = "Screenshots/Image " + bmpDate$ + " " + bmpTime$ + ".jpg"
   If file exist(bmpFile$) = 0
      Save bitmap bmpFile$, 0
      bmpSuccess = 1
   EndIf

EndFunction bmpSuccess

`====================================================================================================================

FunctGame:
`======================
`GAME FUNCTIONS
`======================

Function EnemyPresence()
`Checks if there are no enemies present to advance the wave. Takes all enemy/boss
`presence values from the arrays and checks if all of them are zero.

   `Initializing variables
   enemyPresent = 1

   If enemyData(1,1) = 0 and enemyData(2,1) = 0 and enemyData(3,1) = 0 and enemyData(4,1) = 0 and enemyData(5,1) = 0
      If enemyData(6,1) = 0 and enemyData(7,1) = 0 and enemyData(8,1) = 0 and enemyData(9,1) = 0 and enemyData(10,1) = 0
         If enemyData(11,1) = 0 and enemyData(12,1) = 0 and enemyData(13,1) = 0 and enemyData(14,1) = 0 and enemyData(15,1) = 0
            If enemyData(16,1) = 0 and enemyData(17,1) = 0 and enemyData(18,1) = 0
               If enemyData(19,1) = 0 and enemyData(20,1) = 0
                  If bossData(1,1) = 0 and bossData(2,1) = 0 and bossData(3,1) = 0 and bossData(4,1) = 0 and bossData(5,1) = 0
                     enemyPresent = 0
                  EndIf
               EndIf
            EndIf
         EndIf
      EndIf
   EndIf

EndFunction enemyPresent

Function AutoFireConfirm(controls$)
`Used to check if the user is pressing the key to enable or disable the auto
`fire function. Will check different key depending on the control scheme the
`user has picked.

   `Initialising variables.
   controls$ = controls$
   autoConfirm = 0

   `Changes value depending on the player's control scheme.
   If (controls$ = "WASD" and keyState(18) = 1) then autoConfirm = 1
   If (controls$ = "Arrow Keys" and keyState(54) = 1) then autoConfirm = 1
   If (controls$ = "IJKL" and keyState(25) = 1) then autoConfirm = 1
   If (controls$ = "Numpad" and keyState(73) = 1) then autoConfirm = 1

EndFunction autoConfirm

Function ProjectileConfirm(controls$, autoFire)
`Used to check if the player wants to shoot a projectile. When the corresponding
`button is pressed, the game marks the appropriate value as 1, and returns it for
`the game loop to use.

   `Initialising variables
   controls$ = controls$
   laserConfirm = 0

   `Changes value depending on the player's control scheme, or if auto fire is enabled.
   If controls$ = "WASD" and spacekey() = 1 then laserConfirm = 1
   If controls$ = "Arrow Keys" and returnkey() = 1 then laserConfirm = 1
   If controls$ = "IJKL" and keyState(24) = 1 then laserConfirm = 1
   If controls$ = "Numpad" and keyState(78) = 1 then laserConfirm = 1
   If autoFire = 1 then laserConfirm = 1

EndFunction laserConfirm

Function PowerCoreConfirm(controls$, powerSlot)
`Used to check if the player wants to activate a power core. When the corresponding
`button is pressed, the game marks the appropriate value as 1, and returns it for
`the game loop to use.

   `Initialising variables.
   controls$ = controls$
   powerSlot = powerSlot
   powerPresses = 0

   `Changes value depending on the player's control scheme.
   Select powerSlot
      Case 1
         If controls$ = "WASD" and keyState(2) = 1 then powerPresses = 1
         If controls$ = "Arrow Keys" and keyState(44) = 1 then powerPresses = 1
         If controls$ = "IJKL" and keyState(8) = 1 then powerPresses = 1
         If controls$ = "Numpad" and keyState(79) = 1 then powerPresses = 1
      EndCase
      Case 2
         If controls$ = "WASD" and keyState(3) = 1 then powerPresses = 1
         If controls$ = "Arrow Keys" and keyState(45) = 1 then powerPresses = 1
         If controls$ = "IJKL" and keyState(9) = 1 then powerPresses = 1
         If controls$ = "Numpad" and keyState(80) = 1 then powerPresses = 1
      EndCase
      Case 3
         If controls$ = "WASD" and keyState(4) = 1 then powerPresses = 1
         If controls$ = "Arrow Keys" and keyState(46) = 1 then powerPresses = 1
         If controls$ = "IJKL" and keyState(10) = 1 then powerPresses = 1
         If controls$ = "Numpad" and keyState(81) = 1 then powerPresses = 1
      EndCase
      Case 4
         If controls$ = "WASD" and keyState(5) = 1 then powerPresses = 1
         If controls$ = "Arrow Keys" and keyState(47) = 1 then powerPresses = 1
         If controls$ = "IJKL" and keyState(11) = 1 then powerPresses = 1
         If controls$ = "Numpad" and keyState(156) = 1 then powerPresses = 1
      EndCase
   EndSelect

EndFunction powerPresses
